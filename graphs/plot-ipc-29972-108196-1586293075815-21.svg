<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" width="1792" height="2899"><svg id="SvgjsSvg1001" width="2" height="0" focusable="false" style="overflow:hidden;top:-100%;left:-100%;position:absolute;opacity:0"><polyline id="SvgjsPolyline1002" points="0,0"></polyline><path id="SvgjsPath1003" d="M0 0 "></path></svg><line id="SvgjsLine1005" x1="149" y1="20" x2="149" y2="2899" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1006" font-family="Helvetica, Arial, sans-serif" x="55.59375" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1007" dy="20.8" x="55.59375" svgjs:data="{&quot;newLined&quot;:true}">Web Content/GeckoMain</tspan></text><line id="SvgjsLine1008" x1="448" y1="20" x2="448" y2="2899" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1009" font-family="Helvetica, Arial, sans-serif" x="373.48046875" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1010" dy="20.8" x="373.48046875" svgjs:data="{&quot;newLined&quot;:true}">Web Content/24864</tspan></text><line id="SvgjsLine1011" x1="746" y1="20" x2="746" y2="2899" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1012" font-family="Helvetica, Arial, sans-serif" x="657.3671875" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1013" dy="20.8" x="657.3671875" svgjs:data="{&quot;newLined&quot;:true}">Web Content/IO Sender</tspan></text><line id="SvgjsLine1014" x1="1045" y1="20" x2="1045" y2="2899" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1015" font-family="Helvetica, Arial, sans-serif" x="944.33203125" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1016" dy="20.8" x="944.33203125" svgjs:data="{&quot;newLined&quot;:true}">Parent Process/IO Receiver</tspan></text><line id="SvgjsLine1017" x1="1344" y1="20" x2="1344" y2="2899" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1018" font-family="Helvetica, Arial, sans-serif" x="1257.94140625" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1019" dy="20.8" x="1257.94140625" svgjs:data="{&quot;newLined&quot;:true}">Parent Process/107644</tspan></text><line id="SvgjsLine1020" x1="1642" y1="20" x2="1642" y2="2899" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1021" font-family="Helvetica, Arial, sans-serif" x="1541.62890625" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1022" dy="20.8" x="1541.62890625" svgjs:data="{&quot;newLined&quot;:true}">Parent Process/GeckoMain</tspan></text><line id="SvgjsLine1023" x1="895.5" y1="0" x2="895.5" y2="2899" stroke-dasharray="2,2" stroke="#ffb080" stroke-width="2"></line><text id="SvgjsText1024" font-family="Helvetica, Arial, sans-serif" x="29" y="31.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1025" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 0 ms</tspan></text><line id="SvgjsLine1026" x1="149" y1="40" x2="1642" y2="40" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1027" font-family="Helvetica, Arial, sans-serif" x="29" y="59.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1028" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 13.69 ms</tspan></text><line id="SvgjsLine1029" x1="149" y1="68" x2="1642" y2="68" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1030" font-family="Helvetica, Arial, sans-serif" x="29" y="88.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1031" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 27.38 ms</tspan></text><line id="SvgjsLine1032" x1="149" y1="97" x2="1642" y2="97" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1033" font-family="Helvetica, Arial, sans-serif" x="29" y="116.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1034" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 41.07 ms</tspan></text><line id="SvgjsLine1035" x1="149" y1="125" x2="1642" y2="125" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1036" font-family="Helvetica, Arial, sans-serif" x="29" y="145.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1037" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 54.77 ms</tspan></text><line id="SvgjsLine1038" x1="149" y1="154" x2="1642" y2="154" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1039" font-family="Helvetica, Arial, sans-serif" x="29" y="173.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1040" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 68.46 ms</tspan></text><line id="SvgjsLine1041" x1="149" y1="182" x2="1642" y2="182" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1042" font-family="Helvetica, Arial, sans-serif" x="29" y="202.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1043" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 82.15 ms</tspan></text><line id="SvgjsLine1044" x1="149" y1="211" x2="1642" y2="211" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1045" font-family="Helvetica, Arial, sans-serif" x="29" y="231.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1046" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 95.85 ms</tspan></text><line id="SvgjsLine1047" x1="149" y1="240" x2="1642" y2="240" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1048" font-family="Helvetica, Arial, sans-serif" x="29" y="259.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1049" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 109.54 ms</tspan></text><line id="SvgjsLine1050" x1="149" y1="268" x2="1642" y2="268" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1051" font-family="Helvetica, Arial, sans-serif" x="29" y="288.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1052" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 123.23 ms</tspan></text><line id="SvgjsLine1053" x1="149" y1="297" x2="1642" y2="297" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1054" font-family="Helvetica, Arial, sans-serif" x="29" y="316.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1055" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 136.93 ms</tspan></text><line id="SvgjsLine1056" x1="149" y1="325" x2="1642" y2="325" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1057" font-family="Helvetica, Arial, sans-serif" x="29" y="345.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1058" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 150.62 ms</tspan></text><line id="SvgjsLine1059" x1="149" y1="354" x2="1642" y2="354" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1060" font-family="Helvetica, Arial, sans-serif" x="29" y="374.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1061" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 164.31 ms</tspan></text><line id="SvgjsLine1062" x1="149" y1="383" x2="1642" y2="383" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1063" font-family="Helvetica, Arial, sans-serif" x="29" y="402.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1064" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 178 ms</tspan></text><line id="SvgjsLine1065" x1="149" y1="411" x2="1642" y2="411" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1066" font-family="Helvetica, Arial, sans-serif" x="29" y="431.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1067" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 191.7 ms</tspan></text><line id="SvgjsLine1068" x1="149" y1="440" x2="1642" y2="440" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1069" font-family="Helvetica, Arial, sans-serif" x="29" y="459.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1070" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 205.39 ms</tspan></text><line id="SvgjsLine1071" x1="149" y1="468" x2="1642" y2="468" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1072" font-family="Helvetica, Arial, sans-serif" x="29" y="488.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1073" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 219.08 ms</tspan></text><line id="SvgjsLine1074" x1="149" y1="497" x2="1642" y2="497" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1075" font-family="Helvetica, Arial, sans-serif" x="29" y="517.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1076" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 232.78 ms</tspan></text><line id="SvgjsLine1077" x1="149" y1="526" x2="1642" y2="526" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1078" font-family="Helvetica, Arial, sans-serif" x="29" y="545.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1079" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 246.47 ms</tspan></text><line id="SvgjsLine1080" x1="149" y1="554" x2="1642" y2="554" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1081" font-family="Helvetica, Arial, sans-serif" x="29" y="574.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1082" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 260.16 ms</tspan></text><line id="SvgjsLine1083" x1="149" y1="583" x2="1642" y2="583" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1084" font-family="Helvetica, Arial, sans-serif" x="29" y="602.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1085" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 273.86 ms</tspan></text><line id="SvgjsLine1086" x1="149" y1="611" x2="1642" y2="611" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1087" font-family="Helvetica, Arial, sans-serif" x="29" y="631.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1088" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 287.55 ms</tspan></text><line id="SvgjsLine1089" x1="149" y1="640" x2="1642" y2="640" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1090" font-family="Helvetica, Arial, sans-serif" x="29" y="659.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1091" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 301.24 ms</tspan></text><line id="SvgjsLine1092" x1="149" y1="668" x2="1642" y2="668" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1093" font-family="Helvetica, Arial, sans-serif" x="29" y="688.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1094" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 314.93 ms</tspan></text><line id="SvgjsLine1095" x1="149" y1="697" x2="1642" y2="697" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1096" font-family="Helvetica, Arial, sans-serif" x="29" y="717.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1097" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 328.63 ms</tspan></text><line id="SvgjsLine1098" x1="149" y1="726" x2="1642" y2="726" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1099" font-family="Helvetica, Arial, sans-serif" x="29" y="745.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1100" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 342.32 ms</tspan></text><line id="SvgjsLine1101" x1="149" y1="754" x2="1642" y2="754" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1102" font-family="Helvetica, Arial, sans-serif" x="29" y="774.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1103" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 356.01 ms</tspan></text><line id="SvgjsLine1104" x1="149" y1="783" x2="1642" y2="783" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1105" font-family="Helvetica, Arial, sans-serif" x="29" y="802.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1106" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 369.71 ms</tspan></text><line id="SvgjsLine1107" x1="149" y1="811" x2="1642" y2="811" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1108" font-family="Helvetica, Arial, sans-serif" x="29" y="831.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1109" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 383.4 ms</tspan></text><line id="SvgjsLine1110" x1="149" y1="840" x2="1642" y2="840" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1111" font-family="Helvetica, Arial, sans-serif" x="29" y="860.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1112" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 397.09 ms</tspan></text><line id="SvgjsLine1113" x1="149" y1="869" x2="1642" y2="869" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1114" font-family="Helvetica, Arial, sans-serif" x="29" y="888.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1115" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 410.79 ms</tspan></text><line id="SvgjsLine1116" x1="149" y1="897" x2="1642" y2="897" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1117" font-family="Helvetica, Arial, sans-serif" x="29" y="917.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1118" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 424.48 ms</tspan></text><line id="SvgjsLine1119" x1="149" y1="926" x2="1642" y2="926" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1120" font-family="Helvetica, Arial, sans-serif" x="29" y="945.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1121" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 438.17 ms</tspan></text><line id="SvgjsLine1122" x1="149" y1="954" x2="1642" y2="954" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1123" font-family="Helvetica, Arial, sans-serif" x="29" y="974.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1124" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 451.86 ms</tspan></text><line id="SvgjsLine1125" x1="149" y1="983" x2="1642" y2="983" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1126" font-family="Helvetica, Arial, sans-serif" x="29" y="1003.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1127" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 465.56 ms</tspan></text><line id="SvgjsLine1128" x1="149" y1="1012" x2="1642" y2="1012" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1129" font-family="Helvetica, Arial, sans-serif" x="29" y="1031.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1130" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 479.25 ms</tspan></text><line id="SvgjsLine1131" x1="149" y1="1040" x2="1642" y2="1040" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1132" font-family="Helvetica, Arial, sans-serif" x="29" y="1060.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1133" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 492.94 ms</tspan></text><line id="SvgjsLine1134" x1="149" y1="1069" x2="1642" y2="1069" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1135" font-family="Helvetica, Arial, sans-serif" x="29" y="1088.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1136" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 506.64 ms</tspan></text><line id="SvgjsLine1137" x1="149" y1="1097" x2="1642" y2="1097" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1138" font-family="Helvetica, Arial, sans-serif" x="29" y="1117.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1139" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 520.33 ms</tspan></text><line id="SvgjsLine1140" x1="149" y1="1126" x2="1642" y2="1126" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1141" font-family="Helvetica, Arial, sans-serif" x="29" y="1146.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1142" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 534.02 ms</tspan></text><line id="SvgjsLine1143" x1="149" y1="1155" x2="1642" y2="1155" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1144" font-family="Helvetica, Arial, sans-serif" x="29" y="1174.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1145" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 547.72 ms</tspan></text><line id="SvgjsLine1146" x1="149" y1="1183" x2="1642" y2="1183" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1147" font-family="Helvetica, Arial, sans-serif" x="29" y="1203.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1148" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 561.41 ms</tspan></text><line id="SvgjsLine1149" x1="149" y1="1212" x2="1642" y2="1212" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1150" font-family="Helvetica, Arial, sans-serif" x="29" y="1231.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1151" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 575.1 ms</tspan></text><line id="SvgjsLine1152" x1="149" y1="1240" x2="1642" y2="1240" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1153" font-family="Helvetica, Arial, sans-serif" x="29" y="1260.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1154" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 588.79 ms</tspan></text><line id="SvgjsLine1155" x1="149" y1="1269" x2="1642" y2="1269" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1156" font-family="Helvetica, Arial, sans-serif" x="29" y="1288.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1157" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 602.49 ms</tspan></text><line id="SvgjsLine1158" x1="149" y1="1297" x2="1642" y2="1297" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1159" font-family="Helvetica, Arial, sans-serif" x="29" y="1317.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1160" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 616.18 ms</tspan></text><line id="SvgjsLine1161" x1="149" y1="1326" x2="1642" y2="1326" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1162" font-family="Helvetica, Arial, sans-serif" x="29" y="1346.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1163" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 629.87 ms</tspan></text><line id="SvgjsLine1164" x1="149" y1="1355" x2="1642" y2="1355" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1165" font-family="Helvetica, Arial, sans-serif" x="29" y="1374.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1166" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 643.57 ms</tspan></text><line id="SvgjsLine1167" x1="149" y1="1383" x2="1642" y2="1383" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1168" font-family="Helvetica, Arial, sans-serif" x="29" y="1403.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1169" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 657.26 ms</tspan></text><line id="SvgjsLine1170" x1="149" y1="1412" x2="1642" y2="1412" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1171" font-family="Helvetica, Arial, sans-serif" x="29" y="1431.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1172" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 670.95 ms</tspan></text><line id="SvgjsLine1173" x1="149" y1="1440" x2="1642" y2="1440" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1174" font-family="Helvetica, Arial, sans-serif" x="29" y="1460.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1175" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 684.65 ms</tspan></text><line id="SvgjsLine1176" x1="149" y1="1469" x2="1642" y2="1469" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1177" font-family="Helvetica, Arial, sans-serif" x="29" y="1489.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1178" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 698.34 ms</tspan></text><line id="SvgjsLine1179" x1="149" y1="1498" x2="1642" y2="1498" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1180" font-family="Helvetica, Arial, sans-serif" x="29" y="1517.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1181" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 712.03 ms</tspan></text><line id="SvgjsLine1182" x1="149" y1="1526" x2="1642" y2="1526" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1183" font-family="Helvetica, Arial, sans-serif" x="29" y="1546.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1184" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 725.73 ms</tspan></text><line id="SvgjsLine1185" x1="149" y1="1555" x2="1642" y2="1555" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1186" font-family="Helvetica, Arial, sans-serif" x="29" y="1574.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1187" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 739.42 ms</tspan></text><line id="SvgjsLine1188" x1="149" y1="1583" x2="1642" y2="1583" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1189" font-family="Helvetica, Arial, sans-serif" x="29" y="1603.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1190" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 753.11 ms</tspan></text><line id="SvgjsLine1191" x1="149" y1="1612" x2="1642" y2="1612" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1192" font-family="Helvetica, Arial, sans-serif" x="29" y="1632.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1193" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 766.8 ms</tspan></text><line id="SvgjsLine1194" x1="149" y1="1641" x2="1642" y2="1641" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1195" font-family="Helvetica, Arial, sans-serif" x="29" y="1660.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1196" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 780.5 ms</tspan></text><line id="SvgjsLine1197" x1="149" y1="1669" x2="1642" y2="1669" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1198" font-family="Helvetica, Arial, sans-serif" x="29" y="1689.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1199" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 794.19 ms</tspan></text><line id="SvgjsLine1200" x1="149" y1="1698" x2="1642" y2="1698" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1201" font-family="Helvetica, Arial, sans-serif" x="29" y="1717.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1202" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 807.88 ms</tspan></text><line id="SvgjsLine1203" x1="149" y1="1726" x2="1642" y2="1726" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1204" font-family="Helvetica, Arial, sans-serif" x="29" y="1746.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1205" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 821.58 ms</tspan></text><line id="SvgjsLine1206" x1="149" y1="1755" x2="1642" y2="1755" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1207" font-family="Helvetica, Arial, sans-serif" x="29" y="1774.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1208" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 835.27 ms</tspan></text><line id="SvgjsLine1209" x1="149" y1="1783" x2="1642" y2="1783" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1210" font-family="Helvetica, Arial, sans-serif" x="29" y="1803.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1211" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 848.96 ms</tspan></text><line id="SvgjsLine1212" x1="149" y1="1812" x2="1642" y2="1812" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1213" font-family="Helvetica, Arial, sans-serif" x="29" y="1832.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1214" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 862.66 ms</tspan></text><line id="SvgjsLine1215" x1="149" y1="1841" x2="1642" y2="1841" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1216" font-family="Helvetica, Arial, sans-serif" x="29" y="1860.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1217" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 876.35 ms</tspan></text><line id="SvgjsLine1218" x1="149" y1="1869" x2="1642" y2="1869" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1219" font-family="Helvetica, Arial, sans-serif" x="29" y="1889.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1220" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 890.04 ms</tspan></text><line id="SvgjsLine1221" x1="149" y1="1898" x2="1642" y2="1898" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1222" font-family="Helvetica, Arial, sans-serif" x="29" y="1917.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1223" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 903.73 ms</tspan></text><line id="SvgjsLine1224" x1="149" y1="1926" x2="1642" y2="1926" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1225" font-family="Helvetica, Arial, sans-serif" x="29" y="1946.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1226" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 917.43 ms</tspan></text><line id="SvgjsLine1227" x1="149" y1="1955" x2="1642" y2="1955" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1228" font-family="Helvetica, Arial, sans-serif" x="29" y="1975.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1229" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 931.12 ms</tspan></text><line id="SvgjsLine1230" x1="149" y1="1984" x2="1642" y2="1984" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1231" font-family="Helvetica, Arial, sans-serif" x="29" y="2003.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1232" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 944.81 ms</tspan></text><line id="SvgjsLine1233" x1="149" y1="2012" x2="1642" y2="2012" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1234" font-family="Helvetica, Arial, sans-serif" x="29" y="2032.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1235" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 958.51 ms</tspan></text><line id="SvgjsLine1236" x1="149" y1="2041" x2="1642" y2="2041" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1237" font-family="Helvetica, Arial, sans-serif" x="29" y="2060.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1238" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 972.2 ms</tspan></text><line id="SvgjsLine1239" x1="149" y1="2069" x2="1642" y2="2069" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1240" font-family="Helvetica, Arial, sans-serif" x="29" y="2089.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1241" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 985.89 ms</tspan></text><line id="SvgjsLine1242" x1="149" y1="2098" x2="1642" y2="2098" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1243" font-family="Helvetica, Arial, sans-serif" x="29" y="2118.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1244" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 999.59 ms</tspan></text><line id="SvgjsLine1245" x1="149" y1="2127" x2="1642" y2="2127" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1246" font-family="Helvetica, Arial, sans-serif" x="29" y="2146.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1247" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1013.28 ms</tspan></text><line id="SvgjsLine1248" x1="149" y1="2155" x2="1642" y2="2155" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1249" font-family="Helvetica, Arial, sans-serif" x="29" y="2175.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1250" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1026.97 ms</tspan></text><line id="SvgjsLine1251" x1="149" y1="2184" x2="1642" y2="2184" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1252" font-family="Helvetica, Arial, sans-serif" x="29" y="2203.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1253" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1040.66 ms</tspan></text><line id="SvgjsLine1254" x1="149" y1="2212" x2="1642" y2="2212" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1255" font-family="Helvetica, Arial, sans-serif" x="29" y="2232.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1256" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1054.36 ms</tspan></text><line id="SvgjsLine1257" x1="149" y1="2241" x2="1642" y2="2241" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1258" font-family="Helvetica, Arial, sans-serif" x="29" y="2261.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1259" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1068.05 ms</tspan></text><line id="SvgjsLine1260" x1="149" y1="2270" x2="1642" y2="2270" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1261" font-family="Helvetica, Arial, sans-serif" x="29" y="2289.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1262" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1081.74 ms</tspan></text><line id="SvgjsLine1263" x1="149" y1="2298" x2="1642" y2="2298" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1264" font-family="Helvetica, Arial, sans-serif" x="29" y="2318.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1265" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1095.44 ms</tspan></text><line id="SvgjsLine1266" x1="149" y1="2327" x2="1642" y2="2327" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1267" font-family="Helvetica, Arial, sans-serif" x="29" y="2346.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1268" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1109.13 ms</tspan></text><line id="SvgjsLine1269" x1="149" y1="2355" x2="1642" y2="2355" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1270" font-family="Helvetica, Arial, sans-serif" x="29" y="2375.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1271" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1122.82 ms</tspan></text><line id="SvgjsLine1272" x1="149" y1="2384" x2="1642" y2="2384" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1273" font-family="Helvetica, Arial, sans-serif" x="29" y="2403.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1274" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1136.52 ms</tspan></text><line id="SvgjsLine1275" x1="149" y1="2412" x2="1642" y2="2412" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1276" font-family="Helvetica, Arial, sans-serif" x="29" y="2432.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1277" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1150.21 ms</tspan></text><line id="SvgjsLine1278" x1="149" y1="2441" x2="1642" y2="2441" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1279" font-family="Helvetica, Arial, sans-serif" x="29" y="2461.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1280" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1163.9 ms</tspan></text><line id="SvgjsLine1281" x1="149" y1="2470" x2="1642" y2="2470" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1282" font-family="Helvetica, Arial, sans-serif" x="29" y="2489.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1283" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1177.59 ms</tspan></text><line id="SvgjsLine1284" x1="149" y1="2498" x2="1642" y2="2498" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1285" font-family="Helvetica, Arial, sans-serif" x="29" y="2518.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1286" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1191.29 ms</tspan></text><line id="SvgjsLine1287" x1="149" y1="2527" x2="1642" y2="2527" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1288" font-family="Helvetica, Arial, sans-serif" x="29" y="2546.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1289" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1204.98 ms</tspan></text><line id="SvgjsLine1290" x1="149" y1="2555" x2="1642" y2="2555" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1291" font-family="Helvetica, Arial, sans-serif" x="29" y="2575.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1292" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1218.67 ms</tspan></text><line id="SvgjsLine1293" x1="149" y1="2584" x2="1642" y2="2584" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1294" font-family="Helvetica, Arial, sans-serif" x="29" y="2604.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1295" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1232.37 ms</tspan></text><line id="SvgjsLine1296" x1="149" y1="2613" x2="1642" y2="2613" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1297" font-family="Helvetica, Arial, sans-serif" x="29" y="2632.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1298" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1246.06 ms</tspan></text><line id="SvgjsLine1299" x1="149" y1="2641" x2="1642" y2="2641" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1300" font-family="Helvetica, Arial, sans-serif" x="29" y="2661.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1301" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1259.75 ms</tspan></text><line id="SvgjsLine1302" x1="149" y1="2670" x2="1642" y2="2670" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1303" font-family="Helvetica, Arial, sans-serif" x="29" y="2689.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1304" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1273.45 ms</tspan></text><line id="SvgjsLine1305" x1="149" y1="2698" x2="1642" y2="2698" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1306" font-family="Helvetica, Arial, sans-serif" x="29" y="2718.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1307" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1287.14 ms</tspan></text><line id="SvgjsLine1308" x1="149" y1="2727" x2="1642" y2="2727" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1309" font-family="Helvetica, Arial, sans-serif" x="29" y="2747.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1310" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1300.83 ms</tspan></text><line id="SvgjsLine1311" x1="149" y1="2756" x2="1642" y2="2756" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1312" font-family="Helvetica, Arial, sans-serif" x="29" y="2775.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1313" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1314.52 ms</tspan></text><line id="SvgjsLine1314" x1="149" y1="2784" x2="1642" y2="2784" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1315" font-family="Helvetica, Arial, sans-serif" x="29" y="2804.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1316" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1328.22 ms</tspan></text><line id="SvgjsLine1317" x1="149" y1="2813" x2="1642" y2="2813" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1318" font-family="Helvetica, Arial, sans-serif" x="29" y="2832.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1319" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1341.91 ms</tspan></text><line id="SvgjsLine1320" x1="149" y1="2841" x2="1642" y2="2841" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1321" font-family="Helvetica, Arial, sans-serif" x="29" y="2861.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1322" dy="13" x="29" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1355.6 ms</tspan></text><line id="SvgjsLine1323" x1="149" y1="2870" x2="1642" y2="2870" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><line id="SvgjsLine1324" x1="149" y1="40" x2="746" y2="40" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1326)"></line><defs id="SvgjsDefs1325"><marker id="SvgjsMarker1326" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1327" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1331" d="M149 25 L746 25"></path><marker id="SvgjsMarker1334" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1335" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1339" d="M746 25 L746 25"></path><marker id="SvgjsMarker1342" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1343" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1347" d="M746 25 L1045 25"></path><marker id="SvgjsMarker1350" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1351" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1355" d="M1045 25 L1344 33"></path><marker id="SvgjsMarker1358" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1359" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1363" d="M149 26 L746 26"></path><marker id="SvgjsMarker1366" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1367" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1371" d="M746 26 L746 26"></path><marker id="SvgjsMarker1374" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1375" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1379" d="M746 26 L1045 27"></path><marker id="SvgjsMarker1382" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1383" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1387" d="M1045 27 L1344 35"></path><marker id="SvgjsMarker1390" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1391" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1395" d="M149 27 L746 27"></path><marker id="SvgjsMarker1398" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1399" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1403" d="M746 27 L746 27"></path><marker id="SvgjsMarker1406" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1407" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1411" d="M746 27 L1045 27"></path><marker id="SvgjsMarker1414" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1415" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1419" d="M1045 27 L1344 35"></path><marker id="SvgjsMarker1422" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1423" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1427" d="M149 83 L746 83"></path><marker id="SvgjsMarker1430" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1431" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1435" d="M746 83 L746 83"></path><marker id="SvgjsMarker1438" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1439" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1443" d="M746 83 L1045 98"></path><marker id="SvgjsMarker1446" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1447" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1451" d="M1045 98 L1642 2884"></path><marker id="SvgjsMarker1454" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1455" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1459" d="M149 94 L746 94"></path><marker id="SvgjsMarker1462" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1463" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1467" d="M746 94 L746 94"></path><marker id="SvgjsMarker1470" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1471" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1475" d="M746 94 L1045 98"></path><marker id="SvgjsMarker1478" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1479" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1483" d="M1045 98 L1642 2884"></path><marker id="SvgjsMarker1486" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1487" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1491" d="M149 121 L746 121"></path><marker id="SvgjsMarker1494" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1495" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1499" d="M746 121 L746 121"></path><marker id="SvgjsMarker1502" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1503" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1507" d="M746 121 L1045 121"></path><marker id="SvgjsMarker1510" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1511" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1515" d="M1045 121 L1642 2884"></path><marker id="SvgjsMarker1518" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1519" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1523" d="M149 121 L746 121"></path><marker id="SvgjsMarker1526" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1527" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1531" d="M746 121 L746 121"></path><marker id="SvgjsMarker1534" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1535" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1539" d="M746 121 L1045 122"></path><marker id="SvgjsMarker1542" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1543" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1547" d="M1045 122 L1642 2884"></path><marker id="SvgjsMarker1550" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1551" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1555" d="M149 129 L746 129"></path><marker id="SvgjsMarker1558" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1559" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1563" d="M746 129 L746 129"></path><marker id="SvgjsMarker1566" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1567" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1571" d="M746 129 L1045 131"></path><marker id="SvgjsMarker1574" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1575" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1579" d="M1045 131 L1344 131"></path><marker id="SvgjsMarker1582" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1583" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1587" d="M149 129 L746 129"></path><marker id="SvgjsMarker1590" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1591" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1595" d="M746 129 L746 129"></path><marker id="SvgjsMarker1598" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1599" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1603" d="M746 129 L1045 131"></path><marker id="SvgjsMarker1606" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1607" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1611" d="M1045 131 L1344 135"></path><marker id="SvgjsMarker1614" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1615" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1619" d="M149 164 L746 164"></path><marker id="SvgjsMarker1622" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1623" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1627" d="M746 164 L746 164"></path><marker id="SvgjsMarker1630" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1631" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1635" d="M746 164 L1045 164"></path><marker id="SvgjsMarker1638" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1639" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1643" d="M1045 164 L1344 164"></path><marker id="SvgjsMarker1646" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1647" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1651" d="M149 164 L746 164"></path><marker id="SvgjsMarker1654" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1655" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1659" d="M746 164 L746 164"></path><marker id="SvgjsMarker1662" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1663" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1667" d="M746 164 L1045 164"></path><marker id="SvgjsMarker1670" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1671" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1675" d="M1045 164 L1344 164"></path><marker id="SvgjsMarker1678" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1679" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1683" d="M448 184 L746 184"></path><marker id="SvgjsMarker1686" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1687" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1691" d="M746 184 L746 184"></path><marker id="SvgjsMarker1694" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1695" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1699" d="M746 184 L1045 189"></path><marker id="SvgjsMarker1702" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1703" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1707" d="M1045 189 L1344 189"></path><marker id="SvgjsMarker1710" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1711" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1715" d="M149 187 L746 187"></path><marker id="SvgjsMarker1718" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1719" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1723" d="M746 187 L746 187"></path><marker id="SvgjsMarker1726" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1727" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1731" d="M746 187 L1045 189"></path><marker id="SvgjsMarker1734" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1735" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1739" d="M1045 189 L1344 189"></path><marker id="SvgjsMarker1742" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1743" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1747" d="M149 187 L746 187"></path><marker id="SvgjsMarker1750" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1751" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1755" d="M746 187 L746 187"></path><marker id="SvgjsMarker1758" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1759" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1763" d="M746 187 L1045 189"></path><marker id="SvgjsMarker1766" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1767" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1771" d="M1045 189 L1344 189"></path><marker id="SvgjsMarker1774" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1775" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1779" d="M149 609 L746 609"></path><marker id="SvgjsMarker1782" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1783" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1787" d="M746 609 L746 609"></path><marker id="SvgjsMarker1790" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1791" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1795" d="M746 609 L1045 2640"></path><marker id="SvgjsMarker1798" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1799" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1803" d="M1045 2640 L1344 2641"></path><marker id="SvgjsMarker1806" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1807" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1811" d="M149 2646 L746 2646"></path><marker id="SvgjsMarker1814" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1815" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1819" d="M746 2646 L746 2646"></path><marker id="SvgjsMarker1822" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1823" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1827" d="M746 2646 L1045 2646"></path><marker id="SvgjsMarker1830" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1831" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1835" d="M1045 2646 L1344 2648"></path><marker id="SvgjsMarker1838" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1839" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1843" d="M448 2764 L746 2764"></path><marker id="SvgjsMarker1846" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1847" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1851" d="M746 2764 L746 2764"></path><marker id="SvgjsMarker1854" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1855" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1859" d="M746 2764 L1045 2764"></path><marker id="SvgjsMarker1862" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1863" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1867" d="M1045 2764 L1344 2764"></path><marker id="SvgjsMarker1870" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1871" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1875" d="M448 2766 L746 2766"></path><marker id="SvgjsMarker1878" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1879" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1883" d="M746 2766 L746 2766"></path><marker id="SvgjsMarker1886" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1887" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1891" d="M746 2766 L1045 2767"></path><marker id="SvgjsMarker1894" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1895" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1899" d="M1045 2767 L1344 2767"></path><marker id="SvgjsMarker1902" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1903" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1907" d="M448 2772 L746 2772"></path><marker id="SvgjsMarker1910" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1911" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1915" d="M746 2772 L746 2772"></path><marker id="SvgjsMarker1918" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1919" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1923" d="M746 2772 L1045 2773"></path><marker id="SvgjsMarker1926" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1927" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1931" d="M1045 2773 L1344 2773"></path><marker id="SvgjsMarker1934" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1935" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1939" d="M448 2800 L746 2800"></path><marker id="SvgjsMarker1942" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1943" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1947" d="M746 2800 L746 2800"></path><marker id="SvgjsMarker1950" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1951" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1955" d="M746 2800 L1045 2800"></path><marker id="SvgjsMarker1958" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1959" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1963" d="M1045 2800 L1344 2800"></path><marker id="SvgjsMarker1966" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1967" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1971" d="M448 2873 L746 2873"></path><marker id="SvgjsMarker1974" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1975" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1979" d="M746 2873 L746 2873"></path><marker id="SvgjsMarker1982" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1983" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1987" d="M746 2873 L1045 2873"></path><marker id="SvgjsMarker1990" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1991" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1995" d="M1045 2873 L1344 2873"></path></defs><a id="SvgjsA1332" href="plot-ipc-29972-108196-1586293075815-21.html#1"><text id="SvgjsText1328" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1330" href="#SvgjsPath1331"><tspan id="SvgjsTspan1329" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PBackground::Msg_PServiceWorkerContainerConstructor (128)</tspan></textPath></text></a><line id="SvgjsLine1333" x1="746" y1="40" x2="746" y2="40" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1334)"></line><a id="SvgjsA1340" href="plot-ipc-29972-108196-1586293075815-21.html#1"><text id="SvgjsText1336" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1338" href="#SvgjsPath1339"><tspan id="SvgjsTspan1337" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PBackground::Msg_PServiceWorkerContainerConstructor (128)</tspan></textPath></text></a><line id="SvgjsLine1341" x1="746" y1="40" x2="1045" y2="40" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1342)"></line><a id="SvgjsA1348" href="plot-ipc-29972-108196-1586293075815-21.html#1"><text id="SvgjsText1344" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1346" href="#SvgjsPath1347"><tspan id="SvgjsTspan1345" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PBackground::Msg_PServiceWorkerContainerConstructor (128)</tspan></textPath></text></a><line id="SvgjsLine1349" x1="1045" y1="40" x2="1344" y2="48" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1350)"></line><a id="SvgjsA1356" href="plot-ipc-29972-108196-1586293075815-21.html#1"><text id="SvgjsText1352" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1354" href="#SvgjsPath1355"><tspan id="SvgjsTspan1353" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PBackground::Msg_PServiceWorkerContainerConstructor (128)</tspan></textPath></text></a><line id="SvgjsLine1357" x1="149" y1="41" x2="746" y2="41" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1358)"></line><a id="SvgjsA1364" href="plot-ipc-29972-108196-1586293075815-21.html#2"><text id="SvgjsText1360" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1362" href="#SvgjsPath1363"><tspan id="SvgjsTspan1361" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PClientSource::Msg_NoteDOMContentLoaded (120)</tspan></textPath></text></a><line id="SvgjsLine1365" x1="746" y1="41" x2="746" y2="41" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1366)"></line><a id="SvgjsA1372" href="plot-ipc-29972-108196-1586293075815-21.html#2"><text id="SvgjsText1368" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1370" href="#SvgjsPath1371"><tspan id="SvgjsTspan1369" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PClientSource::Msg_NoteDOMContentLoaded (120)</tspan></textPath></text></a><line id="SvgjsLine1373" x1="746" y1="41" x2="1045" y2="42" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1374)"></line><a id="SvgjsA1380" href="plot-ipc-29972-108196-1586293075815-21.html#2"><text id="SvgjsText1376" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1378" href="#SvgjsPath1379"><tspan id="SvgjsTspan1377" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PClientSource::Msg_NoteDOMContentLoaded (120)</tspan></textPath></text></a><line id="SvgjsLine1381" x1="1045" y1="42" x2="1344" y2="50" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1382)"></line><a id="SvgjsA1388" href="plot-ipc-29972-108196-1586293075815-21.html#2"><text id="SvgjsText1384" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1386" href="#SvgjsPath1387"><tspan id="SvgjsTspan1385" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PClientSource::Msg_NoteDOMContentLoaded (120)</tspan></textPath></text></a><line id="SvgjsLine1389" x1="149" y1="42" x2="746" y2="42" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1390)"></line><a id="SvgjsA1396" href="plot-ipc-29972-108196-1586293075815-21.html#3"><text id="SvgjsText1392" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1394" href="#SvgjsPath1395"><tspan id="SvgjsTspan1393" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PBackgroundLSSnapshot::Msg_Checkpoint (316)</tspan></textPath></text></a><line id="SvgjsLine1397" x1="746" y1="42" x2="746" y2="42" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1398)"></line><a id="SvgjsA1404" href="plot-ipc-29972-108196-1586293075815-21.html#3"><text id="SvgjsText1400" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1402" href="#SvgjsPath1403"><tspan id="SvgjsTspan1401" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PBackgroundLSSnapshot::Msg_Checkpoint (316)</tspan></textPath></text></a><line id="SvgjsLine1405" x1="746" y1="42" x2="1045" y2="42" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1406)"></line><a id="SvgjsA1412" href="plot-ipc-29972-108196-1586293075815-21.html#3"><text id="SvgjsText1408" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1410" href="#SvgjsPath1411"><tspan id="SvgjsTspan1409" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PBackgroundLSSnapshot::Msg_Checkpoint (316)</tspan></textPath></text></a><line id="SvgjsLine1413" x1="1045" y1="42" x2="1344" y2="50" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1414)"></line><a id="SvgjsA1420" href="plot-ipc-29972-108196-1586293075815-21.html#3"><text id="SvgjsText1416" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1418" href="#SvgjsPath1419"><tspan id="SvgjsTspan1417" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PBackgroundLSSnapshot::Msg_Checkpoint (316)</tspan></textPath></text></a><line id="SvgjsLine1421" x1="149" y1="98" x2="746" y2="98" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1422)"></line><a id="SvgjsA1428" href="plot-ipc-29972-108196-1586293075815-21.html#4"><text id="SvgjsText1424" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1426" href="#SvgjsPath1427"><tspan id="SvgjsTspan1425" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PredLearn (828)</tspan></textPath></text></a><line id="SvgjsLine1429" x1="746" y1="98" x2="746" y2="98" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1430)"></line><a id="SvgjsA1436" href="plot-ipc-29972-108196-1586293075815-21.html#4"><text id="SvgjsText1432" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1434" href="#SvgjsPath1435"><tspan id="SvgjsTspan1433" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PredLearn (828)</tspan></textPath></text></a><line id="SvgjsLine1437" x1="746" y1="98" x2="1045" y2="113" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1438)"></line><a id="SvgjsA1444" href="plot-ipc-29972-108196-1586293075815-21.html#4"><text id="SvgjsText1440" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1442" href="#SvgjsPath1443"><tspan id="SvgjsTspan1441" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PredLearn (828)</tspan></textPath></text></a><line id="SvgjsLine1445" x1="1045" y1="113" x2="1642" y2="2899" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1446)"></line><a id="SvgjsA1452" href="plot-ipc-29972-108196-1586293075815-21.html#4"><text id="SvgjsText1448" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1450" href="#SvgjsPath1451"><tspan id="SvgjsTspan1449" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PredLearn (828)</tspan></textPath></text></a><line id="SvgjsLine1453" x1="149" y1="109" x2="746" y2="109" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1454)"></line><a id="SvgjsA1460" href="plot-ipc-29972-108196-1586293075815-21.html#5"><text id="SvgjsText1456" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1458" href="#SvgjsPath1459"><tspan id="SvgjsTspan1457" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PBrowser::Msg_NotifyContentBlockingEvent (1016)</tspan></textPath></text></a><line id="SvgjsLine1461" x1="746" y1="109" x2="746" y2="109" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1462)"></line><a id="SvgjsA1468" href="plot-ipc-29972-108196-1586293075815-21.html#5"><text id="SvgjsText1464" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1466" href="#SvgjsPath1467"><tspan id="SvgjsTspan1465" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PBrowser::Msg_NotifyContentBlockingEvent (1016)</tspan></textPath></text></a><line id="SvgjsLine1469" x1="746" y1="109" x2="1045" y2="113" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1470)"></line><a id="SvgjsA1476" href="plot-ipc-29972-108196-1586293075815-21.html#5"><text id="SvgjsText1472" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1474" href="#SvgjsPath1475"><tspan id="SvgjsTspan1473" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PBrowser::Msg_NotifyContentBlockingEvent (1016)</tspan></textPath></text></a><line id="SvgjsLine1477" x1="1045" y1="113" x2="1642" y2="2899" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1478)"></line><a id="SvgjsA1484" href="plot-ipc-29972-108196-1586293075815-21.html#5"><text id="SvgjsText1480" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1482" href="#SvgjsPath1483"><tspan id="SvgjsTspan1481" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PBrowser::Msg_NotifyContentBlockingEvent (1016)</tspan></textPath></text></a><line id="SvgjsLine1485" x1="149" y1="136" x2="746" y2="136" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1486)"></line><a id="SvgjsA1492" href="plot-ipc-29972-108196-1586293075815-21.html#6"><text id="SvgjsText1488" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1490" href="#SvgjsPath1491"><tspan id="SvgjsTspan1489" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PContent::Msg_CacheBrowsingContextChildren (132)</tspan></textPath></text></a><line id="SvgjsLine1493" x1="746" y1="136" x2="746" y2="136" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1494)"></line><a id="SvgjsA1500" href="plot-ipc-29972-108196-1586293075815-21.html#6"><text id="SvgjsText1496" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1498" href="#SvgjsPath1499"><tspan id="SvgjsTspan1497" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PContent::Msg_CacheBrowsingContextChildren (132)</tspan></textPath></text></a><line id="SvgjsLine1501" x1="746" y1="136" x2="1045" y2="136" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1502)"></line><a id="SvgjsA1508" href="plot-ipc-29972-108196-1586293075815-21.html#6"><text id="SvgjsText1504" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1506" href="#SvgjsPath1507"><tspan id="SvgjsTspan1505" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PContent::Msg_CacheBrowsingContextChildren (132)</tspan></textPath></text></a><line id="SvgjsLine1509" x1="1045" y1="136" x2="1642" y2="2899" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1510)"></line><a id="SvgjsA1516" href="plot-ipc-29972-108196-1586293075815-21.html#6"><text id="SvgjsText1512" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1514" href="#SvgjsPath1515"><tspan id="SvgjsTspan1513" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PContent::Msg_CacheBrowsingContextChildren (132)</tspan></textPath></text></a><line id="SvgjsLine1517" x1="149" y1="136" x2="746" y2="136" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1518)"></line><a id="SvgjsA1524" href="plot-ipc-29972-108196-1586293075815-21.html#7"><text id="SvgjsText1520" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1522" href="#SvgjsPath1523"><tspan id="SvgjsTspan1521" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PBrowser::Msg_VisitURI (788)</tspan></textPath></text></a><line id="SvgjsLine1525" x1="746" y1="136" x2="746" y2="136" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1526)"></line><a id="SvgjsA1532" href="plot-ipc-29972-108196-1586293075815-21.html#7"><text id="SvgjsText1528" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1530" href="#SvgjsPath1531"><tspan id="SvgjsTspan1529" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PBrowser::Msg_VisitURI (788)</tspan></textPath></text></a><line id="SvgjsLine1533" x1="746" y1="136" x2="1045" y2="137" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1534)"></line><a id="SvgjsA1540" href="plot-ipc-29972-108196-1586293075815-21.html#7"><text id="SvgjsText1536" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1538" href="#SvgjsPath1539"><tspan id="SvgjsTspan1537" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PBrowser::Msg_VisitURI (788)</tspan></textPath></text></a><line id="SvgjsLine1541" x1="1045" y1="137" x2="1642" y2="2899" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1542)"></line><a id="SvgjsA1548" href="plot-ipc-29972-108196-1586293075815-21.html#7"><text id="SvgjsText1544" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1546" href="#SvgjsPath1547"><tspan id="SvgjsTspan1545" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PBrowser::Msg_VisitURI (788)</tspan></textPath></text></a><line id="SvgjsLine1549" x1="149" y1="144" x2="746" y2="144" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1550)"></line><a id="SvgjsA1556" href="plot-ipc-29972-108196-1586293075815-21.html#8"><text id="SvgjsText1552" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1554" href="#SvgjsPath1555"><tspan id="SvgjsTspan1553" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PClientSource::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine1557" x1="746" y1="144" x2="746" y2="144" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1558)"></line><a id="SvgjsA1564" href="plot-ipc-29972-108196-1586293075815-21.html#8"><text id="SvgjsText1560" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1562" href="#SvgjsPath1563"><tspan id="SvgjsTspan1561" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PClientSource::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine1565" x1="746" y1="144" x2="1045" y2="146" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1566)"></line><a id="SvgjsA1572" href="plot-ipc-29972-108196-1586293075815-21.html#8"><text id="SvgjsText1568" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1570" href="#SvgjsPath1571"><tspan id="SvgjsTspan1569" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PClientSource::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine1573" x1="1045" y1="146" x2="1344" y2="146" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1574)"></line><a id="SvgjsA1580" href="plot-ipc-29972-108196-1586293075815-21.html#8"><text id="SvgjsText1576" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1578" href="#SvgjsPath1579"><tspan id="SvgjsTspan1577" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PClientSource::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine1581" x1="149" y1="144" x2="746" y2="144" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1582)"></line><a id="SvgjsA1588" href="plot-ipc-29972-108196-1586293075815-21.html#9"><text id="SvgjsText1584" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1586" href="#SvgjsPath1587"><tspan id="SvgjsTspan1585" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PClientSource::Msg_ExecutionReady (212)</tspan></textPath></text></a><line id="SvgjsLine1589" x1="746" y1="144" x2="746" y2="144" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1590)"></line><a id="SvgjsA1596" href="plot-ipc-29972-108196-1586293075815-21.html#9"><text id="SvgjsText1592" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1594" href="#SvgjsPath1595"><tspan id="SvgjsTspan1593" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PClientSource::Msg_ExecutionReady (212)</tspan></textPath></text></a><line id="SvgjsLine1597" x1="746" y1="144" x2="1045" y2="146" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1598)"></line><a id="SvgjsA1604" href="plot-ipc-29972-108196-1586293075815-21.html#9"><text id="SvgjsText1600" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1602" href="#SvgjsPath1603"><tspan id="SvgjsTspan1601" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PClientSource::Msg_ExecutionReady (212)</tspan></textPath></text></a><line id="SvgjsLine1605" x1="1045" y1="146" x2="1344" y2="150" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1606)"></line><a id="SvgjsA1612" href="plot-ipc-29972-108196-1586293075815-21.html#9"><text id="SvgjsText1608" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1610" href="#SvgjsPath1611"><tspan id="SvgjsTspan1609" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PClientSource::Msg_ExecutionReady (212)</tspan></textPath></text></a><line id="SvgjsLine1613" x1="149" y1="179" x2="746" y2="179" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1614)"></line><a id="SvgjsA1620" href="plot-ipc-29972-108196-1586293075815-21.html#10"><text id="SvgjsText1616" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1618" href="#SvgjsPath1619"><tspan id="SvgjsTspan1617" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PBackground::Msg_PServiceWorkerContainerConstructor (128)</tspan></textPath></text></a><line id="SvgjsLine1621" x1="746" y1="179" x2="746" y2="179" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1622)"></line><a id="SvgjsA1628" href="plot-ipc-29972-108196-1586293075815-21.html#10"><text id="SvgjsText1624" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1626" href="#SvgjsPath1627"><tspan id="SvgjsTspan1625" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PBackground::Msg_PServiceWorkerContainerConstructor (128)</tspan></textPath></text></a><line id="SvgjsLine1629" x1="746" y1="179" x2="1045" y2="179" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1630)"></line><a id="SvgjsA1636" href="plot-ipc-29972-108196-1586293075815-21.html#10"><text id="SvgjsText1632" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1634" href="#SvgjsPath1635"><tspan id="SvgjsTspan1633" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PBackground::Msg_PServiceWorkerContainerConstructor (128)</tspan></textPath></text></a><line id="SvgjsLine1637" x1="1045" y1="179" x2="1344" y2="179" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1638)"></line><a id="SvgjsA1644" href="plot-ipc-29972-108196-1586293075815-21.html#10"><text id="SvgjsText1640" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1642" href="#SvgjsPath1643"><tspan id="SvgjsTspan1641" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PBackground::Msg_PServiceWorkerContainerConstructor (128)</tspan></textPath></text></a><line id="SvgjsLine1645" x1="149" y1="179" x2="746" y2="179" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1646)"></line><a id="SvgjsA1652" href="plot-ipc-29972-108196-1586293075815-21.html#11"><text id="SvgjsText1648" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1650" href="#SvgjsPath1651"><tspan id="SvgjsTspan1649" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PClientSource::Msg_NoteDOMContentLoaded (120)</tspan></textPath></text></a><line id="SvgjsLine1653" x1="746" y1="179" x2="746" y2="179" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1654)"></line><a id="SvgjsA1660" href="plot-ipc-29972-108196-1586293075815-21.html#11"><text id="SvgjsText1656" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1658" href="#SvgjsPath1659"><tspan id="SvgjsTspan1657" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PClientSource::Msg_NoteDOMContentLoaded (120)</tspan></textPath></text></a><line id="SvgjsLine1661" x1="746" y1="179" x2="1045" y2="179" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1662)"></line><a id="SvgjsA1668" href="plot-ipc-29972-108196-1586293075815-21.html#11"><text id="SvgjsText1664" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1666" href="#SvgjsPath1667"><tspan id="SvgjsTspan1665" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PClientSource::Msg_NoteDOMContentLoaded (120)</tspan></textPath></text></a><line id="SvgjsLine1669" x1="1045" y1="179" x2="1344" y2="179" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1670)"></line><a id="SvgjsA1676" href="plot-ipc-29972-108196-1586293075815-21.html#11"><text id="SvgjsText1672" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1674" href="#SvgjsPath1675"><tspan id="SvgjsTspan1673" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PClientSource::Msg_NoteDOMContentLoaded (120)</tspan></textPath></text></a><line id="SvgjsLine1677" x1="448" y1="199" x2="746" y2="199" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1678)"></line><a id="SvgjsA1684" href="plot-ipc-29972-108196-1586293075815-21.html#12"><text id="SvgjsText1680" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1682" href="#SvgjsPath1683"><tspan id="SvgjsTspan1681" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1685" x1="746" y1="199" x2="746" y2="199" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1686)"></line><a id="SvgjsA1692" href="plot-ipc-29972-108196-1586293075815-21.html#12"><text id="SvgjsText1688" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1690" href="#SvgjsPath1691"><tspan id="SvgjsTspan1689" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1693" x1="746" y1="199" x2="1045" y2="204" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1694)"></line><a id="SvgjsA1700" href="plot-ipc-29972-108196-1586293075815-21.html#12"><text id="SvgjsText1696" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1698" href="#SvgjsPath1699"><tspan id="SvgjsTspan1697" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1701" x1="1045" y1="204" x2="1344" y2="204" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1702)"></line><a id="SvgjsA1708" href="plot-ipc-29972-108196-1586293075815-21.html#12"><text id="SvgjsText1704" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1706" href="#SvgjsPath1707"><tspan id="SvgjsTspan1705" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1709" x1="149" y1="202" x2="746" y2="202" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1710)"></line><a id="SvgjsA1716" href="plot-ipc-29972-108196-1586293075815-21.html#13"><text id="SvgjsText1712" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1714" href="#SvgjsPath1715"><tspan id="SvgjsTspan1713" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PBackgroundLSSnapshot::Msg_DeleteMe (120)</tspan></textPath></text></a><line id="SvgjsLine1717" x1="746" y1="202" x2="746" y2="202" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1718)"></line><a id="SvgjsA1724" href="plot-ipc-29972-108196-1586293075815-21.html#13"><text id="SvgjsText1720" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1722" href="#SvgjsPath1723"><tspan id="SvgjsTspan1721" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PBackgroundLSSnapshot::Msg_DeleteMe (120)</tspan></textPath></text></a><line id="SvgjsLine1725" x1="746" y1="202" x2="1045" y2="204" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1726)"></line><a id="SvgjsA1732" href="plot-ipc-29972-108196-1586293075815-21.html#13"><text id="SvgjsText1728" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1730" href="#SvgjsPath1731"><tspan id="SvgjsTspan1729" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PBackgroundLSSnapshot::Msg_DeleteMe (120)</tspan></textPath></text></a><line id="SvgjsLine1733" x1="1045" y1="204" x2="1344" y2="204" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1734)"></line><a id="SvgjsA1740" href="plot-ipc-29972-108196-1586293075815-21.html#13"><text id="SvgjsText1736" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1738" href="#SvgjsPath1739"><tspan id="SvgjsTspan1737" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PBackgroundLSSnapshot::Msg_DeleteMe (120)</tspan></textPath></text></a><line id="SvgjsLine1741" x1="149" y1="202" x2="746" y2="202" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1742)"></line><a id="SvgjsA1748" href="plot-ipc-29972-108196-1586293075815-21.html#14"><text id="SvgjsText1744" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1746" href="#SvgjsPath1747"><tspan id="SvgjsTspan1745" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PBackgroundLSSnapshot::Msg_Finish (120)</tspan></textPath></text></a><line id="SvgjsLine1749" x1="746" y1="202" x2="746" y2="202" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1750)"></line><a id="SvgjsA1756" href="plot-ipc-29972-108196-1586293075815-21.html#14"><text id="SvgjsText1752" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1754" href="#SvgjsPath1755"><tspan id="SvgjsTspan1753" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PBackgroundLSSnapshot::Msg_Finish (120)</tspan></textPath></text></a><line id="SvgjsLine1757" x1="746" y1="202" x2="1045" y2="204" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1758)"></line><a id="SvgjsA1764" href="plot-ipc-29972-108196-1586293075815-21.html#14"><text id="SvgjsText1760" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1762" href="#SvgjsPath1763"><tspan id="SvgjsTspan1761" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PBackgroundLSSnapshot::Msg_Finish (120)</tspan></textPath></text></a><line id="SvgjsLine1765" x1="1045" y1="204" x2="1344" y2="204" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1766)"></line><a id="SvgjsA1772" href="plot-ipc-29972-108196-1586293075815-21.html#14"><text id="SvgjsText1768" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1770" href="#SvgjsPath1771"><tspan id="SvgjsTspan1769" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PBackgroundLSSnapshot::Msg_Finish (120)</tspan></textPath></text></a><line id="SvgjsLine1773" x1="149" y1="624" x2="746" y2="624" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1774)"></line><a id="SvgjsA1780" href="plot-ipc-29972-108196-1586293075815-21.html#15"><text id="SvgjsText1776" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1778" href="#SvgjsPath1779"><tspan id="SvgjsTspan1777" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PBackgroundLSDatabase::Msg_PBackgroundLSSnapshotConstructor (488)</tspan></textPath></text></a><line id="SvgjsLine1781" x1="746" y1="624" x2="746" y2="624" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1782)"></line><a id="SvgjsA1788" href="plot-ipc-29972-108196-1586293075815-21.html#15"><text id="SvgjsText1784" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1786" href="#SvgjsPath1787"><tspan id="SvgjsTspan1785" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PBackgroundLSDatabase::Msg_PBackgroundLSSnapshotConstructor (488)</tspan></textPath></text></a><line id="SvgjsLine1789" x1="746" y1="624" x2="1045" y2="2655" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1790)"></line><a id="SvgjsA1796" href="plot-ipc-29972-108196-1586293075815-21.html#15"><text id="SvgjsText1792" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1794" href="#SvgjsPath1795"><tspan id="SvgjsTspan1793" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PBackgroundLSDatabase::Msg_PBackgroundLSSnapshotConstructor (488)</tspan></textPath></text></a><line id="SvgjsLine1797" x1="1045" y1="2655" x2="1344" y2="2656" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1798)"></line><a id="SvgjsA1804" href="plot-ipc-29972-108196-1586293075815-21.html#15"><text id="SvgjsText1800" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1802" href="#SvgjsPath1803"><tspan id="SvgjsTspan1801" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PBackgroundLSDatabase::Msg_PBackgroundLSSnapshotConstructor (488)</tspan></textPath></text></a><line id="SvgjsLine1805" x1="149" y1="2661" x2="746" y2="2661" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1806)"></line><a id="SvgjsA1812" href="plot-ipc-29972-108196-1586293075815-21.html#16"><text id="SvgjsText1808" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1810" href="#SvgjsPath1811"><tspan id="SvgjsTspan1809" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PBackgroundLSSnapshot::Msg_LoadValueAndMoreItems (292)</tspan></textPath></text></a><line id="SvgjsLine1813" x1="746" y1="2661" x2="746" y2="2661" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1814)"></line><a id="SvgjsA1820" href="plot-ipc-29972-108196-1586293075815-21.html#16"><text id="SvgjsText1816" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1818" href="#SvgjsPath1819"><tspan id="SvgjsTspan1817" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PBackgroundLSSnapshot::Msg_LoadValueAndMoreItems (292)</tspan></textPath></text></a><line id="SvgjsLine1821" x1="746" y1="2661" x2="1045" y2="2661" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1822)"></line><a id="SvgjsA1828" href="plot-ipc-29972-108196-1586293075815-21.html#16"><text id="SvgjsText1824" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1826" href="#SvgjsPath1827"><tspan id="SvgjsTspan1825" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PBackgroundLSSnapshot::Msg_LoadValueAndMoreItems (292)</tspan></textPath></text></a><line id="SvgjsLine1829" x1="1045" y1="2661" x2="1344" y2="2663" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1830)"></line><a id="SvgjsA1836" href="plot-ipc-29972-108196-1586293075815-21.html#16"><text id="SvgjsText1832" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1834" href="#SvgjsPath1835"><tspan id="SvgjsTspan1833" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PBackgroundLSSnapshot::Msg_LoadValueAndMoreItems (292)</tspan></textPath></text></a><line id="SvgjsLine1837" x1="448" y1="2779" x2="746" y2="2779" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1838)"></line><a id="SvgjsA1844" href="plot-ipc-29972-108196-1586293075815-21.html#17"><text id="SvgjsText1840" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1842" href="#SvgjsPath1843"><tspan id="SvgjsTspan1841" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1845" x1="746" y1="2779" x2="746" y2="2779" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1846)"></line><a id="SvgjsA1852" href="plot-ipc-29972-108196-1586293075815-21.html#17"><text id="SvgjsText1848" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1850" href="#SvgjsPath1851"><tspan id="SvgjsTspan1849" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1853" x1="746" y1="2779" x2="1045" y2="2779" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1854)"></line><a id="SvgjsA1860" href="plot-ipc-29972-108196-1586293075815-21.html#17"><text id="SvgjsText1856" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1858" href="#SvgjsPath1859"><tspan id="SvgjsTspan1857" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1861" x1="1045" y1="2779" x2="1344" y2="2779" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1862)"></line><a id="SvgjsA1868" href="plot-ipc-29972-108196-1586293075815-21.html#17"><text id="SvgjsText1864" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1866" href="#SvgjsPath1867"><tspan id="SvgjsTspan1865" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1869" x1="448" y1="2781" x2="746" y2="2781" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1870)"></line><a id="SvgjsA1876" href="plot-ipc-29972-108196-1586293075815-21.html#18"><text id="SvgjsText1872" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1874" href="#SvgjsPath1875"><tspan id="SvgjsTspan1873" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1877" x1="746" y1="2781" x2="746" y2="2781" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1878)"></line><a id="SvgjsA1884" href="plot-ipc-29972-108196-1586293075815-21.html#18"><text id="SvgjsText1880" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1882" href="#SvgjsPath1883"><tspan id="SvgjsTspan1881" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1885" x1="746" y1="2781" x2="1045" y2="2782" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1886)"></line><a id="SvgjsA1892" href="plot-ipc-29972-108196-1586293075815-21.html#18"><text id="SvgjsText1888" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1890" href="#SvgjsPath1891"><tspan id="SvgjsTspan1889" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1893" x1="1045" y1="2782" x2="1344" y2="2782" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1894)"></line><a id="SvgjsA1900" href="plot-ipc-29972-108196-1586293075815-21.html#18"><text id="SvgjsText1896" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1898" href="#SvgjsPath1899"><tspan id="SvgjsTspan1897" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1901" x1="448" y1="2787" x2="746" y2="2787" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1902)"></line><a id="SvgjsA1908" href="plot-ipc-29972-108196-1586293075815-21.html#19"><text id="SvgjsText1904" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1906" href="#SvgjsPath1907"><tspan id="SvgjsTspan1905" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1909" x1="746" y1="2787" x2="746" y2="2787" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1910)"></line><a id="SvgjsA1916" href="plot-ipc-29972-108196-1586293075815-21.html#19"><text id="SvgjsText1912" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1914" href="#SvgjsPath1915"><tspan id="SvgjsTspan1913" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1917" x1="746" y1="2787" x2="1045" y2="2788" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1918)"></line><a id="SvgjsA1924" href="plot-ipc-29972-108196-1586293075815-21.html#19"><text id="SvgjsText1920" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1922" href="#SvgjsPath1923"><tspan id="SvgjsTspan1921" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1925" x1="1045" y1="2788" x2="1344" y2="2788" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1926)"></line><a id="SvgjsA1932" href="plot-ipc-29972-108196-1586293075815-21.html#19"><text id="SvgjsText1928" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1930" href="#SvgjsPath1931"><tspan id="SvgjsTspan1929" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1933" x1="448" y1="2815" x2="746" y2="2815" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1934)"></line><a id="SvgjsA1940" href="plot-ipc-29972-108196-1586293075815-21.html#20"><text id="SvgjsText1936" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1938" href="#SvgjsPath1939"><tspan id="SvgjsTspan1937" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1941" x1="746" y1="2815" x2="746" y2="2815" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1942)"></line><a id="SvgjsA1948" href="plot-ipc-29972-108196-1586293075815-21.html#20"><text id="SvgjsText1944" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1946" href="#SvgjsPath1947"><tspan id="SvgjsTspan1945" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1949" x1="746" y1="2815" x2="1045" y2="2815" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1950)"></line><a id="SvgjsA1956" href="plot-ipc-29972-108196-1586293075815-21.html#20"><text id="SvgjsText1952" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1954" href="#SvgjsPath1955"><tspan id="SvgjsTspan1953" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1957" x1="1045" y1="2815" x2="1344" y2="2815" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1958)"></line><a id="SvgjsA1964" href="plot-ipc-29972-108196-1586293075815-21.html#20"><text id="SvgjsText1960" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1962" href="#SvgjsPath1963"><tspan id="SvgjsTspan1961" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1965" x1="448" y1="2888" x2="746" y2="2888" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1966)"></line><a id="SvgjsA1972" href="plot-ipc-29972-108196-1586293075815-21.html#21"><text id="SvgjsText1968" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1970" href="#SvgjsPath1971"><tspan id="SvgjsTspan1969" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1973" x1="746" y1="2888" x2="746" y2="2888" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1974)"></line><a id="SvgjsA1980" href="plot-ipc-29972-108196-1586293075815-21.html#21"><text id="SvgjsText1976" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1978" href="#SvgjsPath1979"><tspan id="SvgjsTspan1977" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1981" x1="746" y1="2888" x2="1045" y2="2888" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1982)"></line><a id="SvgjsA1988" href="plot-ipc-29972-108196-1586293075815-21.html#21"><text id="SvgjsText1984" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1986" href="#SvgjsPath1987"><tspan id="SvgjsTspan1985" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1989" x1="1045" y1="2888" x2="1344" y2="2888" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1990)"></line><a id="SvgjsA1996" href="plot-ipc-29972-108196-1586293075815-21.html#21"><text id="SvgjsText1992" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1994" href="#SvgjsPath1995"><tspan id="SvgjsTspan1993" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><a id="SvgjsA1999" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText1997" font-family="Helvetica, Arial, sans-serif" x="1055" y="109.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1998" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2002" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2000" font-family="Helvetica, Arial, sans-serif" x="1055" y="130.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2001" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2005" href="data:text/plain,memcpy()%0a%0dpublic: bool __cdecl mozilla::BufferList&lt;class InfallibleAllocPolicy&gt;::WriteBytes(char const * __ptr64,unsigned __int64) __ptr64%0a%0dRtlSetLastWin32Error%0a%0dprotected: void __cdecl MessageLoop::PostTask_Helper(struct already_AddRefed&lt;class nsIRunnable&gt;,int) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2003" font-family="Helvetica, Arial, sans-serif" x="1055" y="135.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2004" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2008" href="data:text/plain,public: bool __cdecl IPC::Channel::ChannelImpl::Send(class IPC::Message * __ptr64) __ptr64%0a%0dclass nsIEventTarget * __ptr64 __cdecl mozilla::GetMainThreadEventTarget(void)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dprivate: virtual struct already_AddRefed&lt;class nsIEventTarget&gt; __cdecl mozilla::layers::CompositorManagerChild::GetSpecificMessageEventTarget(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0d0x2f90093%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2006" font-family="Helvetica, Arial, sans-serif" x="1055" y="139.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2007" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">public: bool __cdecl IPC::Channel::ChannelImpl::Send(class IPC::Message * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2011" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2009" font-family="Helvetica, Arial, sans-serif" x="1055" y="143.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2010" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2014" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2012" font-family="Helvetica, Arial, sans-serif" x="1055" y="147.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2013" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2017" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2015" font-family="Helvetica, Arial, sans-serif" x="1055" y="152.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2016" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2020" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2018" font-family="Helvetica, Arial, sans-serif" x="1055" y="155.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2019" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2023" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2021" font-family="Helvetica, Arial, sans-serif" x="1055" y="160.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2022" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2026" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2024" font-family="Helvetica, Arial, sans-serif" x="1055" y="165.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2025" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2029" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2027" font-family="Helvetica, Arial, sans-serif" x="1055" y="171.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2028" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2032" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2030" font-family="Helvetica, Arial, sans-serif" x="1055" y="174.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2031" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2035" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2033" font-family="Helvetica, Arial, sans-serif" x="1055" y="179.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2034" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2038" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2036" font-family="Helvetica, Arial, sans-serif" x="1055" y="188.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2037" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2041" href="data:text/plain,bool __cdecl mozilla::IsDebugFile(__int64)%0a%0dpublic: bool __cdecl IPC::Channel::ChannelImpl::Send(class IPC::Message * __ptr64) __ptr64%0a%0dclass nsIEventTarget * __ptr64 __cdecl mozilla::GetMainThreadEventTarget(void)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dprivate: virtual struct already_AddRefed&lt;class nsIEventTarget&gt; __cdecl mozilla::layers::CompositorManagerChild::GetSpecificMessageEventTarget(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0d0x2f90093%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2039" font-family="Helvetica, Arial, sans-serif" x="1055" y="2622.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2040" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl mozilla::IsDebugFile(__int64)</tspan></text></a><a id="SvgjsA2044" href="data:text/plain,bool __cdecl mozilla::IsDebugFile(__int64)%0a%0dpublic: bool __cdecl IPC::Channel::ChannelImpl::Send(class IPC::Message * __ptr64) __ptr64%0a%0dclass nsIEventTarget * __ptr64 __cdecl mozilla::GetMainThreadEventTarget(void)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dprivate: virtual struct already_AddRefed&lt;class nsIEventTarget&gt; __cdecl mozilla::layers::CompositorManagerChild::GetSpecificMessageEventTarget(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0d0x2f90093%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2042" font-family="Helvetica, Arial, sans-serif" x="1055" y="2641.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2043" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl mozilla::IsDebugFile(__int64)</tspan></text></a><a id="SvgjsA2047" href="data:text/plain,public: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: char * __ptr64 __cdecl mozilla::BufferList&lt;class InfallibleAllocPolicy&gt;::AllocateSegment(unsigned __int64,unsigned __int64) __ptr64%0a%0dNtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2045" font-family="Helvetica, Arial, sans-serif" x="1055" y="2651.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2046" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">public: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)</tspan></text></a><a id="SvgjsA2050" href="data:text/plain,NtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2048" font-family="Helvetica, Arial, sans-serif" x="1055" y="2655.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2049" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtReadFile</tspan></text></a><a id="SvgjsA2053" href="data:text/plain,NtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2051" font-family="Helvetica, Arial, sans-serif" x="1055" y="2659.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2052" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtReadFile</tspan></text></a><a id="SvgjsA2056" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2054" font-family="Helvetica, Arial, sans-serif" x="1055" y="2664.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2055" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2059" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2057" font-family="Helvetica, Arial, sans-serif" x="1055" y="2668.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2058" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2062" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2060" font-family="Helvetica, Arial, sans-serif" x="1055" y="2672.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2061" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2065" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2063" font-family="Helvetica, Arial, sans-serif" x="1055" y="2676.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2064" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2068" href="data:text/plain,NtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2066" font-family="Helvetica, Arial, sans-serif" x="1055" y="2681.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2067" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtReadFile</tspan></text></a><a id="SvgjsA2071" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2069" font-family="Helvetica, Arial, sans-serif" x="1055" y="2684.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2070" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2074" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2072" font-family="Helvetica, Arial, sans-serif" x="1055" y="2689.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2073" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2077" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2075" font-family="Helvetica, Arial, sans-serif" x="1055" y="2693.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2076" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2080" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2078" font-family="Helvetica, Arial, sans-serif" x="1055" y="2700.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2079" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2083" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2081" font-family="Helvetica, Arial, sans-serif" x="1055" y="2703.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2082" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2086" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2084" font-family="Helvetica, Arial, sans-serif" x="1055" y="2708.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2085" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2089" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2087" font-family="Helvetica, Arial, sans-serif" x="1055" y="2712.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2088" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2092" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2090" font-family="Helvetica, Arial, sans-serif" x="1055" y="2716.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2091" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2095" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2093" font-family="Helvetica, Arial, sans-serif" x="1055" y="2720.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2094" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2098" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2096" font-family="Helvetica, Arial, sans-serif" x="1055" y="2724.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2097" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2101" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2099" font-family="Helvetica, Arial, sans-serif" x="1055" y="2728.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2100" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2104" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2102" font-family="Helvetica, Arial, sans-serif" x="1055" y="2732.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2103" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2107" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2105" font-family="Helvetica, Arial, sans-serif" x="1055" y="2736.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2106" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2110" href="data:text/plain,protected: __cdecl mozilla::IOInterposeObserver::Observation::Observation(enum mozilla::IOInterposeObserver::Operation,char const * __ptr64,bool) __ptr64%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dNtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2108" font-family="Helvetica, Arial, sans-serif" x="1055" y="2741.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2109" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">protected: __cdecl mozilla::IOInterposeObserver::Observation::Observation(enum mozilla::IOInterposeObserver::Operation,char const * __ptr64,bool) __ptr64</tspan></text></a><a id="SvgjsA2113" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2111" font-family="Helvetica, Arial, sans-serif" x="1055" y="2745.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2112" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2116" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2114" font-family="Helvetica, Arial, sans-serif" x="1055" y="2749.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2115" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2119" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2117" font-family="Helvetica, Arial, sans-serif" x="1055" y="2754.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2118" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2122" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2120" font-family="Helvetica, Arial, sans-serif" x="1055" y="2758.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2121" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2125" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2123" font-family="Helvetica, Arial, sans-serif" x="1055" y="2762.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2124" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2128" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2126" font-family="Helvetica, Arial, sans-serif" x="1055" y="2766.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2127" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2131" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2129" font-family="Helvetica, Arial, sans-serif" x="1055" y="2770.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2130" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2134" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2132" font-family="Helvetica, Arial, sans-serif" x="1055" y="2774.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2133" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2137" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2135" font-family="Helvetica, Arial, sans-serif" x="1055" y="2778.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2136" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2140" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2138" font-family="Helvetica, Arial, sans-serif" x="1055" y="2783.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2139" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2143" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2141" font-family="Helvetica, Arial, sans-serif" x="1055" y="2787.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2142" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2146" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2144" font-family="Helvetica, Arial, sans-serif" x="1055" y="2791.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2145" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2149" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2147" font-family="Helvetica, Arial, sans-serif" x="1055" y="2796.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2148" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2152" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2150" font-family="Helvetica, Arial, sans-serif" x="1055" y="2800.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2151" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2155" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2153" font-family="Helvetica, Arial, sans-serif" x="1055" y="2804.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2154" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2158" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2156" font-family="Helvetica, Arial, sans-serif" x="1055" y="2808.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2157" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2161" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2159" font-family="Helvetica, Arial, sans-serif" x="1055" y="2812.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2160" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2164" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2162" font-family="Helvetica, Arial, sans-serif" x="1055" y="2816.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2163" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2167" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2165" font-family="Helvetica, Arial, sans-serif" x="1055" y="2820.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2166" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2170" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2168" font-family="Helvetica, Arial, sans-serif" x="1055" y="2824.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2169" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2173" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2171" font-family="Helvetica, Arial, sans-serif" x="1055" y="2829.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2172" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2176" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2174" font-family="Helvetica, Arial, sans-serif" x="1055" y="2833.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2175" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2179" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2177" font-family="Helvetica, Arial, sans-serif" x="1055" y="2837.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2178" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2182" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2180" font-family="Helvetica, Arial, sans-serif" x="1055" y="2841.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2181" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2185" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2183" font-family="Helvetica, Arial, sans-serif" x="1055" y="2845.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2184" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2188" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2186" font-family="Helvetica, Arial, sans-serif" x="1055" y="2850.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2187" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2191" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2189" font-family="Helvetica, Arial, sans-serif" x="1055" y="2854.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2190" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2194" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2192" font-family="Helvetica, Arial, sans-serif" x="1055" y="2858.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2193" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2197" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2195" font-family="Helvetica, Arial, sans-serif" x="1055" y="2862.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2196" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2200" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2198" font-family="Helvetica, Arial, sans-serif" x="1055" y="2866.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2199" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2203" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2201" font-family="Helvetica, Arial, sans-serif" x="1055" y="2870.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2202" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2206" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2204" font-family="Helvetica, Arial, sans-serif" x="1055" y="2875.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2205" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2209" href="data:text/plain,private: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: char * __ptr64 __cdecl mozilla::BufferList&lt;class InfallibleAllocPolicy&gt;::AllocateSegment(unsigned __int64,unsigned __int64) __ptr64%0a%0dNtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2207" font-family="Helvetica, Arial, sans-serif" x="1055" y="2879.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2208" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">private: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64</tspan></text></a><a id="SvgjsA2212" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2210" font-family="Helvetica, Arial, sans-serif" x="1055" y="2883.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2211" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2215" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2213" font-family="Helvetica, Arial, sans-serif" x="1055" y="2887.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2214" dy="6.5" x="1055" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2218" href="data:text/plain,public: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2216" font-family="Helvetica, Arial, sans-serif" x="1652" y="42.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2217" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64</tspan></text></a><a id="SvgjsA2221" href="data:text/plain,public: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2219" font-family="Helvetica, Arial, sans-serif" x="1652" y="129.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2220" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2224" href="data:text/plain,public: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2222" font-family="Helvetica, Arial, sans-serif" x="1652" y="134.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2223" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)</tspan></text></a><a id="SvgjsA2227" href="data:text/plain,floorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2225" font-family="Helvetica, Arial, sans-serif" x="1652" y="138.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2226" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">floorf</tspan></text></a><a id="SvgjsA2230" href="data:text/plain,floorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2228" font-family="Helvetica, Arial, sans-serif" x="1652" y="143.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2229" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">floorf</tspan></text></a><a id="SvgjsA2233" href="data:text/plain,public: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2231" font-family="Helvetica, Arial, sans-serif" x="1652" y="147.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2232" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)</tspan></text></a><a id="SvgjsA2236" href="data:text/plain,public: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2234" font-family="Helvetica, Arial, sans-serif" x="1652" y="151.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2235" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2239" href="data:text/plain,public: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2237" font-family="Helvetica, Arial, sans-serif" x="1652" y="155.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2238" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2242" href="data:text/plain,protected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2240" font-family="Helvetica, Arial, sans-serif" x="1652" y="159.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2241" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">protected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64</tspan></text></a><a id="SvgjsA2245" href="data:text/plain,`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2243" font-family="Helvetica, Arial, sans-serif" x="1652" y="164.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2244" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">`anonymous namespace'::internal_GetHistogramById</tspan></text></a><a id="SvgjsA2248" href="data:text/plain,public: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2246" font-family="Helvetica, Arial, sans-serif" x="1652" y="168.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2247" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2251" href="data:text/plain,public: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2249" font-family="Helvetica, Arial, sans-serif" x="1652" y="174.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2250" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2254" href="data:text/plain,public: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2252" font-family="Helvetica, Arial, sans-serif" x="1652" y="178.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2253" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)</tspan></text></a><a id="SvgjsA2257" href="data:text/plain,public: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2255" font-family="Helvetica, Arial, sans-serif" x="1652" y="182.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2256" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2260" href="data:text/plain,_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2258" font-family="Helvetica, Arial, sans-serif" x="1652" y="205.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2259" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE</tspan></text></a><a id="SvgjsA2263" href="data:text/plain,private: void * __ptr64 __cdecl nsPropertyTable::GetPropertyInternal(class nsPropertyOwner,class nsAtom const * __ptr64,bool,enum nsresult * __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl nsINode::GetProperty(class nsAtom const * __ptr64,enum nsresult * __ptr64)const __ptr64%0a%0dpublic: static class mozilla::dom::Element * __ptr64 __cdecl nsLayoutUtils::GetMarkerPseudo(class nsIContent const * __ptr64)%0a%0dpublic: class nsIContent * __ptr64 __cdecl mozilla::dom::AllChildrenIterator::GetNextChild(void) __ptr64%0a%0d_ZN103_$LT$style..gecko..wrapper..GeckoChildrenIterator$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48f989a72d401f24E%0a%0d_ZN94_$LT$style..dom..LayoutIterator$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h758ae3634baeb2b1E%0a%0denum js::jit::EnterJitStatus __cdecl js::jit::MaybeEnterJit(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2261" font-family="Helvetica, Arial, sans-serif" x="1652" y="2640.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2262" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">private: void * __ptr64 __cdecl nsPropertyTable::GetPropertyInternal(class nsPropertyOwner,class nsAtom const * __ptr64,bool,enum nsresult * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2266" href="data:text/plain,public: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2264" font-family="Helvetica, Arial, sans-serif" x="1652" y="2651.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2265" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64</tspan></text></a><a id="SvgjsA2269" href="data:text/plain,public: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2267" font-family="Helvetica, Arial, sans-serif" x="1652" y="2655.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2268" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64</tspan></text></a><a id="SvgjsA2272" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2270" font-family="Helvetica, Arial, sans-serif" x="1652" y="2659.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2271" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA2275" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2273" font-family="Helvetica, Arial, sans-serif" x="1652" y="2663.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2274" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA2278" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2276" font-family="Helvetica, Arial, sans-serif" x="1652" y="2667.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2277" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2281" href="data:text/plain,public: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2279" font-family="Helvetica, Arial, sans-serif" x="1652" y="2672.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2280" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)</tspan></text></a><a id="SvgjsA2284" href="data:text/plain,hashglobe::hash_map::search_hashed&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,mut hashglobe::table::RawTable&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue&gt;*,closure-0&gt;%0a%0d_ZN9hashglobe8hash_map24HashMap$LT$K$C$V$C$S$GT$21insert_hashed_nocheck17he522992810c3d0d8E%0a%0dhashglobe::hash_map::HashMap&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue, core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;::try_insert&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;%0a%0dpublic: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2282" font-family="Helvetica, Arial, sans-serif" x="1652" y="2676.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2283" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">hashglobe::hash_map::search_hashed&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,mut hashglobe::table::RawTable&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue&gt;*,closure-0&gt;</tspan></text></a><a id="SvgjsA2287" href="data:text/plain,gfx_backend_dx12::resource::{{impl}}::clone%0a%0dhashglobe::hash_map::search_hashed&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,mut hashglobe::table::RawTable&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue&gt;*,closure-0&gt;%0a%0d_ZN9hashglobe8hash_map24HashMap$LT$K$C$V$C$S$GT$21insert_hashed_nocheck17he522992810c3d0d8E%0a%0dhashglobe::hash_map::HashMap&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue, core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;::try_insert&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;%0a%0dpublic: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2285" font-family="Helvetica, Arial, sans-serif" x="1652" y="2680.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2286" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">gfx_backend_dx12::resource::{{impl}}::clone</tspan></text></a><a id="SvgjsA2290" href="data:text/plain,struct RetainedDisplayListData * __ptr64 __cdecl GetOrSetRetainedDisplayListData(class nsIFrame * __ptr64)%0a%0dgfx_backend_dx12::resource::{{impl}}::clone%0a%0dhashglobe::hash_map::search_hashed&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,mut hashglobe::table::RawTable&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue&gt;*,closure-0&gt;%0a%0d_ZN9hashglobe8hash_map24HashMap$LT$K$C$V$C$S$GT$21insert_hashed_nocheck17he522992810c3d0d8E%0a%0dhashglobe::hash_map::HashMap&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue, core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;::try_insert&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;%0a%0dpublic: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2288" font-family="Helvetica, Arial, sans-serif" x="1652" y="2684.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2289" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">struct RetainedDisplayListData * __ptr64 __cdecl GetOrSetRetainedDisplayListData(class nsIFrame * __ptr64)</tspan></text></a><a id="SvgjsA2293" href="data:text/plain,public: static void __cdecl js::BarrierMethods&lt;class JSObject * __ptr64&gt;::exposeToJS(class JSObject * __ptr64)%0a%0dLdrpFastpthReloadedDll%0a%0dpublic: virtual enum nsresult __cdecl nsIDNService::ConvertToDisplayIDN(class nsTSubstring&lt;char&gt; const &amp; __ptr64,bool * __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum mozilla::ipc::HasResultCodes::Result __cdecl mozilla::net::PHttpChannelParent::OnMessageReceived(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::ServiceWorkerDescriptor::~ServiceWorkerDescriptor(void) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::LoadInfo::ClearController(void) __ptr64%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::DispatchDOMEvent(class nsISupports * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,class nsPresContext * __ptr64,enum nsEventStatus * __ptr64)%0a%0dpublic: static void __cdecl nsContentUtils::RemoveScriptBlocker(void)%0a%0dpublic: virtual void __cdecl nsView::DidCompositeWindow(struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt;,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::layers::WebRenderLayerManager::DidComposite(struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt;,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2291" font-family="Helvetica, Arial, sans-serif" x="1652" y="2688.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2292" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: static void __cdecl js::BarrierMethods&lt;class JSObject * __ptr64&gt;::exposeToJS(class JSObject * __ptr64)</tspan></text></a><a id="SvgjsA2296" href="data:text/plain,0x230bf310320%0a%0dstruct RetainedDisplayListData * __ptr64 __cdecl GetOrSetRetainedDisplayListData(class nsIFrame * __ptr64)%0a%0dgfx_backend_dx12::resource::{{impl}}::clone%0a%0dhashglobe::hash_map::search_hashed&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,mut hashglobe::table::RawTable&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue&gt;*,closure-0&gt;%0a%0d_ZN9hashglobe8hash_map24HashMap$LT$K$C$V$C$S$GT$21insert_hashed_nocheck17he522992810c3d0d8E%0a%0dhashglobe::hash_map::HashMap&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue, core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;::try_insert&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;%0a%0dpublic: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2294" font-family="Helvetica, Arial, sans-serif" x="1652" y="2693.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2295" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">0x230bf310320</tspan></text></a><a id="SvgjsA2299" href="data:text/plain,[js] forEach%0a%0dpublic: enum nsChangeHint __cdecl mozilla::ComputedStyle::CalcStyleDifference(class mozilla::ComputedStyle const &amp; __ptr64,unsigned int * __ptr64)const __ptr64%0a%0dprotected: virtual __cdecl mozilla::image::VectorImage::~VectorImage(void) __ptr64%0a%0dprotected: virtual void * __ptr64 __cdecl mozilla::image::VectorImage::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: virtual unsigned long __cdecl mozilla::image::VectorImage::Release(void) __ptr64%0a%0dprivate: virtual __cdecl imgRequest::~imgRequest(void) __ptr64%0a%0dprivate: virtual void * __ptr64 __cdecl imgRequest::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsDNSAsyncRequest::Release(void) __ptr64%0a%0dpublic: class mozilla::gfx::Matrix4x4TypedFlagged&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits&gt; __cdecl nsIFrame::GetTransformMatrix(class nsIFrame const * __ptr64,class nsIFrame * __ptr64 * __ptr64,unsigned int)const __ptr64%0a%0dpublic: static struct mozilla::gfx::SizeTyped&lt;struct mozilla::gfx::UnknownUnits,double&gt; __cdecl mozilla::FrameLayerBuilder::GetPaintedLayerScaleForFrame(class nsIFrame * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::ScrollToImpl(struct nsPoint,struct nsRect const &amp; __ptr64,class nsAtom * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::ScrollFrameHelper::CompleteAsyncScroll(struct nsRect const &amp; __ptr64,class nsAtom * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::ScrollFrameHelper::ScrollToWithOrigin(struct nsPoint,enum mozilla::ScrollMode,class nsAtom * __ptr64,struct nsRect const * __ptr64,enum nsIScrollbarMediator::ScrollSnapMode) __ptr64%0a%0dbool __cdecl js::LookupNameNoGC(struct JSContext * __ptr64,class js::PropertyName * __ptr64,class JSObject * __ptr64,class JSObject * __ptr64 * __ptr64,class JSObject * __ptr64 * __ptr64,class JS::PropertyResult * __ptr64)%0a%0d[js] lazyGetter%0a%0d[js] runDelayed%0a%0dpublic: virtual enum nsresult __cdecl mozilla::dom::Element::BindToTree(struct mozilla::dom::BindContext &amp; __ptr64,class nsINode &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2297" font-family="Helvetica, Arial, sans-serif" x="1652" y="2697.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2298" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">[js] forEach</tspan></text></a><a id="SvgjsA2302" href="data:text/plain,NtUserGetProp%0a%0dGetPropW%0a%0dprotected: static __int64 __cdecl nsWindow::WindowProcInternal(struct HWND__ * __ptr64,unsigned int,unsigned __int64,__int64)%0a%0dDispatchClientMessage%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2300" font-family="Helvetica, Arial, sans-serif" x="1652" y="2703.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2301" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetProp</tspan></text></a><a id="SvgjsA2305" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2303" font-family="Helvetica, Arial, sans-serif" x="1652" y="2707.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2304" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2308" href="data:text/plain,public: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2306" font-family="Helvetica, Arial, sans-serif" x="1652" y="2711.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2307" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64</tspan></text></a><a id="SvgjsA2311" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2309" font-family="Helvetica, Arial, sans-serif" x="1652" y="2716.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2310" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA2314" href="data:text/plain,public: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2312" font-family="Helvetica, Arial, sans-serif" x="1652" y="2720.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2313" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64</tspan></text></a><a id="SvgjsA2317" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2315" font-family="Helvetica, Arial, sans-serif" x="1652" y="2724.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2316" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA2320" href="data:text/plain,RtlLeaveCriticalSection%0a%0dpublic: static void * __ptr64 __cdecl Allocator&lt;struct MozJemallocBase&gt;::moz_arena_malloc(unsigned __int64,unsigned __int64)%0a%0dprivate: bool __cdecl mozilla::Vector&lt;unsigned char,256,class js::jit::AssemblerBufferAllocPolicy&gt;::growStorageBy(unsigned __int64) __ptr64%0a%0dpublic: void __cdecl js::jit::X86Encoding::BaseAssembler::cmpl_ir(int,enum js::jit::X86Encoding::RegisterID) __ptr64%0a%0dpublic: virtual void __cdecl js::irregexp::NativeRegExpMacroAssembler::CheckNotCharacter(unsigned int,class js::jit::Label * __ptr64) __ptr64%0a%0d[js] loadURI/&lt;%0a%0d[js] _wrapURIChangeCall%0a%0d[js] loadURI%0a%0d[js] maybeCreatePreloadedBrowser%0a%0dprotected: static unsigned int __cdecl nsTHashtable&lt;class txLoadedDocumentEntry&gt;::s_HashKey(void const * __ptr64)%0a%0dprotected: enum nsresult __cdecl mozilla::dom::EventTarget::AddEventListener(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class nsIDOMEventListener * __ptr64,bool,struct mozilla::dom::Nullable&lt;bool&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::BrowserParent::AddWindowListeners(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::BrowserParent::SetOwnerElement(class mozilla::dom::Element * __ptr64) __ptr64%0a%0dpublic: static struct already_AddRefed&lt;class mozilla::dom::RemoteBrowser&gt; __cdecl mozilla::dom::ContentParent::CreateBrowser(class mozilla::dom::TabContext const &amp; __ptr64,class mozilla::dom::Element * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::dom::BrowsingContext * __ptr64,class mozilla::dom::ContentParent * __ptr64,class mozilla::dom::BrowserParent * __ptr64,unsigned __int64)%0a%0dContentParent::CreateBrowser%0a%0dprivate: bool __cdecl nsFrameLoader::TryRemoteBrowserInternal(void) __ptr64%0a%0dnsFrameLoader::TryRemoteBrowser:Create%0a%0dnsFrameLoader::ShowRemoteFrame%0a%0dselectors::matching::matches_compound_selector&lt;style::gecko::wrapper::GeckoElement,mut closure-0*&gt;%0a%0d_ZN5style12selector_map39SelectorMap$LT$style..stylist..Rule$GT$22get_all_matching_rules17h6c3164f328f16562E%0a%0d_ZN5style14rule_collector26RuleCollector$LT$E$C$F$GT$11collect_all17h912995f175f30b94E%0a%0d[js] _createBrowser%0a%0d[js] maybeCreatePreloadedBrowser%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2318" font-family="Helvetica, Arial, sans-serif" x="1652" y="2728.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2319" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">RtlLeaveCriticalSection</tspan></text></a><a id="SvgjsA2323" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2321" font-family="Helvetica, Arial, sans-serif" x="1652" y="2732.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2322" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2326" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2324" font-family="Helvetica, Arial, sans-serif" x="1652" y="2736.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2325" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2329" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2327" font-family="Helvetica, Arial, sans-serif" x="1652" y="2741.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2328" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2332" href="data:text/plain,public: static void __cdecl js::BarrierMethods&lt;class JSObject * __ptr64&gt;::exposeToJS(class JSObject * __ptr64)%0a%0d[js] FullZoom__loadContextFromBrowser%0a%0d[js] FullZoom_onLocationChange%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::nsStandardURL::QueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64%0a%0d[js] _isPDFViewer%0a%0d[js] XWB_onUpdateCurrentBrowser%0a%0d[js] handleEvent%0a%0dpublic: class nsIContent * __ptr64 __cdecl nsIContent::FindFirstNonChromeOnlyAccessContent(void)const __ptr64%0a%0dpublic: class mozilla::dom::EventTarget * __ptr64 __cdecl mozilla::dom::Event::GetComposedTarget(void)const __ptr64%0a%0dpublic: void __cdecl nsXULTooltipListener::MouseMove(class mozilla::dom::Event * __ptr64) __ptr64%0a%0dpublic: static struct mozilla::gfx::IntPointTyped&lt;struct mozilla::LayoutDevicePixel&gt; __cdecl nsLayoutUtils::WidgetToWidgetOffset(class nsIWidget * __ptr64,class nsIWidget * __ptr64)%0a%0dpublic: static struct nsPoint __cdecl nsLayoutUtils::GetEventCoordinatesRelativeTo(class nsIWidget * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::LayoutDevicePixel&gt; const &amp; __ptr64,class nsIFrame * __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::dom::XULFrameElement::QueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64%0a%0dpublic: static class js::ObjectGroup::Property * __ptr64 * __ptr64 __cdecl js::TypeHashSet::Insert&lt;struct JS::PropertyKey,class js::ObjectGroup::Property,class js::ObjectGroup::Property&gt;(class js::LifoAlloc &amp; __ptr64,class js::ObjectGroup::Property * __ptr64 * __ptr64 &amp; __ptr64,unsigned int &amp; __ptr64,struct JS::PropertyKey)%0a%0dpublic: class js::HeapTypeSet * __ptr64 __cdecl js::ObjectGroup::getProperty(class js::AutoSweepObjectGroup const &amp; __ptr64,struct JSContext * __ptr64,class JSObject * __ptr64,struct JS::PropertyKey) __ptr64%0a%0dvoid __cdecl js::AddTypePropertyId(struct JSContext * __ptr64,class js::ObjectGroup * __ptr64,class JSObject * __ptr64,struct JS::PropertyKey,class js::TypeSet::Type)%0a%0dbool __cdecl js::NativeSetProperty&lt;1&gt;(struct JSContext * __ptr64,class JS::Handle&lt;class js::NativeObject * __ptr64&gt;,class JS::Handle&lt;struct JS::PropertyKey&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::ObjectOpResult &amp; __ptr64)%0a%0dpublic: virtual void __cdecl nsHTMLButtonControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: virtual void __cdecl nsFlexContainerFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dDisplayLine%0a%0dpublic: virtual void __cdecl nsBlockFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2330" font-family="Helvetica, Arial, sans-serif" x="1652" y="2745.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2331" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: static void __cdecl js::BarrierMethods&lt;class JSObject * __ptr64&gt;::exposeToJS(class JSObject * __ptr64)</tspan></text></a><a id="SvgjsA2335" href="data:text/plain,public: __cdecl js::gc::AutoSuppressGC::AutoSuppressGC(struct JSContext * __ptr64) __ptr64%0a%0dpublic: __cdecl js::AutoSetNewObjectMetadata::~AutoSetNewObjectMetadata(void) __ptr64%0a%0dclass js::ArrayObject * __ptr64 __cdecl js::NewDenseFullyAllocatedArray(struct JSContext * __ptr64,unsigned int,class JS::Handle&lt;class JSObject * __ptr64&gt;,enum js::NewObjectKind)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2333" font-family="Helvetica, Arial, sans-serif" x="1652" y="2749.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2334" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: __cdecl js::gc::AutoSuppressGC::AutoSuppressGC(struct JSContext * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2338" href="data:text/plain,private: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2336" font-family="Helvetica, Arial, sans-serif" x="1652" y="2753.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2337" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">private: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2341" href="data:text/plain,bool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2339" font-family="Helvetica, Arial, sans-serif" x="1652" y="2757.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2340" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)</tspan></text></a><a id="SvgjsA2344" href="data:text/plain,bool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2342" font-family="Helvetica, Arial, sans-serif" x="1652" y="2762.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2343" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)</tspan></text></a><a id="SvgjsA2347" href="data:text/plain,public: void __cdecl IPC::SerializedLoadContext::Init(class nsILoadContext * __ptr64) __ptr64%0a%0dpublic: virtual enum mozilla::ipc::HasResultCodes::Result __cdecl mozilla::net::PNeckoParent::OnMessageReceived(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum mozilla::ipc::HasResultCodes::Result __cdecl mozilla::dom::PWindowGlobalParent::OnMessageReceived(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::dom::Document::DoNotifyPossibleTitleChange(void) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::insertFrames(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64) __ptr64%0a%0dprivate: void __cdecl js::SavedFrame::initFromLookup(struct JSContext * __ptr64,class JS::Handle&lt;struct js::SavedFrame::Lookup&gt;) __ptr64%0a%0dprivate: class js::SavedFrame * __ptr64 __cdecl js::SavedStacks::getOrCreateSavedFrame(struct JSContext * __ptr64,class JS::Handle&lt;struct js::SavedFrame::Lookup&gt;) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::adoptAsyncStack(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class JS::Handle&lt;class JSAtom * __ptr64&gt;,class mozilla::Maybe&lt;unsigned __int64&gt; const &amp; __ptr64) __ptr64%0a%0d[js] updateTitlebar%0a%0dXREMain::XRE_main"><text id="SvgjsText2345" font-family="Helvetica, Arial, sans-serif" x="1652" y="2766.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2346" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: void __cdecl IPC::SerializedLoadContext::Init(class nsILoadContext * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2350" href="data:text/plain,public: bool __cdecl mozilla::EffectCompositor::HasPendingStyleUpdates(void)const __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::URIParams::MaybeDestroy(enum mozilla::ipc::URIParams::Type) __ptr64%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::ipc::URIParams&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::ipc::URIParams * __ptr64)%0a%0dpublic: static void __cdecl nsContentUtils::AddScriptBlocker(void)%0a%0dprivate: class nsIFrame * __ptr64 __cdecl mozilla::PresShell::EventHandler::MaybeFlushThrottledStyles(class nsIFrame * __ptr64) __ptr64%0a%0dprivate: bool __cdecl JS::Compartment::getNonWrapperObjectForCurrentCompartment(struct JSContext * __ptr64,class JS::Handle&lt;class JSObject * __ptr64&gt;,class JS::MutableHandle&lt;class JSObject * __ptr64&gt;) __ptr64%0a%0d0x230bf599fad%0a%0d[js] handleEvent%0a%0dprivate: void __cdecl RedBlackTree&lt;struct arena_chunk_map_t,struct ArenaAvailTreeTrait&gt;::Remove(class RedBlackTree&lt;struct arena_chunk_map_t,struct ArenaAvailTreeTrait&gt;::TreeNode) __ptr64%0a%0dprotected: virtual bool __cdecl nsWindow::ProcessMessage(unsigned int,unsigned __int64 &amp; __ptr64,__int64 &amp; __ptr64,__int64 * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::ipc::URIParams::~URIParams(void) __ptr64%0a%0dmozilla::ipc::ReadIPDLParam&lt;RefPtr&lt;nsIURI&gt; &gt;%0a%0d[js] _adjustFocusAfterTabSwitch%0a%0dpublic: bool __cdecl mozilla::dom::PBrowserParent::SendStopIMEStateManagement(void) __ptr64%0a%0dPBrowser::Msg_StopIMEStateManagement%0a%0dpublic: enum nsresult __cdecl mozilla::dom::TimeoutManager::SetTimeout(class mozilla::dom::TimeoutHandler * __ptr64,int,bool,enum mozilla::dom::Timeout::Reason,int * __ptr64) __ptr64%0a%0dpublic: int __cdecl nsGlobalWindowInner::SetTimeoutOrInterval(struct JSContext * __ptr64,class mozilla::dom::Function &amp; __ptr64,int,class mozilla::dom::Sequence&lt;class JS::Value&gt; const &amp; __ptr64,bool,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprivate: void __cdecl mozilla::WidgetEvent::SetDefaultCancelableAndBubbles(void) __ptr64%0a%0dpublic: virtual class mozilla::WidgetEvent * __ptr64 __cdecl mozilla::WidgetMouseEvent::Duplicate(void)const __ptr64%0a%0dpublic: virtual void __cdecl mozilla::dom::Event::DuplicatePrivateData(void) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::dom::UIEvent::DuplicatePrivateData(void) __ptr64%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::getLocation(struct JSContext * __ptr64,class js::FrameIter const &amp; __ptr64,class JS::MutableHandle&lt;struct js::SavedStacks::LocationValue&gt;) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::insertFrames(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl js::SavedStacks::saveCurrentStack(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64) __ptr64%0a%0djs::SavedStacks::saveCurrentStack%0a%0dbool __cdecl JS::CaptureCurrentStack(struct JSContext * __ptr64,class JS::MutableHandle&lt;class JSObject * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64)%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2348" font-family="Helvetica, Arial, sans-serif" x="1652" y="2770.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2349" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: bool __cdecl mozilla::EffectCompositor::HasPendingStyleUpdates(void)const __ptr64</tspan></text></a><a id="SvgjsA2353" href="data:text/plain,0x230bf55e810%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2351" font-family="Helvetica, Arial, sans-serif" x="1652" y="2774.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2352" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">0x230bf55e810</tspan></text></a><a id="SvgjsA2356" href="data:text/plain,public: static char32_t __cdecl UTF8CharEnumerator::NextChar(char const * __ptr64 * __ptr64,char const * __ptr64,bool * __ptr64)%0a%0d0x230bf55e810%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2354" font-family="Helvetica, Arial, sans-serif" x="1652" y="2778.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2355" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: static char32_t __cdecl UTF8CharEnumerator::NextChar(char const * __ptr64 * __ptr64,char const * __ptr64,bool * __ptr64)</tspan></text></a><a id="SvgjsA2359" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2357" font-family="Helvetica, Arial, sans-serif" x="1652" y="2782.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2358" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA2362" href="data:text/plain,PL_strcasecmp%0a%0dpublic: static char32_t __cdecl UTF8CharEnumerator::NextChar(char const * __ptr64 * __ptr64,char const * __ptr64,bool * __ptr64)%0a%0d0x230bf55e810%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2360" font-family="Helvetica, Arial, sans-serif" x="1652" y="2787.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2361" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">PL_strcasecmp</tspan></text></a><a id="SvgjsA2365" href="data:text/plain,public: static class js::ObjectGroup * __ptr64 __cdecl js::ObjectGroup::defaultNewGroup(struct JSContext * __ptr64,struct JSClass const * __ptr64,class js::TaggedProto,class JSObject * __ptr64)%0a%0dSharedStub%0a%0dpublic: virtual enum nsresult __cdecl mozilla::psm::TransportSecurityInfo::GetServerCert(class nsIX509Cert * __ptr64 * __ptr64) __ptr64%0a%0dPCookieService::Msg_RemoveBatchDeletedCookies%0a%0dpublic: static class mozilla::Maybe&lt;unsigned __int64&gt; __cdecl mozilla::layers::AnimationInfo::GetGenerationFromFrame(class nsIFrame * __ptr64,enum DisplayItemType)%0a%0dprivate: virtual void * __ptr64 __cdecl nsTimerEvent::`scalar deleting destructor'(unsigned int) __ptr64%0a%0d0x230bf591281%0a%0dvoid __cdecl mozilla::jsipc::AfterProcessTask(void)%0a%0dprotected: void __cdecl MessageLoop::PostTask_Helper(struct already_AddRefed&lt;class nsIRunnable&gt;,int) __ptr64%0a%0d[js] get%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0dpublic: class js::jit::LAllocation * __ptr64 __cdecl js::jit::TempAllocator::allocateArray&lt;class js::jit::LAllocation&gt;(unsigned __int64) __ptr64%0a%0dpublic: static class js::jit::MBasicBlock * __ptr64 __cdecl js::jit::MBasicBlock::NewPopN(class js::jit::MIRGraph &amp; __ptr64,class js::jit::CompileInfo const &amp; __ptr64,class js::jit::MBasicBlock * __ptr64,class js::jit::BytecodeSite * __ptr64,enum js::jit::MBasicBlock::Kind,unsigned int)%0a%0djs::jit::IonBuilder::visitJumpTarget::&lt;unnamed-tag&gt;::operator()%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dprotected: virtual bool __cdecl nsWindow::ProcessMessage(unsigned int,unsigned __int64 &amp; __ptr64,__int64 &amp; __ptr64,__int64 * __ptr64) __ptr64%0a%0dNtAddAtomEx%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2363" font-family="Helvetica, Arial, sans-serif" x="1652" y="2791.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2364" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: static class js::ObjectGroup * __ptr64 __cdecl js::ObjectGroup::defaultNewGroup(struct JSContext * __ptr64,struct JSClass const * __ptr64,class js::TaggedProto,class JSObject * __ptr64)</tspan></text></a><a id="SvgjsA2368" href="data:text/plain,CreateEnvironmentObject&lt;js::CallObject&gt;%0a%0d[js] recordHang/moduleIdxs&lt;%0a%0d[js] map%0a%0d[js] recordHang%0a%0dstrnlen%0a%0dpublic: void __cdecl nsCOMPtr_base::assign_with_AddRef(class nsISupports * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::net::HttpChannelParent::HttpChannelParent(class mozilla::dom::PBrowserOrId const &amp; __ptr64,class nsILoadContext * __ptr64,enum mozilla::net::PBOverrideStatus) __ptr64%0a%0dAddAnimationsForDisplayItem%0a%0dpublic: void __cdecl gfxContext::SetMatrixDouble(class mozilla::gfx::BaseMatrix&lt;double&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::nsCSSGradientRenderer::Paint(class gfxContext &amp; __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,struct nsSize const &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::CSSPixel&gt; const &amp; __ptr64,struct nsRect const &amp; __ptr64,float) __ptr64%0a%0dprotected: virtual void __cdecl SkCanvas::onClipRect(struct SkRect const &amp; __ptr64,enum SkClipOp,enum SkCanvas::ClipEdgeStyle) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::gfx::DrawTargetSkia::ClearRect(struct mozilla::gfx::RectTyped&lt;struct mozilla::gfx::UnknownUnits,float&gt; const &amp; __ptr64) __ptr64%0a%0d_ZN6euclid4rect17Rect$LT$T$C$U$GT$4zero17hed84d751af377122E%0a%0dMaybePageAlloc%0a%0dCRenderObj::GetPartObject&lt;CDrawBase&gt;(int,int,CDrawBase * *)%0a%0dIsThemeBackgroundPartiallyTransparent%0a%0d[js] lazyGetter%0a%0d[js] runDelayed%0a%0dpublic: virtual enum nsresult __cdecl mozilla::dom::Element::BindToTree(struct mozilla::dom::BindContext &amp; __ptr64,class nsINode &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2366" font-family="Helvetica, Arial, sans-serif" x="1652" y="2795.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2367" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">CreateEnvironmentObject&lt;js::CallObject&gt;</tspan></text></a><a id="SvgjsA2371" href="data:text/plain,[js] map%0a%0dPL_strcasecmp%0a%0dpublic: static char32_t __cdecl UTF8CharEnumerator::NextChar(char const * __ptr64 * __ptr64,char const * __ptr64,bool * __ptr64)%0a%0d0x230bf55e810%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2369" font-family="Helvetica, Arial, sans-serif" x="1652" y="2799.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2370" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">[js] map</tspan></text></a><a id="SvgjsA2374" href="data:text/plain,[js] recordHang%0a%0dstrnlen%0a%0dpublic: void __cdecl nsCOMPtr_base::assign_with_AddRef(class nsISupports * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::net::HttpChannelParent::HttpChannelParent(class mozilla::dom::PBrowserOrId const &amp; __ptr64,class nsILoadContext * __ptr64,enum mozilla::net::PBOverrideStatus) __ptr64%0a%0dAddAnimationsForDisplayItem%0a%0dpublic: void __cdecl gfxContext::SetMatrixDouble(class mozilla::gfx::BaseMatrix&lt;double&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::nsCSSGradientRenderer::Paint(class gfxContext &amp; __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,struct nsSize const &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::CSSPixel&gt; const &amp; __ptr64,struct nsRect const &amp; __ptr64,float) __ptr64%0a%0dprotected: virtual void __cdecl SkCanvas::onClipRect(struct SkRect const &amp; __ptr64,enum SkClipOp,enum SkCanvas::ClipEdgeStyle) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::gfx::DrawTargetSkia::ClearRect(struct mozilla::gfx::RectTyped&lt;struct mozilla::gfx::UnknownUnits,float&gt; const &amp; __ptr64) __ptr64%0a%0d_ZN6euclid4rect17Rect$LT$T$C$U$GT$4zero17hed84d751af377122E%0a%0dMaybePageAlloc%0a%0dCRenderObj::GetPartObject&lt;CDrawBase&gt;(int,int,CDrawBase * *)%0a%0dIsThemeBackgroundPartiallyTransparent%0a%0d[js] lazyGetter%0a%0d[js] runDelayed%0a%0dpublic: virtual enum nsresult __cdecl mozilla::dom::Element::BindToTree(struct mozilla::dom::BindContext &amp; __ptr64,class nsINode &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2372" font-family="Helvetica, Arial, sans-serif" x="1652" y="2803.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2373" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">[js] recordHang</tspan></text></a><a id="SvgjsA2377" href="data:text/plain,InitOnceExecuteOnce%0a%0dprotected: static class js::Shape * __ptr64 __cdecl js::NativeObject::addAccessorPropertyInternal(struct JSContext * __ptr64,class JS::Handle&lt;class js::NativeObject * __ptr64&gt;,class JS::Handle&lt;struct JS::PropertyKey&gt;,bool (__cdecl*)(struct JSContext * __ptr64,class JS::Handle&lt;class JSObject * __ptr64&gt;,class JS::Handle&lt;struct JS::PropertyKey&gt;,class JS::MutableHandle&lt;class JS::Value&gt;),bool (__cdecl*)(struct JSContext * __ptr64,class JS::Handle&lt;class JSObject * __ptr64&gt;,class JS::Handle&lt;struct JS::PropertyKey&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::ObjectOpResult &amp; __ptr64),unsigned int,class js::ShapeTable * __ptr64,class js::ShapeTable::Entry * __ptr64,class js::AutoKeepShapeCaches const &amp; __ptr64)%0a%0dXREMain::XRE_main"><text id="SvgjsText2375" font-family="Helvetica, Arial, sans-serif" x="1652" y="2807.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2376" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">InitOnceExecuteOnce</tspan></text></a><a id="SvgjsA2380" href="data:text/plain,[js] runChannelListener%0a%0d[js] observe%0a%0dpublic: class nsIScrollableFrame * __ptr64 __cdecl mozilla::PresShell::GetRootScrollFrameAsScrollable(void)const __ptr64%0a%0dpublic: void __cdecl nsStyleImage::ResolveImage(class mozilla::dom::Document &amp; __ptr64,struct nsStyleImage const * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ComputedStyle::StartImageLoads(class mozilla::dom::Document &amp; __ptr64,class mozilla::ComputedStyle const * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::iter&lt;u32&gt;%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: virtual void __cdecl nsWindow::Resize(double,double,double,double,bool) __ptr64%0a%0dpublic: virtual void __cdecl nsBaseWidget::ResizeClient(double,double,double,double,bool) __ptr64%0a%0dprivate: void __cdecl nsView::DoResetWidgetBounds(bool,bool) __ptr64%0a%0dsmallvec::SmallVec&lt;[selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;; 32]&gt;::spilled&lt;[selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;; 32]&gt;%0a%0dsmallvec::SmallVec&lt;[selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;; 32]&gt;::triple_mut&lt;[selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;; 32]&gt;%0a%0dsmallvec::SmallVec&lt;[(style::properties::PropertyDeclaration*, style::stylesheets::origin::Origin); 32]&gt;::push&lt;[(style::properties::PropertyDeclaration*, style::stylesheets::origin::Origin); 32]&gt;%0a%0d_fnINOUTLPSIZE%0a%0dlong AddServiceToFileMapping(struct IStream *,struct IViewServiceIdentity *,struct _GUID const &amp;,struct _SECURITY_ATTRIBUTES *,struct IUnknown *,enum LifetimeManagerNotificationOptions)%0a%0dlong AddServiceToFileMapping(struct IStream *,struct IViewServiceIdentity *,struct _GUID const &amp;,struct _SECURITY_ATTRIBUTES *,struct IUnknown *,enum LifetimeManagerNotificationOptions)%0a%0dCoreRegisterWindowService%0a%0dNtUserSetProp%0a%0dSetPropW%0a%0dpublic: static bool __cdecl mozilla::widget::WinUtils::SetNSWindowBasePtr(struct HWND__ * __ptr64,class nsWindowBase * __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl nsWindow::Create(class nsIWidget * __ptr64,void * __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::LayoutDevicePixel&gt; const &amp; __ptr64,struct nsWidgetInitData * __ptr64) __ptr64%0a%0denum nsresult __cdecl mozilla::ipc::LoadInfoArgsToLoadInfo(class mozilla::Maybe&lt;class mozilla::net::LoadInfoArgs&gt; const &amp; __ptr64,class nsILoadInfo * __ptr64 * __ptr64)%0a%0dpublic: bool __cdecl JSFunction::needsCallObject(void)const __ptr64%0a%0dpublic: __cdecl mozilla::net::LoadInfoArgs::~LoadInfoArgs(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsHttpChannel::OnBeforeConnect(void) __ptr64%0a%0dpublic: struct mozilla::dom::OriginAttributesDictionary &amp; __ptr64 __cdecl mozilla::dom::OriginAttributesDictionary::operator=(struct mozilla::dom::OriginAttributesDictionary const &amp; __ptr64) __ptr64%0a%0dpublic: static char const * __ptr64 __cdecl mozilla::net::NeckoParent::CreateChannelLoadContext(class mozilla::dom::PBrowserOrId const &amp; __ptr64,class mozilla::dom::PContentParent * __ptr64,class IPC::SerializedLoadContext const &amp; __ptr64,class nsIPrincipal * __ptr64,class nsCOMPtr&lt;class nsILoadContext&gt; &amp; __ptr64)%0a%0d_security_check_cookie%0a%0dpublic: static bool __cdecl nsLayoutUtils::AreRetainedDisplayListsEnabled(void)%0a%0dpublic: void __cdecl nsIFrame::MarkNeedsDisplayItemRebuild(void) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::SelectionStateChanged(unsigned int,unsigned int,bool,enum mozilla::SelectionType) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dnsLayoutUtils::GetFramesForArea%0a%0dpublic: static class nsIFrame * __ptr64 __cdecl nsLayoutUtils::GetFrameForPoint(class nsIFrame * __ptr64,struct nsPoint,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dstruct HICON__* LoadIcoCur(struct HINSTANCE__*,unsigned short const *,unsigned short *,unsigned long,unsigned long,unsigned int)%0a%0dLoadCursorW%0a%0dpublic: virtual void __cdecl nsWindow::SetCursor(enum nsCursor,class imgIContainer * __ptr64,unsigned int,unsigned int) __ptr64%0a%0dpublic: enum nsresult __cdecl mozilla::EventStateManager::SetCursor(enum mozilla::StyleCursorKind,class imgIContainer * __ptr64,class mozilla::Maybe&lt;struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; &gt; const &amp; __ptr64,class nsIWidget * __ptr64,bool) __ptr64%0a%0dprotected: void __cdecl mozilla::EventStateManager::UpdateCursor(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class nsIFrame * __ptr64,enum nsEventStatus * __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl mozilla::EventStateManager::PreHandleEvent(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class nsIFrame * __ptr64,class nsIContent * __ptr64,enum nsEventStatus * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2378" font-family="Helvetica, Arial, sans-serif" x="1652" y="2812.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2379" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">[js] runChannelListener</tspan></text></a><a id="SvgjsA2383" href="data:text/plain,public: bool __cdecl mozilla::dom::MozRequestFilter::Init(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,char const * __ptr64,bool) __ptr64%0a%0d[js] map%0a%0dPL_strcasecmp%0a%0dpublic: static char32_t __cdecl UTF8CharEnumerator::NextChar(char const * __ptr64 * __ptr64,char const * __ptr64,bool * __ptr64)%0a%0d0x230bf55e810%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2381" font-family="Helvetica, Arial, sans-serif" x="1652" y="2816.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2382" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: bool __cdecl mozilla::dom::MozRequestFilter::Init(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,char const * __ptr64,bool) __ptr64</tspan></text></a><a id="SvgjsA2386" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2384" font-family="Helvetica, Arial, sans-serif" x="1652" y="2820.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2385" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA2389" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2387" font-family="Helvetica, Arial, sans-serif" x="1652" y="2824.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2388" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2392" href="data:text/plain,class JSObject * __ptr64 __cdecl js::GetFirstGlobalInCompartment(class JS::Compartment * __ptr64)%0a%0dpublic: bool __cdecl mozilla::dom::MozRequestFilter::Init(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,char const * __ptr64,bool) __ptr64%0a%0d[js] map%0a%0dPL_strcasecmp%0a%0dpublic: static char32_t __cdecl UTF8CharEnumerator::NextChar(char const * __ptr64 * __ptr64,char const * __ptr64,bool * __ptr64)%0a%0d0x230bf55e810%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2390" font-family="Helvetica, Arial, sans-serif" x="1652" y="2828.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2391" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">class JSObject * __ptr64 __cdecl js::GetFirstGlobalInCompartment(class JS::Compartment * __ptr64)</tspan></text></a><a id="SvgjsA2395" href="data:text/plain,public: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dpublic: bool __cdecl JS::Zone::getOrCreateUniqueId(struct js::gc::Cell * __ptr64,unsigned __int64 * __ptr64) __ptr64%0a%0d[js] onAction%0a%0d[thunk]:public: virtual unsigned long __cdecl mozilla::net::nsStandardURL::Mutator::AddRef`adjustor{24}' (void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::nsStandardURL::Mutator::QueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64%0a%0d ?? ?? :: ?? ::_Do_call&lt;lambda_1&gt;@?0???$NS_MutatorMethod@P8nsIStandardURLMutator@@EAA?AW4nsresult@@IHAEBV?$nsTSubstring@D@@PEBDPEAVnsIURI@@PEAPEAVnsIURIMutator@@@ZW4&lt;unnamed-enum-URLTYPE_STANDARD&gt;@nsIStandardURL@@HV?$nsTString@D@@PEBDV?$nsCOMPtr@VnsIURL@@@@$$T@@YA?BV?$function@$$A6A?AW4nsresult@@PEAVnsIURIMutator@@@Z@std@@P8nsIStandardURLMutator@@EAA?AW4nsresult@@IHAEBV?$nsTSubstring@D@@PEBDPEAVnsIURI@@PEAPEAVnsIURIMutator@@@ZW4&lt;unnamed-enum-URLTYPE_STANDARD&gt;@nsIStandardURL@@HV?$nsTString@D@@1V?$nsCOMPtr@VnsIURL@@@@$$T@Z@W45@PEAV8@@std@@EEAA?AW4nsresult@@$$QEAPEAVnsIURIMutator@@@Z%0a%0dmemcpy()%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2393" font-family="Helvetica, Arial, sans-serif" x="1652" y="2833.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2394" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)</tspan></text></a><a id="SvgjsA2398" href="data:text/plain,RtlAcquireSRWLockExclusive%0a%0dpublic: void __cdecl mozilla::PresShell::EnsureStyleFlush(void) __ptr64%0a%0dmozilla::dom::NoteDirtyElement%0a%0d_ZN5style5gecko7wrapper12GeckoElement19note_explicit_hints17h487c44e9cbf58e8cE%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::getLocation(struct JSContext * __ptr64,class js::FrameIter const &amp; __ptr64,class JS::MutableHandle&lt;struct js::SavedStacks::LocationValue&gt;) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::insertFrames(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl js::SavedStacks::saveCurrentStack(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64) __ptr64%0a%0djs::SavedStacks::saveCurrentStack%0a%0dbool __cdecl JS::CaptureCurrentStack(struct JSContext * __ptr64,class JS::MutableHandle&lt;class JSObject * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64)%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2396" font-family="Helvetica, Arial, sans-serif" x="1652" y="2837.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2397" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">RtlAcquireSRWLockExclusive</tspan></text></a><a id="SvgjsA2401" href="data:text/plain,protected: enum nsresult __cdecl mozilla::net::nsStandardURL::EqualsInternal(class nsIURI * __ptr64,enum mozilla::net::nsStandardURL::RefHandlingEnum,bool * __ptr64) __ptr64%0a%0dmozilla::net::`anonymous namespace'::FeatureData::InitializeList%0a%0dclass JSObject * __ptr64 __cdecl js::GetFirstGlobalInCompartment(class JS::Compartment * __ptr64)%0a%0dpublic: bool __cdecl mozilla::dom::MozRequestFilter::Init(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,char const * __ptr64,bool) __ptr64%0a%0d[js] map%0a%0dPL_strcasecmp%0a%0dpublic: static char32_t __cdecl UTF8CharEnumerator::NextChar(char const * __ptr64 * __ptr64,char const * __ptr64,bool * __ptr64)%0a%0d0x230bf55e810%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2399" font-family="Helvetica, Arial, sans-serif" x="1652" y="2841.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2400" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">protected: enum nsresult __cdecl mozilla::net::nsStandardURL::EqualsInternal(class nsIURI * __ptr64,enum mozilla::net::nsStandardURL::RefHandlingEnum,bool * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2404" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2402" font-family="Helvetica, Arial, sans-serif" x="1652" y="2845.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2403" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA2407" href="data:text/plain,__security_check_cookie%0a%0dpublic: struct PLDHashEntryHdr * __ptr64 __cdecl PLDHashTable::Add(void const * __ptr64,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsBaseHashtable&lt;class nsPtrHashKey&lt;class nsIFrame&gt;,class RefPtr&lt;struct AnimatedGeometryRoot&gt;,class RefPtr&lt;struct AnimatedGeometryRoot&gt;,class nsDefaultConverter&lt;class RefPtr&lt;struct AnimatedGeometryRoot&gt;,class RefPtr&lt;struct AnimatedGeometryRoot&gt; &gt; &gt;::Put(class nsIFrame * __ptr64,class RefPtr&lt;struct AnimatedGeometryRoot&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::BeginFrame(void) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dnsLayoutUtils::GetFramesForArea%0a%0dpublic: static class js::ObjectGroup * __ptr64 __cdecl js::ObjectGroup::defaultNewGroup(struct JSContext * __ptr64,struct JSClass const * __ptr64,class js::TaggedProto,class JSObject * __ptr64)%0a%0dpublic: static class js::CallObject * __ptr64 __cdecl js::CallObject::createTemplateObject(struct JSContext * __ptr64,class JS::Handle&lt;class JSScript * __ptr64&gt;,class JS::Handle&lt;class JSObject * __ptr64&gt;,enum js::gc::InitialHeap)%0a%0dpublic: static class js::CallObject * __ptr64 __cdecl js::CallObject::create(struct JSContext * __ptr64,class js::AbstractFramePtr)%0a%0d0x230bf313bea%0a%0dEventDispatcher::Dispatch mousemove%0a%0dprivate: static class mozilla::TimeStamp __cdecl mozilla::TimeStamp::Now(bool)%0a%0dpublic: virtual void __cdecl mozilla::ipc::ProcessLink::SendMessage(class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt;::Invert(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::BrowserParent::SendRealMouseEvent(class mozilla::WidgetMouseEvent &amp; __ptr64) __ptr64%0a%0dmemcpy()%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::Append(char const * __ptr64,unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTSubstring&lt;char&gt;::Append(char const * __ptr64,unsigned int) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dprivate: static __int64 __cdecl mozilla::TIPMessageHandler::TIPHook(int,unsigned __int64,__int64)%0a%0dint64_t DispatchHookW(int,uint64_t,int64_t,int64_t ( *)(int,uint64_t,int64_t))%0a%0dpublic: static void __cdecl mozilla::RestyleManager::AddLayerChangesForAnimation(class nsIFrame * __ptr64,class nsIFrame * __ptr64,class mozilla::dom::Element * __ptr64,enum nsChangeHint,class nsStyleChangeList &amp; __ptr64)%0a%0dprotected: bool __cdecl mozilla::RestyleManager::ProcessPostTraversal(class mozilla::dom::Element * __ptr64,class mozilla::ComputedStyle * __ptr64,class mozilla::ServoRestyleState &amp; __ptr64,enum mozilla::ServoPostTraversalFlags) __ptr64%0a%0dpublic: __cdecl JSAutoRealm::JSAutoRealm(struct JSContext * __ptr64,class JSObject * __ptr64) __ptr64%0a%0dpublic: static bool __cdecl XPCConvert::NativeInterface2JSObject(struct JSContext * __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;,class xpcObjectHelper &amp; __ptr64,struct nsID const * __ptr64,bool,enum nsresult * __ptr64)%0a%0dget Window.windowUtils%0a%0d[js] handleEvent%0a%0dpublic: __cdecl nsDisplayListBuilder::AutoBuildingDisplayList::AutoBuildingDisplayList(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForSimpleChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0d[thunk]:public: virtual unsigned long __cdecl nsGlobalWindowInner::AddRef`adjustor{256}' (void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsGlobalWindowInner::QueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64%0a%0dpublic: class nsIGlobalObject * __ptr64 __cdecl mozilla::dom::Document::GetScopeObject(void)const __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Event::SetOwner(class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprivate: void __cdecl mozilla::dom::Event::ConstructorInit(class mozilla::dom::EventTarget * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::Event::Event(class mozilla::dom::EventTarget * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::UIEvent::UIEvent(class mozilla::dom::EventTarget * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetGUIEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::MouseEvent::MouseEvent(class mozilla::dom::EventTarget * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetMouseEventBase * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::PointerEvent::PointerEvent(class mozilla::dom::EventTarget * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetPointerEvent * __ptr64) __ptr64%0a%0dstruct already_AddRefed&lt;class mozilla::dom::PointerEvent&gt; __cdecl NS_NewDOMPointerEvent(class mozilla::dom::EventTarget * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetPointerEvent * __ptr64)%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dnsLayoutUtils::GetFramesForArea%0a%0dnsLayoutUtils::GetFrameForPoint%0a%0d[js] onMayChangeProcess%0a%0d[js] ssi_observe%0a%0dnsObserverService::NotifyObservers channel-on-may-change-process%0a%0dbool __cdecl JS_GetPropertyById(struct JSContext * __ptr64,class JS::Handle&lt;class JSObject * __ptr64&gt;,class JS::Handle&lt;struct JS::PropertyKey&gt;,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: enum nsresult __cdecl nsXPCWrappedJS::DelegatedQueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64%0a%0dXPCWrappedJS QueryInterface%0a%0dpublic: void __cdecl nsCOMPtr_base::assign_from_qi(class nsQueryInterfaceISupports,struct nsID const &amp; __ptr64) __ptr64%0a%0dXREMain::XRE_main"><text id="SvgjsText2405" font-family="Helvetica, Arial, sans-serif" x="1652" y="2849.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2406" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">__security_check_cookie</tspan></text></a><a id="SvgjsA2410" href="data:text/plain,public: bool __cdecl nsIFrame::RemoveDisplayItem(class nsDisplayItemBase * __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl mozilla::EventStateManager::PreHandleEvent(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class nsIFrame * __ptr64,class nsIContent * __ptr64,enum nsEventStatus * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2408" font-family="Helvetica, Arial, sans-serif" x="1652" y="2853.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2409" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: bool __cdecl nsIFrame::RemoveDisplayItem(class nsDisplayItemBase * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2413" href="data:text/plain,public: int __cdecl AttrArray::IndexOfAttr(class nsAtom const * __ptr64,int)const __ptr64%0a%0dprotected: __cdecl mozilla::net::nsStandardURL::nsStandardURL(bool,bool) __ptr64%0a%0dprotected: virtual enum nsresult __cdecl mozilla::net::nsStandardURL::Clone(class nsIURI * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::nsStandardURL::Mutate(class nsIURIMutator * __ptr64 * __ptr64) __ptr64%0a%0dpublic: __cdecl NS_MutateURI::NS_MutateURI(class nsIURI * __ptr64) __ptr64%0a%0denum nsresult __cdecl NS_GetURIWithNewRef(class nsIURI * __ptr64,class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsIURI * __ptr64 * __ptr64)%0a%0denum nsresult __cdecl NS_NewURI(class nsIURI * __ptr64 * __ptr64,class nsTSubstring&lt;char&gt; const &amp; __ptr64,char const * __ptr64,class nsIURI * __ptr64)%0a%0dResolveURLUsingLocalRef%0a%0dpublic: static class nsSVGPaintServerFrame * __ptr64 __cdecl mozilla::SVGObserverUtils::GetAndObservePaintServer(class nsIFrame * __ptr64,struct mozilla::StyleGenericSVGPaint&lt;struct mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;,struct mozilla::StyleComputedUrl&gt; nsStyleSVG::* __ptr64)%0a%0dpublic: static void __cdecl nsSVGUtils::MakeFillPatternFor(class nsIFrame * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::GeneralPattern * __ptr64,struct mozilla::image::imgDrawingParams &amp; __ptr64,class mozilla::SVGContextPaint * __ptr64)%0a%0dprivate: void __cdecl mozilla::SVGGeometryFrame::Render(class gfxContext * __ptr64,unsigned int,class mozilla::gfx::BaseMatrix&lt;double&gt; const &amp; __ptr64,struct mozilla::image::imgDrawingParams &amp; __ptr64) __ptr64%0a%0dpublic: virtual unsigned long __cdecl mozilla::net::nsIOService::Release(void) __ptr64%0a%0dbool __cdecl NS_URIIsLocalFile(class nsIURI * __ptr64)%0a%0denum nsresult __cdecl mozilla::ipc::LoadInfoArgsToLoadInfo(class mozilla::Maybe&lt;class mozilla::net::LoadInfoArgs&gt; const &amp; __ptr64,class nsINode * __ptr64,class nsINode * __ptr64,class mozilla::net::LoadInfo * __ptr64 * __ptr64)%0a%0dXPCWrappedJS QueryInterface%0a%0dpublic: void __cdecl nsCOMPtr_base::assign_from_qi(class nsQueryInterfaceISupports,struct nsID const &amp; __ptr64) __ptr64%0a%0dXREMain::XRE_main"><text id="SvgjsText2411" font-family="Helvetica, Arial, sans-serif" x="1652" y="2858.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2412" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: int __cdecl AttrArray::IndexOfAttr(class nsAtom const * __ptr64,int)const __ptr64</tspan></text></a><a id="SvgjsA2416" href="data:text/plain,private: void * __ptr64 __cdecl nsPropertyTable::GetPropertyInternal(class nsPropertyOwner,class nsAtom const * __ptr64,bool,enum nsresult * __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::MaybeCreateDisplayPort(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,enum nsLayoutUtils::RepaintMode)%0a%0dcore::iter::adapters::zip::{{impl}}::next_back&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0dpublic: unsigned int __cdecl nsTSubstringTuple&lt;char16_t&gt;::Length(void)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::Assign(class nsTSubstringTuple&lt;char&gt; const &amp; __ptr64,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::Assign(class nsTSubstringTuple&lt;char&gt; const &amp; __ptr64,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsContentUtils::IsURIInList(class nsIURI * __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::nsStandardURL::GetScheme(class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dbool __cdecl JS::InstanceofOperator(struct JSContext * __ptr64,class JS::Handle&lt;class JSObject * __ptr64&gt;,class JS::Handle&lt;class JS::Value&gt;,bool * __ptr64)%0a%0d[js] switchToReload%0a%0d_ZN8nsstring11conversions37_$LT$impl$u20$nsstring..nsAString$GT$25fallible_append_utf8_impl17he382b5b5150e1071E%0a%0dpublic: virtual enum nsresult __cdecl mozilla::dom::ReleasingTimerHolder::GetName(class nsTSubstring&lt;char16_t&gt; &amp; __ptr64) __ptr64%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dXREMain::XRE_main"><text id="SvgjsText2414" font-family="Helvetica, Arial, sans-serif" x="1652" y="2862.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2415" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">private: void * __ptr64 __cdecl nsPropertyTable::GetPropertyInternal(class nsPropertyOwner,class nsAtom const * __ptr64,bool,enum nsresult * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2419" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2417" font-family="Helvetica, Arial, sans-serif" x="1652" y="2866.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2418" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2422" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2420" font-family="Helvetica, Arial, sans-serif" x="1652" y="2870.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2421" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2425" href="data:text/plain,core::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::{{impl}}::clone&lt;style::gecko_bindings::structs::root::mozilla::GeckoEffects&gt;%0a%0dservo_arc::RawOffsetArc&lt;style::gecko_bindings::structs::root::mozilla::GeckoSVG&gt;::with_arc&lt;style::gecko_bindings::structs::root::mozilla::GeckoSVG,closure-0,servo_arc::Arc&lt;style::gecko_bindings::structs::root::mozilla::GeckoSVG&gt;&gt;%0a%0d_ZN5style10properties23StyleStructRef$LT$T$GT$5build17h32aa5d7876d44d81E%0a%0d_ZN5style10properties12StyleBuilder5build17hd3e81ee90633f58eE%0a%0dunsigned int __cdecl mozilla::HashUTF8AsUTF16(char const * __ptr64,unsigned int,bool * __ptr64)%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10each_class17h0c8707fabc197797E%0a%0d[js] cancelUnselectedTabHoverTimer%0a%0d[js] _mouseleave%0a%0d[js] on_mouseout%0a%0dEventDispatcher::Dispatch mouseout%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dsmallvec::SmallVec&lt;[(style::rule_tree::StyleSource, style::rule_tree::CascadeLevel); 10]&gt;::len&lt;[(style::rule_tree::StyleSource, style::rule_tree::CascadeLevel); 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::is_empty&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN5style12invalidation7element11invalidator27DescendantInvalidationLists8is_empty17h788e245a12f79321E%0a%0d__security_check_cookie%0a%0dXREMain::XRE_main"><text id="SvgjsText2423" font-family="Helvetica, Arial, sans-serif" x="1652" y="2874.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2424" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">core::sync::atomic::atomic_load&lt;usize&gt;</tspan></text></a><a id="SvgjsA2428" href="data:text/plain,public: void * __ptr64 __cdecl AddressRadixTree&lt;44&gt;::Get(void * __ptr64) __ptr64%0a%0dpublic: void __cdecl std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class Json::Value::CZString const ,class Json::Value&gt; &gt; &gt;::_Erase_tree&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class Json::Value::CZString const ,class Json::Value&gt;,void * __ptr64&gt; &gt; &gt;(class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class Json::Value::CZString const ,class Json::Value&gt;,void * __ptr64&gt; &gt; &amp; __ptr64,struct std::_Tree_node&lt;struct std::pair&lt;class Json::Value::CZString const ,class Json::Value&gt;,void * __ptr64&gt; * __ptr64) __ptr64%0a%0dpublic: __cdecl Json::Value::~Value(void) __ptr64%0a%0dpublic: static struct already_AddRefed&lt;class mozilla::BasePrincipal&gt; __cdecl mozilla::BasePrincipal::FromJSON(class nsTSubstring&lt;char&gt; const &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl nsCSPContext::Read(class nsIObjectInputStream * __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsIContentSecurityPolicy * __ptr64&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class RefPtr&lt;class nsIContentSecurityPolicy&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::dom::WebProgressLocationChangeData&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::dom::WebProgressLocationChangeData * __ptr64)%0a%0d[js] onDOMContentLoaded%0a%0dXREMain::XRE_main"><text id="SvgjsText2426" font-family="Helvetica, Arial, sans-serif" x="1652" y="2878.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2427" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">public: void * __ptr64 __cdecl AddressRadixTree&lt;44&gt;::Get(void * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA2431" href="data:text/plain,NtDeviceIoControlFile%0a%0dWSPSend%0a%0dsend%0a%0d_PR_MD_SEND%0a%0dSocketSend%0a%0dSocketWrite%0a%0dpublic: bool __cdecl mozilla::net::PollableEvent::Signal(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::nsSocketTransportService::OnDispatchedEvent(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::ThreadEventQueue&lt;class mozilla::EventQueue&gt;::PutEventInternal(struct already_AddRefed&lt;class nsIRunnable&gt; &amp;&amp; __ptr64,enum mozilla::EventQueuePriority,class mozilla::ThreadEventQueue&lt;class mozilla::EventQueue&gt;::NestedSink * __ptr64) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::nsSocketTransportService::Dispatch(struct already_AddRefed&lt;class nsIRunnable&gt;,unsigned int) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsHttpConnectionMgr::PostEvent(void (__cdecl mozilla::net::nsHttpConnectionMgr::*)(int,class mozilla::net::ARefBase * __ptr64) __ptr64,int,class mozilla::net::ARefBase * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::EnterPresShell(class nsIFrame * __ptr64,bool) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dGetWindowRect%0a%0dpublic: virtual struct mozilla::gfx::IntRectTyped&lt;struct mozilla::LayoutDevicePixel&gt; __cdecl nsWindow::GetBounds(void) __ptr64%0a%0dpublic: virtual bool __cdecl nsWindow::DispatchMouseEvent(enum mozilla::EventMessage,unsigned __int64,__int64,bool,short,unsigned short,class WinPointerInfo * __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ThreadEventQueue&lt;class mozilla::PrioritizedEventQueue&gt;::PutEventInternal(struct already_AddRefed&lt;class nsIRunnable&gt; &amp;&amp; __ptr64,enum mozilla::EventQueuePriority,class mozilla::ThreadEventQueue&lt;class mozilla::PrioritizedEventQueue&gt;::NestedSink * __ptr64) __ptr64%0a%0dpublic: virtual unsigned long __cdecl mozilla::net::nsIOService::Release(void) __ptr64%0a%0dbool __cdecl NS_URIIsLocalFile(class nsIURI * __ptr64)%0a%0denum nsresult __cdecl mozilla::ipc::LoadInfoArgsToLoadInfo(class mozilla::Maybe&lt;class mozilla::net::LoadInfoArgs&gt; const &amp; __ptr64,class nsINode * __ptr64,class nsINode * __ptr64,class mozilla::net::LoadInfo * __ptr64 * __ptr64)%0a%0dXPCWrappedJS QueryInterface%0a%0dpublic: void __cdecl nsCOMPtr_base::assign_from_qi(class nsQueryInterfaceISupports,struct nsID const &amp; __ptr64) __ptr64%0a%0dXREMain::XRE_main"><text id="SvgjsText2429" font-family="Helvetica, Arial, sans-serif" x="1652" y="2883.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2430" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtDeviceIoControlFile</tspan></text></a><a id="SvgjsA2434" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText2432" font-family="Helvetica, Arial, sans-serif" x="1652" y="2887.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2433" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA2437" href="data:text/plain,replace_malloc%0a%0dpublic: __cdecl mozilla::dom::ServiceWorkerDescriptor::ServiceWorkerDescriptor(class mozilla::dom::ServiceWorkerDescriptor &amp;&amp; __ptr64) __ptr64%0a%0denum nsresult __cdecl mozilla::ipc::LoadInfoArgsToLoadInfo(class mozilla::Maybe&lt;class mozilla::net::LoadInfoArgs&gt; const &amp; __ptr64,class nsINode * __ptr64,class nsINode * __ptr64,class mozilla::net::LoadInfo * __ptr64 * __ptr64)%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::Init(unsigned int,int,class nsTSubstring&lt;char&gt; const &amp; __ptr64,char const * __ptr64,class nsIURI * __ptr64) __ptr64%0a%0dmemcpy()%0a%0dclass JSLinearString * __ptr64 __cdecl js::NewStringCopyNDontDeflate&lt;1,unsigned char&gt;(struct JSContext * __ptr64,unsigned char const * __ptr64,unsigned __int64)%0a%0dpublic: void __cdecl arena_t::DallocSmall(struct arena_chunk_t * __ptr64,void * __ptr64,struct arena_chunk_map_t * __ptr64) __ptr64%0a%0dprivate: virtual void * __ptr64 __cdecl mozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dprivate: __cdecl mozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void) __ptr64%0a%0d[thunk]:public: virtual unsigned long __cdecl mozilla::net::nsAsyncResolveRequest::Release`adjustor{8}' (void) __ptr64%0a%0d_ZN50_$LT$T$u20$as$u20$core..convert..Into$LT$U$GT$$GT$4into17hcc44ec7b04e517f1E%0a%0dmozilla::dom::ChannelWrapper_Binding::matches%0a%0dChannelWrapper.matches%0a%0dpublic: virtual enum nsresult __cdecl mozilla::dom::ReferrerInfo::Read(class nsIObjectInputStream * __ptr64) __ptr64%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText2435" font-family="Helvetica, Arial, sans-serif" x="1652" y="2891.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2436" dy="6.5" x="1652" svgjs:data="{&quot;newLined&quot;:true}">replace_malloc</tspan></text></a></svg>