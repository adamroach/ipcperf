<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" width="1280" height="2071"><svg id="SvgjsSvg1001" width="2" height="0" focusable="false" style="overflow:hidden;top:-100%;left:-100%;position:absolute;opacity:0"><polyline id="SvgjsPolyline1002" points="0,0"></polyline><path id="SvgjsPath1003" d="M0 0 "></path></svg><line id="SvgjsLine1005" x1="160" y1="20" x2="160" y2="2071" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1006" font-family="Helvetica, Arial, sans-serif" x="85.80078125" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1007" dy="20.8" x="85.80078125" svgjs:data="{&quot;newLined&quot;:true}">121804/Compositor</tspan></text><line id="SvgjsLine1008" x1="480" y1="20" x2="480" y2="2071" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1009" font-family="Helvetica, Arial, sans-serif" x="412.6328125" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1010" dy="20.8" x="412.6328125" svgjs:data="{&quot;newLined&quot;:true}">121804/IO Sender</tspan></text><line id="SvgjsLine1011" x1="800" y1="20" x2="800" y2="2071" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1012" font-family="Helvetica, Arial, sans-serif" x="706.296875" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1013" dy="20.8" x="706.296875" svgjs:data="{&quot;newLined&quot;:true}">Web Content/IO Receiver</tspan></text><line id="SvgjsLine1014" x1="1120" y1="20" x2="1120" y2="2071" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1015" font-family="Helvetica, Arial, sans-serif" x="1026.59375" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1016" dy="20.8" x="1026.59375" svgjs:data="{&quot;newLined&quot;:true}">Web Content/GeckoMain</tspan></text><line id="SvgjsLine1017" x1="640" y1="0" x2="640" y2="2071" stroke-dasharray="2,2" stroke="#ffb080" stroke-width="2"></line><text id="SvgjsText1018" font-family="Helvetica, Arial, sans-serif" x="40" y="31.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1019" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 0 ms</tspan></text><line id="SvgjsLine1020" x1="160" y1="40" x2="1120" y2="40" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1021" font-family="Helvetica, Arial, sans-serif" x="40" y="51.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1022" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 11.64 ms</tspan></text><line id="SvgjsLine1023" x1="160" y1="60" x2="1120" y2="60" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1024" font-family="Helvetica, Arial, sans-serif" x="40" y="71.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1025" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 23.28 ms</tspan></text><line id="SvgjsLine1026" x1="160" y1="80" x2="1120" y2="80" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1027" font-family="Helvetica, Arial, sans-serif" x="40" y="91.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1028" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 34.92 ms</tspan></text><line id="SvgjsLine1029" x1="160" y1="100" x2="1120" y2="100" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1030" font-family="Helvetica, Arial, sans-serif" x="40" y="112.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1031" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 46.56 ms</tspan></text><line id="SvgjsLine1032" x1="160" y1="121" x2="1120" y2="121" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1033" font-family="Helvetica, Arial, sans-serif" x="40" y="132.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1034" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 58.2 ms</tspan></text><line id="SvgjsLine1035" x1="160" y1="141" x2="1120" y2="141" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1036" font-family="Helvetica, Arial, sans-serif" x="40" y="152.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1037" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 69.84 ms</tspan></text><line id="SvgjsLine1038" x1="160" y1="161" x2="1120" y2="161" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1039" font-family="Helvetica, Arial, sans-serif" x="40" y="173.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1040" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 81.48 ms</tspan></text><line id="SvgjsLine1041" x1="160" y1="182" x2="1120" y2="182" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1042" font-family="Helvetica, Arial, sans-serif" x="40" y="193.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1043" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 93.12 ms</tspan></text><line id="SvgjsLine1044" x1="160" y1="202" x2="1120" y2="202" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1045" font-family="Helvetica, Arial, sans-serif" x="40" y="213.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1046" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 104.76 ms</tspan></text><line id="SvgjsLine1047" x1="160" y1="222" x2="1120" y2="222" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1048" font-family="Helvetica, Arial, sans-serif" x="40" y="234.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1049" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 116.41 ms</tspan></text><line id="SvgjsLine1050" x1="160" y1="243" x2="1120" y2="243" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1051" font-family="Helvetica, Arial, sans-serif" x="40" y="254.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1052" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 128.05 ms</tspan></text><line id="SvgjsLine1053" x1="160" y1="263" x2="1120" y2="263" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1054" font-family="Helvetica, Arial, sans-serif" x="40" y="274.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1055" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 139.69 ms</tspan></text><line id="SvgjsLine1056" x1="160" y1="283" x2="1120" y2="283" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1057" font-family="Helvetica, Arial, sans-serif" x="40" y="295.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1058" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 151.33 ms</tspan></text><line id="SvgjsLine1059" x1="160" y1="304" x2="1120" y2="304" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1060" font-family="Helvetica, Arial, sans-serif" x="40" y="315.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1061" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 162.97 ms</tspan></text><line id="SvgjsLine1062" x1="160" y1="324" x2="1120" y2="324" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1063" font-family="Helvetica, Arial, sans-serif" x="40" y="335.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1064" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 174.61 ms</tspan></text><line id="SvgjsLine1065" x1="160" y1="344" x2="1120" y2="344" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1066" font-family="Helvetica, Arial, sans-serif" x="40" y="355.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1067" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 186.25 ms</tspan></text><line id="SvgjsLine1068" x1="160" y1="364" x2="1120" y2="364" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1069" font-family="Helvetica, Arial, sans-serif" x="40" y="376.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1070" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 197.89 ms</tspan></text><line id="SvgjsLine1071" x1="160" y1="385" x2="1120" y2="385" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1072" font-family="Helvetica, Arial, sans-serif" x="40" y="396.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1073" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 209.53 ms</tspan></text><line id="SvgjsLine1074" x1="160" y1="405" x2="1120" y2="405" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1075" font-family="Helvetica, Arial, sans-serif" x="40" y="416.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1076" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 221.18 ms</tspan></text><line id="SvgjsLine1077" x1="160" y1="425" x2="1120" y2="425" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1078" font-family="Helvetica, Arial, sans-serif" x="40" y="437.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1079" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 232.82 ms</tspan></text><line id="SvgjsLine1080" x1="160" y1="446" x2="1120" y2="446" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1081" font-family="Helvetica, Arial, sans-serif" x="40" y="457.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1082" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 244.46 ms</tspan></text><line id="SvgjsLine1083" x1="160" y1="466" x2="1120" y2="466" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1084" font-family="Helvetica, Arial, sans-serif" x="40" y="477.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1085" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 256.1 ms</tspan></text><line id="SvgjsLine1086" x1="160" y1="486" x2="1120" y2="486" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1087" font-family="Helvetica, Arial, sans-serif" x="40" y="498.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1088" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 267.74 ms</tspan></text><line id="SvgjsLine1089" x1="160" y1="507" x2="1120" y2="507" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1090" font-family="Helvetica, Arial, sans-serif" x="40" y="518.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1091" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 279.38 ms</tspan></text><line id="SvgjsLine1092" x1="160" y1="527" x2="1120" y2="527" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1093" font-family="Helvetica, Arial, sans-serif" x="40" y="538.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1094" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 291.02 ms</tspan></text><line id="SvgjsLine1095" x1="160" y1="547" x2="1120" y2="547" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1096" font-family="Helvetica, Arial, sans-serif" x="40" y="559.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1097" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 302.66 ms</tspan></text><line id="SvgjsLine1098" x1="160" y1="568" x2="1120" y2="568" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1099" font-family="Helvetica, Arial, sans-serif" x="40" y="579.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1100" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 314.3 ms</tspan></text><line id="SvgjsLine1101" x1="160" y1="588" x2="1120" y2="588" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1102" font-family="Helvetica, Arial, sans-serif" x="40" y="599.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1103" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 325.95 ms</tspan></text><line id="SvgjsLine1104" x1="160" y1="608" x2="1120" y2="608" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1105" font-family="Helvetica, Arial, sans-serif" x="40" y="619.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1106" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 337.59 ms</tspan></text><line id="SvgjsLine1107" x1="160" y1="628" x2="1120" y2="628" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1108" font-family="Helvetica, Arial, sans-serif" x="40" y="640.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1109" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 349.23 ms</tspan></text><line id="SvgjsLine1110" x1="160" y1="649" x2="1120" y2="649" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1111" font-family="Helvetica, Arial, sans-serif" x="40" y="660.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1112" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 360.87 ms</tspan></text><line id="SvgjsLine1113" x1="160" y1="669" x2="1120" y2="669" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1114" font-family="Helvetica, Arial, sans-serif" x="40" y="680.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1115" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 372.51 ms</tspan></text><line id="SvgjsLine1116" x1="160" y1="689" x2="1120" y2="689" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1117" font-family="Helvetica, Arial, sans-serif" x="40" y="701.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1118" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 384.15 ms</tspan></text><line id="SvgjsLine1119" x1="160" y1="710" x2="1120" y2="710" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1120" font-family="Helvetica, Arial, sans-serif" x="40" y="721.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1121" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 395.79 ms</tspan></text><line id="SvgjsLine1122" x1="160" y1="730" x2="1120" y2="730" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1123" font-family="Helvetica, Arial, sans-serif" x="40" y="741.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1124" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 407.43 ms</tspan></text><line id="SvgjsLine1125" x1="160" y1="750" x2="1120" y2="750" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1126" font-family="Helvetica, Arial, sans-serif" x="40" y="762.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1127" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 419.07 ms</tspan></text><line id="SvgjsLine1128" x1="160" y1="771" x2="1120" y2="771" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1129" font-family="Helvetica, Arial, sans-serif" x="40" y="782.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1130" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 430.72 ms</tspan></text><line id="SvgjsLine1131" x1="160" y1="791" x2="1120" y2="791" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1132" font-family="Helvetica, Arial, sans-serif" x="40" y="802.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1133" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 442.36 ms</tspan></text><line id="SvgjsLine1134" x1="160" y1="811" x2="1120" y2="811" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1135" font-family="Helvetica, Arial, sans-serif" x="40" y="823.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1136" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 454 ms</tspan></text><line id="SvgjsLine1137" x1="160" y1="832" x2="1120" y2="832" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1138" font-family="Helvetica, Arial, sans-serif" x="40" y="843.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1139" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 465.64 ms</tspan></text><line id="SvgjsLine1140" x1="160" y1="852" x2="1120" y2="852" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1141" font-family="Helvetica, Arial, sans-serif" x="40" y="863.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1142" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 477.28 ms</tspan></text><line id="SvgjsLine1143" x1="160" y1="872" x2="1120" y2="872" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1144" font-family="Helvetica, Arial, sans-serif" x="40" y="884.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1145" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 488.92 ms</tspan></text><line id="SvgjsLine1146" x1="160" y1="893" x2="1120" y2="893" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1147" font-family="Helvetica, Arial, sans-serif" x="40" y="904.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1148" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 500.56 ms</tspan></text><line id="SvgjsLine1149" x1="160" y1="913" x2="1120" y2="913" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1150" font-family="Helvetica, Arial, sans-serif" x="40" y="924.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1151" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 512.2 ms</tspan></text><line id="SvgjsLine1152" x1="160" y1="933" x2="1120" y2="933" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1153" font-family="Helvetica, Arial, sans-serif" x="40" y="944.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1154" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 523.84 ms</tspan></text><line id="SvgjsLine1155" x1="160" y1="953" x2="1120" y2="953" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1156" font-family="Helvetica, Arial, sans-serif" x="40" y="965.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1157" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 535.49 ms</tspan></text><line id="SvgjsLine1158" x1="160" y1="974" x2="1120" y2="974" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1159" font-family="Helvetica, Arial, sans-serif" x="40" y="985.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1160" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 547.13 ms</tspan></text><line id="SvgjsLine1161" x1="160" y1="994" x2="1120" y2="994" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1162" font-family="Helvetica, Arial, sans-serif" x="40" y="1005.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1163" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 558.77 ms</tspan></text><line id="SvgjsLine1164" x1="160" y1="1014" x2="1120" y2="1014" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1165" font-family="Helvetica, Arial, sans-serif" x="40" y="1026.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1166" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 570.41 ms</tspan></text><line id="SvgjsLine1167" x1="160" y1="1035" x2="1120" y2="1035" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1168" font-family="Helvetica, Arial, sans-serif" x="40" y="1046.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1169" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 582.05 ms</tspan></text><line id="SvgjsLine1170" x1="160" y1="1055" x2="1120" y2="1055" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1171" font-family="Helvetica, Arial, sans-serif" x="40" y="1066.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1172" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 593.69 ms</tspan></text><line id="SvgjsLine1173" x1="160" y1="1075" x2="1120" y2="1075" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1174" font-family="Helvetica, Arial, sans-serif" x="40" y="1087.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1175" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 605.33 ms</tspan></text><line id="SvgjsLine1176" x1="160" y1="1096" x2="1120" y2="1096" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1177" font-family="Helvetica, Arial, sans-serif" x="40" y="1107.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1178" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 616.97 ms</tspan></text><line id="SvgjsLine1179" x1="160" y1="1116" x2="1120" y2="1116" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1180" font-family="Helvetica, Arial, sans-serif" x="40" y="1127.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1181" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 628.61 ms</tspan></text><line id="SvgjsLine1182" x1="160" y1="1136" x2="1120" y2="1136" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1183" font-family="Helvetica, Arial, sans-serif" x="40" y="1148.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1184" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 640.25 ms</tspan></text><line id="SvgjsLine1185" x1="160" y1="1157" x2="1120" y2="1157" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1186" font-family="Helvetica, Arial, sans-serif" x="40" y="1168.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1187" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 651.9 ms</tspan></text><line id="SvgjsLine1188" x1="160" y1="1177" x2="1120" y2="1177" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1189" font-family="Helvetica, Arial, sans-serif" x="40" y="1188.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1190" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 663.54 ms</tspan></text><line id="SvgjsLine1191" x1="160" y1="1197" x2="1120" y2="1197" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1192" font-family="Helvetica, Arial, sans-serif" x="40" y="1208.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1193" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 675.18 ms</tspan></text><line id="SvgjsLine1194" x1="160" y1="1217" x2="1120" y2="1217" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1195" font-family="Helvetica, Arial, sans-serif" x="40" y="1229.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1196" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 686.82 ms</tspan></text><line id="SvgjsLine1197" x1="160" y1="1238" x2="1120" y2="1238" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1198" font-family="Helvetica, Arial, sans-serif" x="40" y="1249.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1199" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 698.46 ms</tspan></text><line id="SvgjsLine1200" x1="160" y1="1258" x2="1120" y2="1258" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1201" font-family="Helvetica, Arial, sans-serif" x="40" y="1269.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1202" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 710.1 ms</tspan></text><line id="SvgjsLine1203" x1="160" y1="1278" x2="1120" y2="1278" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1204" font-family="Helvetica, Arial, sans-serif" x="40" y="1290.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1205" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 721.74 ms</tspan></text><line id="SvgjsLine1206" x1="160" y1="1299" x2="1120" y2="1299" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1207" font-family="Helvetica, Arial, sans-serif" x="40" y="1310.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1208" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 733.38 ms</tspan></text><line id="SvgjsLine1209" x1="160" y1="1319" x2="1120" y2="1319" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1210" font-family="Helvetica, Arial, sans-serif" x="40" y="1330.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1211" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 745.02 ms</tspan></text><line id="SvgjsLine1212" x1="160" y1="1339" x2="1120" y2="1339" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1213" font-family="Helvetica, Arial, sans-serif" x="40" y="1351.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1214" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 756.67 ms</tspan></text><line id="SvgjsLine1215" x1="160" y1="1360" x2="1120" y2="1360" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1216" font-family="Helvetica, Arial, sans-serif" x="40" y="1371.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1217" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 768.31 ms</tspan></text><line id="SvgjsLine1218" x1="160" y1="1380" x2="1120" y2="1380" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1219" font-family="Helvetica, Arial, sans-serif" x="40" y="1391.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1220" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 779.95 ms</tspan></text><line id="SvgjsLine1221" x1="160" y1="1400" x2="1120" y2="1400" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1222" font-family="Helvetica, Arial, sans-serif" x="40" y="1412.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1223" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 791.59 ms</tspan></text><line id="SvgjsLine1224" x1="160" y1="1421" x2="1120" y2="1421" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1225" font-family="Helvetica, Arial, sans-serif" x="40" y="1432.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1226" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 803.23 ms</tspan></text><line id="SvgjsLine1227" x1="160" y1="1441" x2="1120" y2="1441" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1228" font-family="Helvetica, Arial, sans-serif" x="40" y="1452.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1229" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 814.87 ms</tspan></text><line id="SvgjsLine1230" x1="160" y1="1461" x2="1120" y2="1461" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1231" font-family="Helvetica, Arial, sans-serif" x="40" y="1473.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1232" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 826.51 ms</tspan></text><line id="SvgjsLine1233" x1="160" y1="1482" x2="1120" y2="1482" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1234" font-family="Helvetica, Arial, sans-serif" x="40" y="1493.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1235" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 838.15 ms</tspan></text><line id="SvgjsLine1236" x1="160" y1="1502" x2="1120" y2="1502" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1237" font-family="Helvetica, Arial, sans-serif" x="40" y="1513.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1238" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 849.79 ms</tspan></text><line id="SvgjsLine1239" x1="160" y1="1522" x2="1120" y2="1522" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1240" font-family="Helvetica, Arial, sans-serif" x="40" y="1533.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1241" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 861.44 ms</tspan></text><line id="SvgjsLine1242" x1="160" y1="1542" x2="1120" y2="1542" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1243" font-family="Helvetica, Arial, sans-serif" x="40" y="1554.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1244" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 873.08 ms</tspan></text><line id="SvgjsLine1245" x1="160" y1="1563" x2="1120" y2="1563" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1246" font-family="Helvetica, Arial, sans-serif" x="40" y="1574.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1247" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 884.72 ms</tspan></text><line id="SvgjsLine1248" x1="160" y1="1583" x2="1120" y2="1583" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1249" font-family="Helvetica, Arial, sans-serif" x="40" y="1594.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1250" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 896.36 ms</tspan></text><line id="SvgjsLine1251" x1="160" y1="1603" x2="1120" y2="1603" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1252" font-family="Helvetica, Arial, sans-serif" x="40" y="1615.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1253" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 908 ms</tspan></text><line id="SvgjsLine1254" x1="160" y1="1624" x2="1120" y2="1624" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1255" font-family="Helvetica, Arial, sans-serif" x="40" y="1635.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1256" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 919.64 ms</tspan></text><line id="SvgjsLine1257" x1="160" y1="1644" x2="1120" y2="1644" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1258" font-family="Helvetica, Arial, sans-serif" x="40" y="1655.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1259" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 931.28 ms</tspan></text><line id="SvgjsLine1260" x1="160" y1="1664" x2="1120" y2="1664" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1261" font-family="Helvetica, Arial, sans-serif" x="40" y="1676.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1262" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 942.92 ms</tspan></text><line id="SvgjsLine1263" x1="160" y1="1685" x2="1120" y2="1685" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1264" font-family="Helvetica, Arial, sans-serif" x="40" y="1696.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1265" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 954.56 ms</tspan></text><line id="SvgjsLine1266" x1="160" y1="1705" x2="1120" y2="1705" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1267" font-family="Helvetica, Arial, sans-serif" x="40" y="1716.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1268" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 966.21 ms</tspan></text><line id="SvgjsLine1269" x1="160" y1="1725" x2="1120" y2="1725" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1270" font-family="Helvetica, Arial, sans-serif" x="40" y="1737.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1271" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 977.85 ms</tspan></text><line id="SvgjsLine1272" x1="160" y1="1746" x2="1120" y2="1746" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1273" font-family="Helvetica, Arial, sans-serif" x="40" y="1757.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1274" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 989.49 ms</tspan></text><line id="SvgjsLine1275" x1="160" y1="1766" x2="1120" y2="1766" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1276" font-family="Helvetica, Arial, sans-serif" x="40" y="1777.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1277" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1001.13 ms</tspan></text><line id="SvgjsLine1278" x1="160" y1="1786" x2="1120" y2="1786" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1279" font-family="Helvetica, Arial, sans-serif" x="40" y="1797.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1280" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1012.77 ms</tspan></text><line id="SvgjsLine1281" x1="160" y1="1806" x2="1120" y2="1806" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1282" font-family="Helvetica, Arial, sans-serif" x="40" y="1818.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1283" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1024.41 ms</tspan></text><line id="SvgjsLine1284" x1="160" y1="1827" x2="1120" y2="1827" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1285" font-family="Helvetica, Arial, sans-serif" x="40" y="1838.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1286" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1036.05 ms</tspan></text><line id="SvgjsLine1287" x1="160" y1="1847" x2="1120" y2="1847" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1288" font-family="Helvetica, Arial, sans-serif" x="40" y="1858.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1289" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1047.69 ms</tspan></text><line id="SvgjsLine1290" x1="160" y1="1867" x2="1120" y2="1867" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1291" font-family="Helvetica, Arial, sans-serif" x="40" y="1879.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1292" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1059.33 ms</tspan></text><line id="SvgjsLine1293" x1="160" y1="1888" x2="1120" y2="1888" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1294" font-family="Helvetica, Arial, sans-serif" x="40" y="1899.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1295" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1070.98 ms</tspan></text><line id="SvgjsLine1296" x1="160" y1="1908" x2="1120" y2="1908" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1297" font-family="Helvetica, Arial, sans-serif" x="40" y="1919.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1298" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1082.62 ms</tspan></text><line id="SvgjsLine1299" x1="160" y1="1928" x2="1120" y2="1928" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1300" font-family="Helvetica, Arial, sans-serif" x="40" y="1940.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1301" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1094.26 ms</tspan></text><line id="SvgjsLine1302" x1="160" y1="1949" x2="1120" y2="1949" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1303" font-family="Helvetica, Arial, sans-serif" x="40" y="1960.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1304" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1105.9 ms</tspan></text><line id="SvgjsLine1305" x1="160" y1="1969" x2="1120" y2="1969" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1306" font-family="Helvetica, Arial, sans-serif" x="40" y="1980.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1307" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1117.54 ms</tspan></text><line id="SvgjsLine1308" x1="160" y1="1989" x2="1120" y2="1989" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1309" font-family="Helvetica, Arial, sans-serif" x="40" y="2001.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1310" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1129.18 ms</tspan></text><line id="SvgjsLine1311" x1="160" y1="2010" x2="1120" y2="2010" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1312" font-family="Helvetica, Arial, sans-serif" x="40" y="2021.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1313" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1140.82 ms</tspan></text><line id="SvgjsLine1314" x1="160" y1="2030" x2="1120" y2="2030" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1315" font-family="Helvetica, Arial, sans-serif" x="40" y="2041.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1316" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1152.46 ms</tspan></text><line id="SvgjsLine1317" x1="160" y1="2050" x2="1120" y2="2050" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1318" font-family="Helvetica, Arial, sans-serif" x="40" y="2061.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1319" dy="13" x="40" svgjs:data="{&quot;newLined&quot;:true}">~110 s + 1164.1 ms</tspan></text><line id="SvgjsLine1320" x1="160" y1="2070" x2="1120" y2="2070" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><line id="SvgjsLine1321" x1="160" y1="40" x2="480" y2="40" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1323)"></line><defs id="SvgjsDefs1322"><marker id="SvgjsMarker1323" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1324" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1328" d="M160 25 L480 25"></path><marker id="SvgjsMarker1331" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1332" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1336" d="M480 25 L480 25"></path><marker id="SvgjsMarker1339" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1340" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1344" d="M480 25 L800 25"></path><marker id="SvgjsMarker1347" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1348" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1352" d="M800 25 L1120 2056"></path><marker id="SvgjsMarker1355" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1356" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1360" d="M160 44 L480 44"></path><marker id="SvgjsMarker1363" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1364" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1368" d="M480 44 L480 44"></path><marker id="SvgjsMarker1371" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1372" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1376" d="M480 44 L800 45"></path><marker id="SvgjsMarker1379" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1380" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1384" d="M800 45 L1120 2056"></path><marker id="SvgjsMarker1387" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1388" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1392" d="M160 688 L480 688"></path><marker id="SvgjsMarker1395" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1396" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1400" d="M480 688 L480 688"></path><marker id="SvgjsMarker1403" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1404" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1408" d="M480 688 L800 688"></path><marker id="SvgjsMarker1411" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1412" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1416" d="M800 688 L1120 2056"></path><marker id="SvgjsMarker1419" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1420" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1424" d="M160 692 L480 692"></path><marker id="SvgjsMarker1427" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1428" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1432" d="M480 692 L480 692"></path><marker id="SvgjsMarker1435" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1436" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1440" d="M480 692 L800 692"></path><marker id="SvgjsMarker1443" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1444" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1448" d="M800 692 L1120 2056"></path><marker id="SvgjsMarker1451" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1452" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1456" d="M160 700 L480 700"></path><marker id="SvgjsMarker1459" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1460" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1464" d="M480 700 L480 700"></path><marker id="SvgjsMarker1467" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1468" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1472" d="M480 700 L800 700"></path><marker id="SvgjsMarker1475" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1476" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1480" d="M800 700 L1120 2056"></path><marker id="SvgjsMarker1483" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1484" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1488" d="M160 701 L480 701"></path><marker id="SvgjsMarker1491" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1492" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1496" d="M480 701 L480 701"></path><marker id="SvgjsMarker1499" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1500" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1504" d="M480 701 L800 702"></path><marker id="SvgjsMarker1507" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1508" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1512" d="M800 702 L1120 2056"></path><marker id="SvgjsMarker1515" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1516" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1520" d="M160 761 L480 761"></path><marker id="SvgjsMarker1523" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1524" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1528" d="M480 761 L480 761"></path><marker id="SvgjsMarker1531" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1532" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1536" d="M480 761 L800 761"></path><marker id="SvgjsMarker1539" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1540" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1544" d="M800 761 L1120 2056"></path><marker id="SvgjsMarker1547" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1548" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1552" d="M160 800 L480 800"></path><marker id="SvgjsMarker1555" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1556" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1560" d="M480 800 L480 800"></path><marker id="SvgjsMarker1563" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1564" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1568" d="M480 800 L800 800"></path><marker id="SvgjsMarker1571" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1572" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1576" d="M800 800 L1120 2056"></path><marker id="SvgjsMarker1579" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1580" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1584" d="M160 836 L480 836"></path><marker id="SvgjsMarker1587" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1588" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1592" d="M480 836 L480 836"></path><marker id="SvgjsMarker1595" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1596" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1600" d="M480 836 L800 836"></path><marker id="SvgjsMarker1603" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1604" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1608" d="M800 836 L1120 2056"></path><marker id="SvgjsMarker1611" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1612" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1616" d="M160 856 L480 856"></path><marker id="SvgjsMarker1619" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1620" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1624" d="M480 856 L480 856"></path><marker id="SvgjsMarker1627" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1628" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1632" d="M480 856 L800 857"></path><marker id="SvgjsMarker1635" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1636" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1640" d="M800 857 L1120 2056"></path><marker id="SvgjsMarker1643" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1644" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1648" d="M160 931 L480 931"></path><marker id="SvgjsMarker1651" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1652" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1656" d="M480 931 L480 931"></path><marker id="SvgjsMarker1659" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1660" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1664" d="M480 931 L800 1107"></path><marker id="SvgjsMarker1667" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1668" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1672" d="M800 1107 L1120 2056"></path><marker id="SvgjsMarker1675" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1676" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1680" d="M160 955 L480 955"></path><marker id="SvgjsMarker1683" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1684" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1688" d="M480 955 L480 955"></path><marker id="SvgjsMarker1691" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1692" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1696" d="M480 955 L800 1107"></path><marker id="SvgjsMarker1699" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1700" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1704" d="M800 1107 L1120 2056"></path><marker id="SvgjsMarker1707" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1708" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1712" d="M160 969 L480 969"></path><marker id="SvgjsMarker1715" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1716" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1720" d="M480 969 L480 969"></path><marker id="SvgjsMarker1723" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1724" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1728" d="M480 969 L800 1107"></path><marker id="SvgjsMarker1731" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1732" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1736" d="M800 1107 L1120 2056"></path><marker id="SvgjsMarker1739" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1740" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1744" d="M160 1061 L480 1061"></path><marker id="SvgjsMarker1747" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1748" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1752" d="M480 1061 L480 1061"></path><marker id="SvgjsMarker1755" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1756" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1760" d="M480 1061 L800 1107"></path><marker id="SvgjsMarker1763" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1764" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1768" d="M800 1107 L1120 2056"></path><marker id="SvgjsMarker1771" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1772" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1776" d="M160 1084 L480 1084"></path><marker id="SvgjsMarker1779" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1780" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1784" d="M480 1084 L480 1084"></path><marker id="SvgjsMarker1787" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1788" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1792" d="M480 1084 L800 1107"></path><marker id="SvgjsMarker1795" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1796" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1800" d="M800 1107 L1120 2056"></path><marker id="SvgjsMarker1803" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1804" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1808" d="M160 1155 L480 1155"></path><marker id="SvgjsMarker1811" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1812" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1816" d="M480 1155 L480 1155"></path><marker id="SvgjsMarker1819" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1820" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1824" d="M480 1155 L800 1155"></path><marker id="SvgjsMarker1827" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1828" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1832" d="M800 1155 L1120 2056"></path><marker id="SvgjsMarker1835" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1836" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1840" d="M160 1184 L480 1184"></path><marker id="SvgjsMarker1843" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1844" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1848" d="M480 1184 L480 1184"></path><marker id="SvgjsMarker1851" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1852" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1856" d="M480 1184 L800 1185"></path><marker id="SvgjsMarker1859" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1860" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1864" d="M800 1185 L1120 2056"></path><marker id="SvgjsMarker1867" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1868" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1872" d="M160 1213 L480 1213"></path><marker id="SvgjsMarker1875" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1876" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1880" d="M480 1213 L480 1213"></path><marker id="SvgjsMarker1883" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1884" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1888" d="M480 1213 L800 1213"></path><marker id="SvgjsMarker1891" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1892" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1896" d="M800 1213 L1120 2056"></path><marker id="SvgjsMarker1899" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1900" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1904" d="M160 1286 L480 1286"></path><marker id="SvgjsMarker1907" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1908" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1912" d="M480 1286 L480 1286"></path><marker id="SvgjsMarker1915" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1916" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1920" d="M480 1286 L800 1286"></path><marker id="SvgjsMarker1923" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1924" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1928" d="M800 1286 L1120 2056"></path><marker id="SvgjsMarker1931" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1932" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1936" d="M160 1303 L480 1303"></path><marker id="SvgjsMarker1939" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1940" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1944" d="M480 1303 L480 1303"></path><marker id="SvgjsMarker1947" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1948" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1952" d="M480 1303 L800 1303"></path><marker id="SvgjsMarker1955" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1956" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1960" d="M800 1303 L1120 2056"></path><marker id="SvgjsMarker1963" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1964" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1968" d="M160 1332 L480 1332"></path><marker id="SvgjsMarker1971" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1972" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1976" d="M480 1332 L480 1332"></path><marker id="SvgjsMarker1979" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1980" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1984" d="M480 1332 L800 1332"></path><marker id="SvgjsMarker1987" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1988" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1992" d="M800 1332 L1120 2056"></path><marker id="SvgjsMarker1995" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1996" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2000" d="M160 1421 L480 1421"></path><marker id="SvgjsMarker2003" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2004" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2008" d="M480 1421 L480 1421"></path><marker id="SvgjsMarker2011" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2012" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2016" d="M480 1421 L800 1422"></path><marker id="SvgjsMarker2019" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2020" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2024" d="M800 1422 L1120 2056"></path><marker id="SvgjsMarker2027" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2028" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2032" d="M160 1439 L480 1439"></path><marker id="SvgjsMarker2035" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2036" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2040" d="M480 1439 L480 1439"></path><marker id="SvgjsMarker2043" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2044" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2048" d="M480 1439 L800 1439"></path><marker id="SvgjsMarker2051" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2052" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2056" d="M800 1439 L1120 2056"></path><marker id="SvgjsMarker2059" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2060" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2064" d="M160 1463 L480 1463"></path><marker id="SvgjsMarker2067" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2068" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2072" d="M480 1463 L480 1463"></path><marker id="SvgjsMarker2075" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2076" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2080" d="M480 1463 L800 1463"></path><marker id="SvgjsMarker2083" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2084" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2088" d="M800 1463 L1120 2056"></path><marker id="SvgjsMarker2091" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2092" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2096" d="M160 1495 L480 1495"></path><marker id="SvgjsMarker2099" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2100" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2104" d="M480 1495 L480 1495"></path><marker id="SvgjsMarker2107" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2108" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2112" d="M480 1495 L800 1495"></path><marker id="SvgjsMarker2115" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2116" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2120" d="M800 1495 L1120 2056"></path><marker id="SvgjsMarker2123" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2124" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2128" d="M160 1569 L480 1569"></path><marker id="SvgjsMarker2131" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2132" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2136" d="M480 1569 L480 1569"></path><marker id="SvgjsMarker2139" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2140" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2144" d="M480 1569 L800 1629"></path><marker id="SvgjsMarker2147" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2148" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2152" d="M800 1629 L1120 2056"></path><marker id="SvgjsMarker2155" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2156" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2160" d="M160 1579 L480 1579"></path><marker id="SvgjsMarker2163" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2164" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2168" d="M480 1579 L480 1579"></path><marker id="SvgjsMarker2171" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2172" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2176" d="M480 1579 L800 1629"></path><marker id="SvgjsMarker2179" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2180" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2184" d="M800 1629 L1120 2056"></path><marker id="SvgjsMarker2187" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2188" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2192" d="M160 1606 L480 1606"></path><marker id="SvgjsMarker2195" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2196" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2200" d="M480 1606 L480 1606"></path><marker id="SvgjsMarker2203" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2204" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2208" d="M480 1606 L800 1629"></path><marker id="SvgjsMarker2211" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2212" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2216" d="M800 1629 L1120 2056"></path><marker id="SvgjsMarker2219" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2220" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2224" d="M160 1945 L480 1945"></path><marker id="SvgjsMarker2227" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2228" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2232" d="M480 1945 L480 1945"></path><marker id="SvgjsMarker2235" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2236" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2240" d="M480 1945 L800 2054"></path><marker id="SvgjsMarker2243" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2244" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2248" d="M800 2054 L1120 2056"></path><marker id="SvgjsMarker2251" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2252" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2256" d="M160 1980 L480 1980"></path><marker id="SvgjsMarker2259" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2260" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2264" d="M480 1980 L480 1980"></path><marker id="SvgjsMarker2267" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2268" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2272" d="M480 1980 L800 2054"></path><marker id="SvgjsMarker2275" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2276" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2280" d="M800 2054 L1120 2056"></path></defs><a id="SvgjsA1329" href="plot-ipc-121804-119900-1586822939593-30.html#1"><text id="SvgjsText1325" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1327" href="#SvgjsPath1328"><tspan id="SvgjsTspan1326" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1330" x1="480" y1="40" x2="480" y2="40" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1331)"></line><a id="SvgjsA1337" href="plot-ipc-121804-119900-1586822939593-30.html#1"><text id="SvgjsText1333" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1335" href="#SvgjsPath1336"><tspan id="SvgjsTspan1334" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1338" x1="480" y1="40" x2="800" y2="40" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1339)"></line><a id="SvgjsA1345" href="plot-ipc-121804-119900-1586822939593-30.html#1"><text id="SvgjsText1341" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1343" href="#SvgjsPath1344"><tspan id="SvgjsTspan1342" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1346" x1="800" y1="40" x2="1120" y2="2071" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1347)"></line><a id="SvgjsA1353" href="plot-ipc-121804-119900-1586822939593-30.html#1"><text id="SvgjsText1349" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1351" href="#SvgjsPath1352"><tspan id="SvgjsTspan1350" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1354" x1="160" y1="59" x2="480" y2="59" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1355)"></line><a id="SvgjsA1361" href="plot-ipc-121804-119900-1586822939593-30.html#2"><text id="SvgjsText1357" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1359" href="#SvgjsPath1360"><tspan id="SvgjsTspan1358" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1362" x1="480" y1="59" x2="480" y2="59" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1363)"></line><a id="SvgjsA1369" href="plot-ipc-121804-119900-1586822939593-30.html#2"><text id="SvgjsText1365" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1367" href="#SvgjsPath1368"><tspan id="SvgjsTspan1366" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1370" x1="480" y1="59" x2="800" y2="60" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1371)"></line><a id="SvgjsA1377" href="plot-ipc-121804-119900-1586822939593-30.html#2"><text id="SvgjsText1373" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1375" href="#SvgjsPath1376"><tspan id="SvgjsTspan1374" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1378" x1="800" y1="60" x2="1120" y2="2071" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1379)"></line><a id="SvgjsA1385" href="plot-ipc-121804-119900-1586822939593-30.html#2"><text id="SvgjsText1381" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1383" href="#SvgjsPath1384"><tspan id="SvgjsTspan1382" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1386" x1="160" y1="703" x2="480" y2="703" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1387)"></line><a id="SvgjsA1393" href="plot-ipc-121804-119900-1586822939593-30.html#3"><text id="SvgjsText1389" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1391" href="#SvgjsPath1392"><tspan id="SvgjsTspan1390" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1394" x1="480" y1="703" x2="480" y2="703" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1395)"></line><a id="SvgjsA1401" href="plot-ipc-121804-119900-1586822939593-30.html#3"><text id="SvgjsText1397" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1399" href="#SvgjsPath1400"><tspan id="SvgjsTspan1398" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1402" x1="480" y1="703" x2="800" y2="703" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1403)"></line><a id="SvgjsA1409" href="plot-ipc-121804-119900-1586822939593-30.html#3"><text id="SvgjsText1405" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1407" href="#SvgjsPath1408"><tspan id="SvgjsTspan1406" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1410" x1="800" y1="703" x2="1120" y2="2071" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1411)"></line><a id="SvgjsA1417" href="plot-ipc-121804-119900-1586822939593-30.html#3"><text id="SvgjsText1413" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1415" href="#SvgjsPath1416"><tspan id="SvgjsTspan1414" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1418" x1="160" y1="707" x2="480" y2="707" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1419)"></line><a id="SvgjsA1425" href="plot-ipc-121804-119900-1586822939593-30.html#4"><text id="SvgjsText1421" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1423" href="#SvgjsPath1424"><tspan id="SvgjsTspan1422" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1426" x1="480" y1="707" x2="480" y2="707" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1427)"></line><a id="SvgjsA1433" href="plot-ipc-121804-119900-1586822939593-30.html#4"><text id="SvgjsText1429" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1431" href="#SvgjsPath1432"><tspan id="SvgjsTspan1430" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1434" x1="480" y1="707" x2="800" y2="707" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1435)"></line><a id="SvgjsA1441" href="plot-ipc-121804-119900-1586822939593-30.html#4"><text id="SvgjsText1437" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1439" href="#SvgjsPath1440"><tspan id="SvgjsTspan1438" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1442" x1="800" y1="707" x2="1120" y2="2071" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1443)"></line><a id="SvgjsA1449" href="plot-ipc-121804-119900-1586822939593-30.html#4"><text id="SvgjsText1445" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1447" href="#SvgjsPath1448"><tspan id="SvgjsTspan1446" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1450" x1="160" y1="715" x2="480" y2="715" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1451)"></line><a id="SvgjsA1457" href="plot-ipc-121804-119900-1586822939593-30.html#5"><text id="SvgjsText1453" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1455" href="#SvgjsPath1456"><tspan id="SvgjsTspan1454" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1458" x1="480" y1="715" x2="480" y2="715" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1459)"></line><a id="SvgjsA1465" href="plot-ipc-121804-119900-1586822939593-30.html#5"><text id="SvgjsText1461" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1463" href="#SvgjsPath1464"><tspan id="SvgjsTspan1462" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1466" x1="480" y1="715" x2="800" y2="715" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1467)"></line><a id="SvgjsA1473" href="plot-ipc-121804-119900-1586822939593-30.html#5"><text id="SvgjsText1469" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1471" href="#SvgjsPath1472"><tspan id="SvgjsTspan1470" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1474" x1="800" y1="715" x2="1120" y2="2071" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1475)"></line><a id="SvgjsA1481" href="plot-ipc-121804-119900-1586822939593-30.html#5"><text id="SvgjsText1477" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1479" href="#SvgjsPath1480"><tspan id="SvgjsTspan1478" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1482" x1="160" y1="716" x2="480" y2="716" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1483)"></line><a id="SvgjsA1489" href="plot-ipc-121804-119900-1586822939593-30.html#6"><text id="SvgjsText1485" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1487" href="#SvgjsPath1488"><tspan id="SvgjsTspan1486" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1490" x1="480" y1="716" x2="480" y2="716" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1491)"></line><a id="SvgjsA1497" href="plot-ipc-121804-119900-1586822939593-30.html#6"><text id="SvgjsText1493" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1495" href="#SvgjsPath1496"><tspan id="SvgjsTspan1494" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1498" x1="480" y1="716" x2="800" y2="717" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1499)"></line><a id="SvgjsA1505" href="plot-ipc-121804-119900-1586822939593-30.html#6"><text id="SvgjsText1501" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1503" href="#SvgjsPath1504"><tspan id="SvgjsTspan1502" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1506" x1="800" y1="717" x2="1120" y2="2071" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1507)"></line><a id="SvgjsA1513" href="plot-ipc-121804-119900-1586822939593-30.html#6"><text id="SvgjsText1509" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1511" href="#SvgjsPath1512"><tspan id="SvgjsTspan1510" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1514" x1="160" y1="776" x2="480" y2="776" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1515)"></line><a id="SvgjsA1521" href="plot-ipc-121804-119900-1586822939593-30.html#7"><text id="SvgjsText1517" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1519" href="#SvgjsPath1520"><tspan id="SvgjsTspan1518" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1522" x1="480" y1="776" x2="480" y2="776" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1523)"></line><a id="SvgjsA1529" href="plot-ipc-121804-119900-1586822939593-30.html#7"><text id="SvgjsText1525" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1527" href="#SvgjsPath1528"><tspan id="SvgjsTspan1526" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1530" x1="480" y1="776" x2="800" y2="776" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1531)"></line><a id="SvgjsA1537" href="plot-ipc-121804-119900-1586822939593-30.html#7"><text id="SvgjsText1533" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1535" href="#SvgjsPath1536"><tspan id="SvgjsTspan1534" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1538" x1="800" y1="776" x2="1120" y2="2071" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1539)"></line><a id="SvgjsA1545" href="plot-ipc-121804-119900-1586822939593-30.html#7"><text id="SvgjsText1541" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1543" href="#SvgjsPath1544"><tspan id="SvgjsTspan1542" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1546" x1="160" y1="815" x2="480" y2="815" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1547)"></line><a id="SvgjsA1553" href="plot-ipc-121804-119900-1586822939593-30.html#8"><text id="SvgjsText1549" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1551" href="#SvgjsPath1552"><tspan id="SvgjsTspan1550" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1554" x1="480" y1="815" x2="480" y2="815" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1555)"></line><a id="SvgjsA1561" href="plot-ipc-121804-119900-1586822939593-30.html#8"><text id="SvgjsText1557" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1559" href="#SvgjsPath1560"><tspan id="SvgjsTspan1558" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1562" x1="480" y1="815" x2="800" y2="815" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1563)"></line><a id="SvgjsA1569" href="plot-ipc-121804-119900-1586822939593-30.html#8"><text id="SvgjsText1565" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1567" href="#SvgjsPath1568"><tspan id="SvgjsTspan1566" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1570" x1="800" y1="815" x2="1120" y2="2071" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1571)"></line><a id="SvgjsA1577" href="plot-ipc-121804-119900-1586822939593-30.html#8"><text id="SvgjsText1573" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1575" href="#SvgjsPath1576"><tspan id="SvgjsTspan1574" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1578" x1="160" y1="851" x2="480" y2="851" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1579)"></line><a id="SvgjsA1585" href="plot-ipc-121804-119900-1586822939593-30.html#9"><text id="SvgjsText1581" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1583" href="#SvgjsPath1584"><tspan id="SvgjsTspan1582" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1586" x1="480" y1="851" x2="480" y2="851" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1587)"></line><a id="SvgjsA1593" href="plot-ipc-121804-119900-1586822939593-30.html#9"><text id="SvgjsText1589" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1591" href="#SvgjsPath1592"><tspan id="SvgjsTspan1590" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1594" x1="480" y1="851" x2="800" y2="851" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1595)"></line><a id="SvgjsA1601" href="plot-ipc-121804-119900-1586822939593-30.html#9"><text id="SvgjsText1597" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1599" href="#SvgjsPath1600"><tspan id="SvgjsTspan1598" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1602" x1="800" y1="851" x2="1120" y2="2071" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1603)"></line><a id="SvgjsA1609" href="plot-ipc-121804-119900-1586822939593-30.html#9"><text id="SvgjsText1605" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1607" href="#SvgjsPath1608"><tspan id="SvgjsTspan1606" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1610" x1="160" y1="871" x2="480" y2="871" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1611)"></line><a id="SvgjsA1617" href="plot-ipc-121804-119900-1586822939593-30.html#10"><text id="SvgjsText1613" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1615" href="#SvgjsPath1616"><tspan id="SvgjsTspan1614" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1618" x1="480" y1="871" x2="480" y2="871" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1619)"></line><a id="SvgjsA1625" href="plot-ipc-121804-119900-1586822939593-30.html#10"><text id="SvgjsText1621" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1623" href="#SvgjsPath1624"><tspan id="SvgjsTspan1622" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1626" x1="480" y1="871" x2="800" y2="872" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1627)"></line><a id="SvgjsA1633" href="plot-ipc-121804-119900-1586822939593-30.html#10"><text id="SvgjsText1629" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1631" href="#SvgjsPath1632"><tspan id="SvgjsTspan1630" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1634" x1="800" y1="872" x2="1120" y2="2071" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1635)"></line><a id="SvgjsA1641" href="plot-ipc-121804-119900-1586822939593-30.html#10"><text id="SvgjsText1637" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1639" href="#SvgjsPath1640"><tspan id="SvgjsTspan1638" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1642" x1="160" y1="946" x2="480" y2="946" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1643)"></line><a id="SvgjsA1649" href="plot-ipc-121804-119900-1586822939593-30.html#11"><text id="SvgjsText1645" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1647" href="#SvgjsPath1648"><tspan id="SvgjsTspan1646" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1650" x1="480" y1="946" x2="480" y2="946" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1651)"></line><a id="SvgjsA1657" href="plot-ipc-121804-119900-1586822939593-30.html#11"><text id="SvgjsText1653" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1655" href="#SvgjsPath1656"><tspan id="SvgjsTspan1654" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1658" x1="480" y1="946" x2="800" y2="1122" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1659)"></line><a id="SvgjsA1665" href="plot-ipc-121804-119900-1586822939593-30.html#11"><text id="SvgjsText1661" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1663" href="#SvgjsPath1664"><tspan id="SvgjsTspan1662" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1666" x1="800" y1="1122" x2="1120" y2="2071" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1667)"></line><a id="SvgjsA1673" href="plot-ipc-121804-119900-1586822939593-30.html#11"><text id="SvgjsText1669" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1671" href="#SvgjsPath1672"><tspan id="SvgjsTspan1670" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1674" x1="160" y1="970" x2="480" y2="970" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1675)"></line><a id="SvgjsA1681" href="plot-ipc-121804-119900-1586822939593-30.html#12"><text id="SvgjsText1677" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1679" href="#SvgjsPath1680"><tspan id="SvgjsTspan1678" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1682" x1="480" y1="970" x2="480" y2="970" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1683)"></line><a id="SvgjsA1689" href="plot-ipc-121804-119900-1586822939593-30.html#12"><text id="SvgjsText1685" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1687" href="#SvgjsPath1688"><tspan id="SvgjsTspan1686" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1690" x1="480" y1="970" x2="800" y2="1122" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1691)"></line><a id="SvgjsA1697" href="plot-ipc-121804-119900-1586822939593-30.html#12"><text id="SvgjsText1693" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1695" href="#SvgjsPath1696"><tspan id="SvgjsTspan1694" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1698" x1="800" y1="1122" x2="1120" y2="2071" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1699)"></line><a id="SvgjsA1705" href="plot-ipc-121804-119900-1586822939593-30.html#12"><text id="SvgjsText1701" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1703" href="#SvgjsPath1704"><tspan id="SvgjsTspan1702" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1706" x1="160" y1="984" x2="480" y2="984" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1707)"></line><a id="SvgjsA1713" href="plot-ipc-121804-119900-1586822939593-30.html#13"><text id="SvgjsText1709" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1711" href="#SvgjsPath1712"><tspan id="SvgjsTspan1710" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1714" x1="480" y1="984" x2="480" y2="984" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1715)"></line><a id="SvgjsA1721" href="plot-ipc-121804-119900-1586822939593-30.html#13"><text id="SvgjsText1717" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1719" href="#SvgjsPath1720"><tspan id="SvgjsTspan1718" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1722" x1="480" y1="984" x2="800" y2="1122" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1723)"></line><a id="SvgjsA1729" href="plot-ipc-121804-119900-1586822939593-30.html#13"><text id="SvgjsText1725" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1727" href="#SvgjsPath1728"><tspan id="SvgjsTspan1726" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1730" x1="800" y1="1122" x2="1120" y2="2071" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1731)"></line><a id="SvgjsA1737" href="plot-ipc-121804-119900-1586822939593-30.html#13"><text id="SvgjsText1733" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1735" href="#SvgjsPath1736"><tspan id="SvgjsTspan1734" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1738" x1="160" y1="1076" x2="480" y2="1076" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1739)"></line><a id="SvgjsA1745" href="plot-ipc-121804-119900-1586822939593-30.html#14"><text id="SvgjsText1741" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1743" href="#SvgjsPath1744"><tspan id="SvgjsTspan1742" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1746" x1="480" y1="1076" x2="480" y2="1076" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1747)"></line><a id="SvgjsA1753" href="plot-ipc-121804-119900-1586822939593-30.html#14"><text id="SvgjsText1749" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1751" href="#SvgjsPath1752"><tspan id="SvgjsTspan1750" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1754" x1="480" y1="1076" x2="800" y2="1122" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1755)"></line><a id="SvgjsA1761" href="plot-ipc-121804-119900-1586822939593-30.html#14"><text id="SvgjsText1757" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1759" href="#SvgjsPath1760"><tspan id="SvgjsTspan1758" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1762" x1="800" y1="1122" x2="1120" y2="2071" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1763)"></line><a id="SvgjsA1769" href="plot-ipc-121804-119900-1586822939593-30.html#14"><text id="SvgjsText1765" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1767" href="#SvgjsPath1768"><tspan id="SvgjsTspan1766" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1770" x1="160" y1="1099" x2="480" y2="1099" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1771)"></line><a id="SvgjsA1777" href="plot-ipc-121804-119900-1586822939593-30.html#15"><text id="SvgjsText1773" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1775" href="#SvgjsPath1776"><tspan id="SvgjsTspan1774" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1778" x1="480" y1="1099" x2="480" y2="1099" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1779)"></line><a id="SvgjsA1785" href="plot-ipc-121804-119900-1586822939593-30.html#15"><text id="SvgjsText1781" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1783" href="#SvgjsPath1784"><tspan id="SvgjsTspan1782" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1786" x1="480" y1="1099" x2="800" y2="1122" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1787)"></line><a id="SvgjsA1793" href="plot-ipc-121804-119900-1586822939593-30.html#15"><text id="SvgjsText1789" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1791" href="#SvgjsPath1792"><tspan id="SvgjsTspan1790" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1794" x1="800" y1="1122" x2="1120" y2="2071" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1795)"></line><a id="SvgjsA1801" href="plot-ipc-121804-119900-1586822939593-30.html#15"><text id="SvgjsText1797" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1799" href="#SvgjsPath1800"><tspan id="SvgjsTspan1798" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1802" x1="160" y1="1170" x2="480" y2="1170" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1803)"></line><a id="SvgjsA1809" href="plot-ipc-121804-119900-1586822939593-30.html#16"><text id="SvgjsText1805" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1807" href="#SvgjsPath1808"><tspan id="SvgjsTspan1806" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1810" x1="480" y1="1170" x2="480" y2="1170" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1811)"></line><a id="SvgjsA1817" href="plot-ipc-121804-119900-1586822939593-30.html#16"><text id="SvgjsText1813" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1815" href="#SvgjsPath1816"><tspan id="SvgjsTspan1814" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1818" x1="480" y1="1170" x2="800" y2="1170" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1819)"></line><a id="SvgjsA1825" href="plot-ipc-121804-119900-1586822939593-30.html#16"><text id="SvgjsText1821" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1823" href="#SvgjsPath1824"><tspan id="SvgjsTspan1822" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1826" x1="800" y1="1170" x2="1120" y2="2071" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1827)"></line><a id="SvgjsA1833" href="plot-ipc-121804-119900-1586822939593-30.html#16"><text id="SvgjsText1829" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1831" href="#SvgjsPath1832"><tspan id="SvgjsTspan1830" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1834" x1="160" y1="1199" x2="480" y2="1199" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1835)"></line><a id="SvgjsA1841" href="plot-ipc-121804-119900-1586822939593-30.html#17"><text id="SvgjsText1837" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1839" href="#SvgjsPath1840"><tspan id="SvgjsTspan1838" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1842" x1="480" y1="1199" x2="480" y2="1199" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1843)"></line><a id="SvgjsA1849" href="plot-ipc-121804-119900-1586822939593-30.html#17"><text id="SvgjsText1845" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1847" href="#SvgjsPath1848"><tspan id="SvgjsTspan1846" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1850" x1="480" y1="1199" x2="800" y2="1200" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1851)"></line><a id="SvgjsA1857" href="plot-ipc-121804-119900-1586822939593-30.html#17"><text id="SvgjsText1853" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1855" href="#SvgjsPath1856"><tspan id="SvgjsTspan1854" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1858" x1="800" y1="1200" x2="1120" y2="2071" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1859)"></line><a id="SvgjsA1865" href="plot-ipc-121804-119900-1586822939593-30.html#17"><text id="SvgjsText1861" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1863" href="#SvgjsPath1864"><tspan id="SvgjsTspan1862" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1866" x1="160" y1="1228" x2="480" y2="1228" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1867)"></line><a id="SvgjsA1873" href="plot-ipc-121804-119900-1586822939593-30.html#18"><text id="SvgjsText1869" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1871" href="#SvgjsPath1872"><tspan id="SvgjsTspan1870" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1874" x1="480" y1="1228" x2="480" y2="1228" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1875)"></line><a id="SvgjsA1881" href="plot-ipc-121804-119900-1586822939593-30.html#18"><text id="SvgjsText1877" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1879" href="#SvgjsPath1880"><tspan id="SvgjsTspan1878" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1882" x1="480" y1="1228" x2="800" y2="1228" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1883)"></line><a id="SvgjsA1889" href="plot-ipc-121804-119900-1586822939593-30.html#18"><text id="SvgjsText1885" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1887" href="#SvgjsPath1888"><tspan id="SvgjsTspan1886" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1890" x1="800" y1="1228" x2="1120" y2="2071" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1891)"></line><a id="SvgjsA1897" href="plot-ipc-121804-119900-1586822939593-30.html#18"><text id="SvgjsText1893" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1895" href="#SvgjsPath1896"><tspan id="SvgjsTspan1894" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1898" x1="160" y1="1301" x2="480" y2="1301" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1899)"></line><a id="SvgjsA1905" href="plot-ipc-121804-119900-1586822939593-30.html#19"><text id="SvgjsText1901" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1903" href="#SvgjsPath1904"><tspan id="SvgjsTspan1902" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1906" x1="480" y1="1301" x2="480" y2="1301" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1907)"></line><a id="SvgjsA1913" href="plot-ipc-121804-119900-1586822939593-30.html#19"><text id="SvgjsText1909" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1911" href="#SvgjsPath1912"><tspan id="SvgjsTspan1910" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1914" x1="480" y1="1301" x2="800" y2="1301" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1915)"></line><a id="SvgjsA1921" href="plot-ipc-121804-119900-1586822939593-30.html#19"><text id="SvgjsText1917" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1919" href="#SvgjsPath1920"><tspan id="SvgjsTspan1918" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1922" x1="800" y1="1301" x2="1120" y2="2071" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1923)"></line><a id="SvgjsA1929" href="plot-ipc-121804-119900-1586822939593-30.html#19"><text id="SvgjsText1925" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1927" href="#SvgjsPath1928"><tspan id="SvgjsTspan1926" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1930" x1="160" y1="1318" x2="480" y2="1318" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1931)"></line><a id="SvgjsA1937" href="plot-ipc-121804-119900-1586822939593-30.html#20"><text id="SvgjsText1933" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1935" href="#SvgjsPath1936"><tspan id="SvgjsTspan1934" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1938" x1="480" y1="1318" x2="480" y2="1318" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1939)"></line><a id="SvgjsA1945" href="plot-ipc-121804-119900-1586822939593-30.html#20"><text id="SvgjsText1941" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1943" href="#SvgjsPath1944"><tspan id="SvgjsTspan1942" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1946" x1="480" y1="1318" x2="800" y2="1318" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1947)"></line><a id="SvgjsA1953" href="plot-ipc-121804-119900-1586822939593-30.html#20"><text id="SvgjsText1949" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1951" href="#SvgjsPath1952"><tspan id="SvgjsTspan1950" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1954" x1="800" y1="1318" x2="1120" y2="2071" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1955)"></line><a id="SvgjsA1961" href="plot-ipc-121804-119900-1586822939593-30.html#20"><text id="SvgjsText1957" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1959" href="#SvgjsPath1960"><tspan id="SvgjsTspan1958" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1962" x1="160" y1="1347" x2="480" y2="1347" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1963)"></line><a id="SvgjsA1969" href="plot-ipc-121804-119900-1586822939593-30.html#21"><text id="SvgjsText1965" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1967" href="#SvgjsPath1968"><tspan id="SvgjsTspan1966" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1970" x1="480" y1="1347" x2="480" y2="1347" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1971)"></line><a id="SvgjsA1977" href="plot-ipc-121804-119900-1586822939593-30.html#21"><text id="SvgjsText1973" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1975" href="#SvgjsPath1976"><tspan id="SvgjsTspan1974" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1978" x1="480" y1="1347" x2="800" y2="1347" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1979)"></line><a id="SvgjsA1985" href="plot-ipc-121804-119900-1586822939593-30.html#21"><text id="SvgjsText1981" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1983" href="#SvgjsPath1984"><tspan id="SvgjsTspan1982" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1986" x1="800" y1="1347" x2="1120" y2="2071" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1987)"></line><a id="SvgjsA1993" href="plot-ipc-121804-119900-1586822939593-30.html#21"><text id="SvgjsText1989" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1991" href="#SvgjsPath1992"><tspan id="SvgjsTspan1990" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine1994" x1="160" y1="1436" x2="480" y2="1436" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1995)"></line><a id="SvgjsA2001" href="plot-ipc-121804-119900-1586822939593-30.html#22"><text id="SvgjsText1997" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1999" href="#SvgjsPath2000"><tspan id="SvgjsTspan1998" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">22. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2002" x1="480" y1="1436" x2="480" y2="1436" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2003)"></line><a id="SvgjsA2009" href="plot-ipc-121804-119900-1586822939593-30.html#22"><text id="SvgjsText2005" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2007" href="#SvgjsPath2008"><tspan id="SvgjsTspan2006" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">22. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2010" x1="480" y1="1436" x2="800" y2="1437" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2011)"></line><a id="SvgjsA2017" href="plot-ipc-121804-119900-1586822939593-30.html#22"><text id="SvgjsText2013" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2015" href="#SvgjsPath2016"><tspan id="SvgjsTspan2014" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">22. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2018" x1="800" y1="1437" x2="1120" y2="2071" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2019)"></line><a id="SvgjsA2025" href="plot-ipc-121804-119900-1586822939593-30.html#22"><text id="SvgjsText2021" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2023" href="#SvgjsPath2024"><tspan id="SvgjsTspan2022" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">22. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2026" x1="160" y1="1454" x2="480" y2="1454" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2027)"></line><a id="SvgjsA2033" href="plot-ipc-121804-119900-1586822939593-30.html#23"><text id="SvgjsText2029" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2031" href="#SvgjsPath2032"><tspan id="SvgjsTspan2030" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">23. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2034" x1="480" y1="1454" x2="480" y2="1454" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2035)"></line><a id="SvgjsA2041" href="plot-ipc-121804-119900-1586822939593-30.html#23"><text id="SvgjsText2037" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2039" href="#SvgjsPath2040"><tspan id="SvgjsTspan2038" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">23. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2042" x1="480" y1="1454" x2="800" y2="1454" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2043)"></line><a id="SvgjsA2049" href="plot-ipc-121804-119900-1586822939593-30.html#23"><text id="SvgjsText2045" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2047" href="#SvgjsPath2048"><tspan id="SvgjsTspan2046" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">23. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2050" x1="800" y1="1454" x2="1120" y2="2071" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2051)"></line><a id="SvgjsA2057" href="plot-ipc-121804-119900-1586822939593-30.html#23"><text id="SvgjsText2053" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2055" href="#SvgjsPath2056"><tspan id="SvgjsTspan2054" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">23. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2058" x1="160" y1="1478" x2="480" y2="1478" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2059)"></line><a id="SvgjsA2065" href="plot-ipc-121804-119900-1586822939593-30.html#24"><text id="SvgjsText2061" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2063" href="#SvgjsPath2064"><tspan id="SvgjsTspan2062" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">24. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2066" x1="480" y1="1478" x2="480" y2="1478" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2067)"></line><a id="SvgjsA2073" href="plot-ipc-121804-119900-1586822939593-30.html#24"><text id="SvgjsText2069" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2071" href="#SvgjsPath2072"><tspan id="SvgjsTspan2070" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">24. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2074" x1="480" y1="1478" x2="800" y2="1478" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2075)"></line><a id="SvgjsA2081" href="plot-ipc-121804-119900-1586822939593-30.html#24"><text id="SvgjsText2077" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2079" href="#SvgjsPath2080"><tspan id="SvgjsTspan2078" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">24. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2082" x1="800" y1="1478" x2="1120" y2="2071" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2083)"></line><a id="SvgjsA2089" href="plot-ipc-121804-119900-1586822939593-30.html#24"><text id="SvgjsText2085" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2087" href="#SvgjsPath2088"><tspan id="SvgjsTspan2086" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">24. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2090" x1="160" y1="1510" x2="480" y2="1510" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2091)"></line><a id="SvgjsA2097" href="plot-ipc-121804-119900-1586822939593-30.html#25"><text id="SvgjsText2093" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2095" href="#SvgjsPath2096"><tspan id="SvgjsTspan2094" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">25. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2098" x1="480" y1="1510" x2="480" y2="1510" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2099)"></line><a id="SvgjsA2105" href="plot-ipc-121804-119900-1586822939593-30.html#25"><text id="SvgjsText2101" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2103" href="#SvgjsPath2104"><tspan id="SvgjsTspan2102" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">25. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2106" x1="480" y1="1510" x2="800" y2="1510" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2107)"></line><a id="SvgjsA2113" href="plot-ipc-121804-119900-1586822939593-30.html#25"><text id="SvgjsText2109" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2111" href="#SvgjsPath2112"><tspan id="SvgjsTspan2110" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">25. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2114" x1="800" y1="1510" x2="1120" y2="2071" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2115)"></line><a id="SvgjsA2121" href="plot-ipc-121804-119900-1586822939593-30.html#25"><text id="SvgjsText2117" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2119" href="#SvgjsPath2120"><tspan id="SvgjsTspan2118" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">25. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2122" x1="160" y1="1584" x2="480" y2="1584" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2123)"></line><a id="SvgjsA2129" href="plot-ipc-121804-119900-1586822939593-30.html#26"><text id="SvgjsText2125" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2127" href="#SvgjsPath2128"><tspan id="SvgjsTspan2126" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">26. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2130" x1="480" y1="1584" x2="480" y2="1584" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2131)"></line><a id="SvgjsA2137" href="plot-ipc-121804-119900-1586822939593-30.html#26"><text id="SvgjsText2133" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2135" href="#SvgjsPath2136"><tspan id="SvgjsTspan2134" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">26. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2138" x1="480" y1="1584" x2="800" y2="1644" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2139)"></line><a id="SvgjsA2145" href="plot-ipc-121804-119900-1586822939593-30.html#26"><text id="SvgjsText2141" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2143" href="#SvgjsPath2144"><tspan id="SvgjsTspan2142" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">26. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2146" x1="800" y1="1644" x2="1120" y2="2071" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2147)"></line><a id="SvgjsA2153" href="plot-ipc-121804-119900-1586822939593-30.html#26"><text id="SvgjsText2149" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2151" href="#SvgjsPath2152"><tspan id="SvgjsTspan2150" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">26. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2154" x1="160" y1="1594" x2="480" y2="1594" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2155)"></line><a id="SvgjsA2161" href="plot-ipc-121804-119900-1586822939593-30.html#27"><text id="SvgjsText2157" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2159" href="#SvgjsPath2160"><tspan id="SvgjsTspan2158" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">27. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2162" x1="480" y1="1594" x2="480" y2="1594" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2163)"></line><a id="SvgjsA2169" href="plot-ipc-121804-119900-1586822939593-30.html#27"><text id="SvgjsText2165" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2167" href="#SvgjsPath2168"><tspan id="SvgjsTspan2166" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">27. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2170" x1="480" y1="1594" x2="800" y2="1644" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2171)"></line><a id="SvgjsA2177" href="plot-ipc-121804-119900-1586822939593-30.html#27"><text id="SvgjsText2173" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2175" href="#SvgjsPath2176"><tspan id="SvgjsTspan2174" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">27. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2178" x1="800" y1="1644" x2="1120" y2="2071" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2179)"></line><a id="SvgjsA2185" href="plot-ipc-121804-119900-1586822939593-30.html#27"><text id="SvgjsText2181" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2183" href="#SvgjsPath2184"><tspan id="SvgjsTspan2182" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">27. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2186" x1="160" y1="1621" x2="480" y2="1621" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2187)"></line><a id="SvgjsA2193" href="plot-ipc-121804-119900-1586822939593-30.html#28"><text id="SvgjsText2189" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2191" href="#SvgjsPath2192"><tspan id="SvgjsTspan2190" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">28. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2194" x1="480" y1="1621" x2="480" y2="1621" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2195)"></line><a id="SvgjsA2201" href="plot-ipc-121804-119900-1586822939593-30.html#28"><text id="SvgjsText2197" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2199" href="#SvgjsPath2200"><tspan id="SvgjsTspan2198" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">28. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2202" x1="480" y1="1621" x2="800" y2="1644" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2203)"></line><a id="SvgjsA2209" href="plot-ipc-121804-119900-1586822939593-30.html#28"><text id="SvgjsText2205" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2207" href="#SvgjsPath2208"><tspan id="SvgjsTspan2206" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">28. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2210" x1="800" y1="1644" x2="1120" y2="2071" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2211)"></line><a id="SvgjsA2217" href="plot-ipc-121804-119900-1586822939593-30.html#28"><text id="SvgjsText2213" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2215" href="#SvgjsPath2216"><tspan id="SvgjsTspan2214" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">28. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2218" x1="160" y1="1960" x2="480" y2="1960" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2219)"></line><a id="SvgjsA2225" href="plot-ipc-121804-119900-1586822939593-30.html#29"><text id="SvgjsText2221" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2223" href="#SvgjsPath2224"><tspan id="SvgjsTspan2222" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">29. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2226" x1="480" y1="1960" x2="480" y2="1960" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2227)"></line><a id="SvgjsA2233" href="plot-ipc-121804-119900-1586822939593-30.html#29"><text id="SvgjsText2229" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2231" href="#SvgjsPath2232"><tspan id="SvgjsTspan2230" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">29. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2234" x1="480" y1="1960" x2="800" y2="2069" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2235)"></line><a id="SvgjsA2241" href="plot-ipc-121804-119900-1586822939593-30.html#29"><text id="SvgjsText2237" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2239" href="#SvgjsPath2240"><tspan id="SvgjsTspan2238" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">29. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2242" x1="800" y1="2069" x2="1120" y2="2071" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2243)"></line><a id="SvgjsA2249" href="plot-ipc-121804-119900-1586822939593-30.html#29"><text id="SvgjsText2245" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2247" href="#SvgjsPath2248"><tspan id="SvgjsTspan2246" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">29. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2250" x1="160" y1="1995" x2="480" y2="1995" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2251)"></line><a id="SvgjsA2257" href="plot-ipc-121804-119900-1586822939593-30.html#30"><text id="SvgjsText2253" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2255" href="#SvgjsPath2256"><tspan id="SvgjsTspan2254" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">30. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2258" x1="480" y1="1995" x2="480" y2="1995" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2259)"></line><a id="SvgjsA2265" href="plot-ipc-121804-119900-1586822939593-30.html#30"><text id="SvgjsText2261" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2263" href="#SvgjsPath2264"><tspan id="SvgjsTspan2262" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">30. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2266" x1="480" y1="1995" x2="800" y2="2069" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2267)"></line><a id="SvgjsA2273" href="plot-ipc-121804-119900-1586822939593-30.html#30"><text id="SvgjsText2269" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2271" href="#SvgjsPath2272"><tspan id="SvgjsTspan2270" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">30. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><line id="SvgjsLine2274" x1="800" y1="2069" x2="1120" y2="2071" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2275)"></line><a id="SvgjsA2281" href="plot-ipc-121804-119900-1586822939593-30.html#30"><text id="SvgjsText2277" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2279" href="#SvgjsPath2280"><tspan id="SvgjsTspan2278" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">30. PCompositorBridge::Msg_DidComposite (208)</tspan></textPath></text></a><a id="SvgjsA2284" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2282" font-family="Helvetica, Arial, sans-serif" x="1130" y="36.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2283" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2287" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2285" font-family="Helvetica, Arial, sans-serif" x="1130" y="39.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2286" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2290" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2288" font-family="Helvetica, Arial, sans-serif" x="1130" y="43.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2289" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2293" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2291" font-family="Helvetica, Arial, sans-serif" x="1130" y="48.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2292" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2296" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2294" font-family="Helvetica, Arial, sans-serif" x="1130" y="52.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2295" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2299" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2297" font-family="Helvetica, Arial, sans-serif" x="1130" y="55.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2298" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2302" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2300" font-family="Helvetica, Arial, sans-serif" x="1130" y="62.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2301" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2305" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2303" font-family="Helvetica, Arial, sans-serif" x="1130" y="66.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2304" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2308" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2306" font-family="Helvetica, Arial, sans-serif" x="1130" y="71.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2307" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2311" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2309" font-family="Helvetica, Arial, sans-serif" x="1130" y="76.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2310" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2314" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2312" font-family="Helvetica, Arial, sans-serif" x="1130" y="83.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2313" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2317" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2315" font-family="Helvetica, Arial, sans-serif" x="1130" y="88.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2316" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2320" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2318" font-family="Helvetica, Arial, sans-serif" x="1130" y="92.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2319" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2323" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2321" font-family="Helvetica, Arial, sans-serif" x="1130" y="95.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2322" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2326" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2324" font-family="Helvetica, Arial, sans-serif" x="1130" y="101.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2325" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2329" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2327" font-family="Helvetica, Arial, sans-serif" x="1130" y="104.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2328" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2332" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2330" font-family="Helvetica, Arial, sans-serif" x="1130" y="115.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2331" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2335" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2333" font-family="Helvetica, Arial, sans-serif" x="1130" y="121.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2334" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2338" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2336" font-family="Helvetica, Arial, sans-serif" x="1130" y="127.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2337" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2341" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2339" font-family="Helvetica, Arial, sans-serif" x="1130" y="132.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2340" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2344" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2342" font-family="Helvetica, Arial, sans-serif" x="1130" y="135.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2343" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2347" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2345" font-family="Helvetica, Arial, sans-serif" x="1130" y="139.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2346" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2350" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2348" font-family="Helvetica, Arial, sans-serif" x="1130" y="144.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2349" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2353" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2351" font-family="Helvetica, Arial, sans-serif" x="1130" y="148.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2352" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2356" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2354" font-family="Helvetica, Arial, sans-serif" x="1130" y="153.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2355" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2359" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2357" font-family="Helvetica, Arial, sans-serif" x="1130" y="156.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2358" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2362" href="data:text/plain,style::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2360" font-family="Helvetica, Arial, sans-serif" x="1130" y="163.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2361" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::_moz_box_ordinal_group::parse_declared</tspan></text></a><a id="SvgjsA2365" href="data:text/plain,alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in%0a%0dalloc::vec::Vec&lt;style::values::computed::length_percentage::LengthPercentage&gt;::with_capacity&lt;style::values::computed::length_percentage::LengthPercentage&gt;%0a%0dsmallvec::SmallVec&lt;A&gt;::grow%0a%0dstyle::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2363" font-family="Helvetica, Arial, sans-serif" x="1130" y="170.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2364" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in</tspan></text></a><a id="SvgjsA2368" href="data:text/plain,core::result::Result&lt;cssparser::cow_rc_str::CowRcStr*, cssparser::parser::BasicParseError&gt;::map_err&lt;cssparser::cow_rc_str::CowRcStr*,cssparser::parser::BasicParseError,(),closure-0&gt;%0a%0dstyle::properties::CSSWideKeyword::parse%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in%0a%0dalloc::vec::Vec&lt;style::values::computed::length_percentage::LengthPercentage&gt;::with_capacity&lt;style::values::computed::length_percentage::LengthPercentage&gt;%0a%0dsmallvec::SmallVec&lt;A&gt;::grow%0a%0dstyle::properties::longhands::_moz_box_ordinal_group::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::cow_rc_str::CowRcStr::unpack%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2366" font-family="Helvetica, Arial, sans-serif" x="1130" y="174.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2367" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::result::Result&lt;cssparser::cow_rc_str::CowRcStr*, cssparser::parser::BasicParseError&gt;::map_err&lt;cssparser::cow_rc_str::CowRcStr*,cssparser::parser::BasicParseError,(),closure-0&gt;</tspan></text></a><a id="SvgjsA2371" href="data:text/plain,cssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::media_queries::media_query::Qualifier, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::media_queries::media_query::Qualifier,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::media_queries::media_query::{{impl}}::parse::{{closure}}%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2369" font-family="Helvetica, Arial, sans-serif" x="1130" y="177.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2370" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::media_queries::media_query::Qualifier, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::media_queries::media_query::Qualifier,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;</tspan></text></a><a id="SvgjsA2374" href="data:text/plain,PLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dcssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::media_queries::media_query::Qualifier, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::media_queries::media_query::Qualifier,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::media_queries::media_query::{{impl}}::parse::{{closure}}%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2372" font-family="Helvetica, Arial, sans-serif" x="1130" y="181.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2373" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">PLDHashTable::Add(void const*, std::nothrow_t const&amp;)</tspan></text></a><a id="SvgjsA2377" href="data:text/plain,VirtualAllocStub%0a%0dPLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dcssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::media_queries::media_query::Qualifier, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::media_queries::media_query::Qualifier,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::media_queries::media_query::{{impl}}::parse::{{closure}}%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2375" font-family="Helvetica, Arial, sans-serif" x="1130" y="184.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2376" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">VirtualAllocStub</tspan></text></a><a id="SvgjsA2380" href="data:text/plain,cssparser::tokenizer::consume_name%0a%0dVirtualAllocStub%0a%0dPLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dcssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::media_queries::media_query::Qualifier, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::media_queries::media_query::Qualifier,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::media_queries::media_query::{{impl}}::parse::{{closure}}%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2378" font-family="Helvetica, Arial, sans-serif" x="1130" y="188.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2379" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::tokenizer::consume_name</tspan></text></a><a id="SvgjsA2383" href="data:text/plain,&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter%0a%0dstyle::properties::shorthands::overflow::parse_value%0a%0dstyle::properties::shorthands::overflow::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::overflow::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::overflow::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dcssparser::tokenizer::consume_name%0a%0dVirtualAllocStub%0a%0dPLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dcssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::media_queries::media_query::Qualifier, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::media_queries::media_query::Qualifier,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::media_queries::media_query::{{impl}}::parse::{{closure}}%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2381" font-family="Helvetica, Arial, sans-serif" x="1130" y="191.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2382" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter</tspan></text></a><a id="SvgjsA2386" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2384" font-family="Helvetica, Arial, sans-serif" x="1130" y="195.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2385" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2389" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2387" font-family="Helvetica, Arial, sans-serif" x="1130" y="198.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2388" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2392" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2390" font-family="Helvetica, Arial, sans-serif" x="1130" y="209.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2391" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2395" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2393" font-family="Helvetica, Arial, sans-serif" x="1130" y="214.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2394" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2398" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2396" font-family="Helvetica, Arial, sans-serif" x="1130" y="217.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2397" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2401" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2399" font-family="Helvetica, Arial, sans-serif" x="1130" y="223.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2400" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2404" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2402" font-family="Helvetica, Arial, sans-serif" x="1130" y="226.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2403" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2407" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2405" font-family="Helvetica, Arial, sans-serif" x="1130" y="231.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2406" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2410" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2408" font-family="Helvetica, Arial, sans-serif" x="1130" y="237.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2409" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2413" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2411" font-family="Helvetica, Arial, sans-serif" x="1130" y="249.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2412" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2416" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2414" font-family="Helvetica, Arial, sans-serif" x="1130" y="252.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2415" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2419" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2417" font-family="Helvetica, Arial, sans-serif" x="1130" y="256.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2418" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2422" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2420" font-family="Helvetica, Arial, sans-serif" x="1130" y="261.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2421" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2425" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2423" font-family="Helvetica, Arial, sans-serif" x="1130" y="265.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2424" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2428" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2426" font-family="Helvetica, Arial, sans-serif" x="1130" y="268.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2427" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2431" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2429" font-family="Helvetica, Arial, sans-serif" x="1130" y="272.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2430" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2434" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2432" font-family="Helvetica, Arial, sans-serif" x="1130" y="277.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2433" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2437" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2435" font-family="Helvetica, Arial, sans-serif" x="1130" y="282.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2436" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2440" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2438" font-family="Helvetica, Arial, sans-serif" x="1130" y="287.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2439" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2443" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2441" font-family="Helvetica, Arial, sans-serif" x="1130" y="292.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2442" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2446" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2444" font-family="Helvetica, Arial, sans-serif" x="1130" y="305.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2445" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2449" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2447" font-family="Helvetica, Arial, sans-serif" x="1130" y="310.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2448" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2452" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2450" font-family="Helvetica, Arial, sans-serif" x="1130" y="318.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2451" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2455" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2453" font-family="Helvetica, Arial, sans-serif" x="1130" y="322.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2454" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2458" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2456" font-family="Helvetica, Arial, sans-serif" x="1130" y="327.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2457" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2461" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2459" font-family="Helvetica, Arial, sans-serif" x="1130" y="331.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2460" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2464" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2462" font-family="Helvetica, Arial, sans-serif" x="1130" y="334.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2463" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2467" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2465" font-family="Helvetica, Arial, sans-serif" x="1130" y="341.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2466" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2470" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2468" font-family="Helvetica, Arial, sans-serif" x="1130" y="350.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2469" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2473" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2471" font-family="Helvetica, Arial, sans-serif" x="1130" y="357.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2472" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2476" href="data:text/plain,webrender::storage::Index&lt;T&gt;::new%0a%0dcssparser::tokenizer::Tokenizer::has_at_least%0a%0dcssparser::tokenizer::consume_name%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_qualified_name%0a%0dselectors::parser::parse_type_selector%0a%0dselectors::parser::parse_compound_selector%0a%0dalloc::alloc::box_free&lt;xulstore::iter::XULStoreIterator&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::extend%0a%0dcssparser::rules_and_declarations::parse_qualified_rule::{{closure}}&lt;style::stylesheets::rule_parser::NestedRuleParser,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-1,style::stylesheets::CssRule,style_traits::StyleParseErrorKind&gt;%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2474" font-family="Helvetica, Arial, sans-serif" x="1130" y="362.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2475" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">webrender::storage::Index&lt;T&gt;::new</tspan></text></a><a id="SvgjsA2479" href="data:text/plain,webrender::storage::Index&lt;T&gt;::new%0a%0dcssparser::tokenizer::Tokenizer::has_at_least%0a%0dcssparser::tokenizer::consume_name%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_qualified_name%0a%0dselectors::parser::parse_type_selector%0a%0dselectors::parser::parse_compound_selector%0a%0dalloc::alloc::box_free&lt;xulstore::iter::XULStoreIterator&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::extend%0a%0dcssparser::rules_and_declarations::parse_qualified_rule::{{closure}}&lt;style::stylesheets::rule_parser::NestedRuleParser,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-1,style::stylesheets::CssRule,style_traits::StyleParseErrorKind&gt;%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2477" font-family="Helvetica, Arial, sans-serif" x="1130" y="366.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2478" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">webrender::storage::Index&lt;T&gt;::new</tspan></text></a><a id="SvgjsA2482" href="data:text/plain,core::hash::sip::{{impl}}::d_rounds%0a%0dsiphasher::sip128::Hasher&lt;siphasher::sip128::Sip13Rounds&gt;::finish128&lt;siphasher::sip128::Sip13Rounds&gt;%0a%0dphf_shared::hash&lt;str&gt;%0a%0d&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter%0a%0dstyle::properties::shorthands::overflow::parse_value%0a%0dstyle::properties::shorthands::overflow::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::overflow::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::overflow::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dcssparser::tokenizer::consume_name%0a%0dVirtualAllocStub%0a%0dPLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dcssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::media_queries::media_query::Qualifier, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::media_queries::media_query::Qualifier,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::media_queries::media_query::{{impl}}::parse::{{closure}}%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2480" font-family="Helvetica, Arial, sans-serif" x="1130" y="369.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2481" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::hash::sip::{{impl}}::d_rounds</tspan></text></a><a id="SvgjsA2485" href="data:text/plain,smallvec::SmallVec&lt;A&gt;::grow%0a%0dcore::hash::sip::{{impl}}::d_rounds%0a%0dsiphasher::sip128::Hasher&lt;siphasher::sip128::Sip13Rounds&gt;::finish128&lt;siphasher::sip128::Sip13Rounds&gt;%0a%0dphf_shared::hash&lt;str&gt;%0a%0d&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter%0a%0dstyle::properties::shorthands::overflow::parse_value%0a%0dstyle::properties::shorthands::overflow::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::overflow::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::overflow::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dcssparser::tokenizer::consume_name%0a%0dVirtualAllocStub%0a%0dPLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dcssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::media_queries::media_query::Qualifier, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::media_queries::media_query::Qualifier,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::media_queries::media_query::{{impl}}::parse::{{closure}}%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2483" font-family="Helvetica, Arial, sans-serif" x="1130" y="373.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2484" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">smallvec::SmallVec&lt;A&gt;::grow</tspan></text></a><a id="SvgjsA2488" href="data:text/plain,cssparser::tokenizer::consume_name%0a%0dVirtualAllocStub%0a%0dPLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dcssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::media_queries::media_query::Qualifier, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::media_queries::media_query::Qualifier,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::media_queries::media_query::{{impl}}::parse::{{closure}}%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2486" font-family="Helvetica, Arial, sans-serif" x="1130" y="376.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2487" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::tokenizer::consume_name</tspan></text></a><a id="SvgjsA2491" href="data:text/plain,core::option::Option&lt;cssparser::parser::CachedToken&gt;::as_ref&lt;cssparser::parser::CachedToken&gt;%0a%0dcssparser::parser::ParserInput::cached_token_ref%0a%0dcssparser::parser::Parser::next_including_whitespace%0a%0dsmallvec::SmallVec&lt;A&gt;::grow%0a%0dcore::hash::sip::{{impl}}::d_rounds%0a%0dsiphasher::sip128::Hasher&lt;siphasher::sip128::Sip13Rounds&gt;::finish128&lt;siphasher::sip128::Sip13Rounds&gt;%0a%0dphf_shared::hash&lt;str&gt;%0a%0d&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter%0a%0dstyle::properties::shorthands::overflow::parse_value%0a%0dstyle::properties::shorthands::overflow::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::overflow::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::overflow::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dcssparser::tokenizer::consume_name%0a%0dVirtualAllocStub%0a%0dPLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dcssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::media_queries::media_query::Qualifier, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::media_queries::media_query::Qualifier,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::media_queries::media_query::{{impl}}::parse::{{closure}}%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2489" font-family="Helvetica, Arial, sans-serif" x="1130" y="380.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2490" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::option::Option&lt;cssparser::parser::CachedToken&gt;::as_ref&lt;cssparser::parser::CachedToken&gt;</tspan></text></a><a id="SvgjsA2494" href="data:text/plain,style::properties::ShorthandId::longhands%0a%0d[js] notify%0a%0dnsTimerImpl::Fire(int)%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2492" font-family="Helvetica, Arial, sans-serif" x="1130" y="383.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2493" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::ShorthandId::longhands</tspan></text></a><a id="SvgjsA2497" href="data:text/plain,mozilla::profiler::AllocCallback%0a%0dstyle::properties::ShorthandId::longhands%0a%0d[js] notify%0a%0dnsTimerImpl::Fire(int)%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2495" font-family="Helvetica, Arial, sans-serif" x="1130" y="387.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2496" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">mozilla::profiler::AllocCallback</tspan></text></a><a id="SvgjsA2500" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2498" font-family="Helvetica, Arial, sans-serif" x="1130" y="390.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2499" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2503" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2501" font-family="Helvetica, Arial, sans-serif" x="1130" y="394.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2502" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2506" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2504" font-family="Helvetica, Arial, sans-serif" x="1130" y="397.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2505" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2509" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2507" font-family="Helvetica, Arial, sans-serif" x="1130" y="401.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2508" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2512" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2510" font-family="Helvetica, Arial, sans-serif" x="1130" y="404.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2511" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2515" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2513" font-family="Helvetica, Arial, sans-serif" x="1130" y="408.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2514" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2518" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2516" font-family="Helvetica, Arial, sans-serif" x="1130" y="411.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2517" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2521" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2519" font-family="Helvetica, Arial, sans-serif" x="1130" y="423.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2520" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2524" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2522" font-family="Helvetica, Arial, sans-serif" x="1130" y="430.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2523" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2527" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2525" font-family="Helvetica, Arial, sans-serif" x="1130" y="436.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2526" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2530" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2528" font-family="Helvetica, Arial, sans-serif" x="1130" y="439.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2529" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2533" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2531" font-family="Helvetica, Arial, sans-serif" x="1130" y="446.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2532" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2536" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2534" font-family="Helvetica, Arial, sans-serif" x="1130" y="451.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2535" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2539" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2537" font-family="Helvetica, Arial, sans-serif" x="1130" y="458.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2538" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2542" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2540" font-family="Helvetica, Arial, sans-serif" x="1130" y="463.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2541" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2545" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2543" font-family="Helvetica, Arial, sans-serif" x="1130" y="469.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2544" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2548" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2546" font-family="Helvetica, Arial, sans-serif" x="1130" y="477.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2547" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2551" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2549" font-family="Helvetica, Arial, sans-serif" x="1130" y="488.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2550" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2554" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2552" font-family="Helvetica, Arial, sans-serif" x="1130" y="496.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2553" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2557" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2555" font-family="Helvetica, Arial, sans-serif" x="1130" y="500.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2556" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2560" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2558" font-family="Helvetica, Arial, sans-serif" x="1130" y="503.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2559" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2563" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2561" font-family="Helvetica, Arial, sans-serif" x="1130" y="509.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2562" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2566" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2564" font-family="Helvetica, Arial, sans-serif" x="1130" y="514.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2565" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2569" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2567" font-family="Helvetica, Arial, sans-serif" x="1130" y="519.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2568" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2572" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2570" font-family="Helvetica, Arial, sans-serif" x="1130" y="523.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2571" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2575" href="data:text/plain,cssparser::tokenizer::Tokenizer::skip_whitespace%0a%0dcssparser::parser::Parser::expect_colon%0a%0dcssparser::rules_and_declarations::{{impl}}::next::{{closure}}&lt;style::properties::declaration_block::Importance,style::properties::declaration_block::PropertyDeclarationParser,style_traits::StyleParseErrorKind&gt;%0a%0dmozilla::profiler::AllocCallback%0a%0dstyle::properties::ShorthandId::longhands%0a%0d[js] notify%0a%0dnsTimerImpl::Fire(int)%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2573" font-family="Helvetica, Arial, sans-serif" x="1130" y="530.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2574" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::tokenizer::Tokenizer::skip_whitespace</tspan></text></a><a id="SvgjsA2578" href="data:text/plain,memcmp()%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2576" font-family="Helvetica, Arial, sans-serif" x="1130" y="533.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2577" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcmp()</tspan></text></a><a id="SvgjsA2581" href="data:text/plain,selectors::parser::parse_selector%0a%0dstyle::properties::CSSWideKeyword::parse%0a%0dcssparser::tokenizer::Tokenizer::skip_whitespace%0a%0dcssparser::parser::Parser::expect_colon%0a%0dcssparser::rules_and_declarations::{{impl}}::next::{{closure}}&lt;style::properties::declaration_block::Importance,style::properties::declaration_block::PropertyDeclarationParser,style_traits::StyleParseErrorKind&gt;%0a%0dmozilla::profiler::AllocCallback%0a%0dstyle::properties::ShorthandId::longhands%0a%0d[js] notify%0a%0dnsTimerImpl::Fire(int)%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2579" font-family="Helvetica, Arial, sans-serif" x="1130" y="537.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2580" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">selectors::parser::parse_selector</tspan></text></a><a id="SvgjsA2584" href="data:text/plain,Allocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dcssparser::tokenizer::Tokenizer::skip_whitespace%0a%0dcssparser::parser::Parser::expect_colon%0a%0dcssparser::rules_and_declarations::{{impl}}::next::{{closure}}&lt;style::properties::declaration_block::Importance,style::properties::declaration_block::PropertyDeclarationParser,style_traits::StyleParseErrorKind&gt;%0a%0dmozilla::profiler::AllocCallback%0a%0dstyle::properties::ShorthandId::longhands%0a%0d[js] notify%0a%0dnsTimerImpl::Fire(int)%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2582" font-family="Helvetica, Arial, sans-serif" x="1130" y="540.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2583" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">Allocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)</tspan></text></a><a id="SvgjsA2587" href="data:text/plain,style::properties::AllShorthand::declarations%0a%0dsmallvec::{{impl}}::deref_mut&lt;[cssparser::parser::BlockType; 16]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2585" font-family="Helvetica, Arial, sans-serif" x="1130" y="544.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2586" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::AllShorthand::declarations</tspan></text></a><a id="SvgjsA2590" href="data:text/plain,cssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::AllShorthand::declarations%0a%0dsmallvec::{{impl}}::deref_mut&lt;[cssparser::parser::BlockType; 16]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0dcssparser::parser::consume_until_end_of_block%0a%0dcore::num::{{impl}}::rotate_left%0a%0dcore::hash::sip::{{impl}}::c_rounds%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2588" font-family="Helvetica, Arial, sans-serif" x="1130" y="547.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2589" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;</tspan></text></a><a id="SvgjsA2593" href="data:text/plain,webrender::storage::Index&lt;T&gt;::new%0a%0dcssparser::tokenizer::Tokenizer::has_at_least%0a%0dcssparser::tokenizer::consume_name%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_qualified_name%0a%0dselectors::parser::parse_type_selector%0a%0dselectors::parser::parse_compound_selector%0a%0dalloc::alloc::box_free&lt;xulstore::iter::XULStoreIterator&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::extend%0a%0dcssparser::rules_and_declarations::parse_qualified_rule::{{closure}}&lt;style::stylesheets::rule_parser::NestedRuleParser,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-1,style::stylesheets::CssRule,style_traits::StyleParseErrorKind&gt;%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2591" font-family="Helvetica, Arial, sans-serif" x="1130" y="551.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2592" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">webrender::storage::Index&lt;T&gt;::new</tspan></text></a><a id="SvgjsA2596" href="data:text/plain,alloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2594" font-family="Helvetica, Arial, sans-serif" x="1130" y="554.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2595" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">alloc::raw_vec::RawVec&lt;T&gt;::into_box</tspan></text></a><a id="SvgjsA2599" href="data:text/plain,cssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2597" font-family="Helvetica, Arial, sans-serif" x="1130" y="558.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2598" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::tokenizer::Tokenizer::state</tspan></text></a><a id="SvgjsA2602" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2600" font-family="Helvetica, Arial, sans-serif" x="1130" y="561.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2601" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2605" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2603" font-family="Helvetica, Arial, sans-serif" x="1130" y="565.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2604" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2608" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2606" font-family="Helvetica, Arial, sans-serif" x="1130" y="568.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2607" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2611" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2609" font-family="Helvetica, Arial, sans-serif" x="1130" y="571.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2610" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2614" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2612" font-family="Helvetica, Arial, sans-serif" x="1130" y="575.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2613" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2617" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2615" font-family="Helvetica, Arial, sans-serif" x="1130" y="586.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2616" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2620" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2618" font-family="Helvetica, Arial, sans-serif" x="1130" y="589.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2619" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2623" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2621" font-family="Helvetica, Arial, sans-serif" x="1130" y="593.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2622" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2626" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2624" font-family="Helvetica, Arial, sans-serif" x="1130" y="599.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2625" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2629" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2627" font-family="Helvetica, Arial, sans-serif" x="1130" y="603.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2628" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2632" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2630" font-family="Helvetica, Arial, sans-serif" x="1130" y="607.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2631" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2635" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2633" font-family="Helvetica, Arial, sans-serif" x="1130" y="613.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2634" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2638" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2636" font-family="Helvetica, Arial, sans-serif" x="1130" y="619.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2637" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2641" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2639" font-family="Helvetica, Arial, sans-serif" x="1130" y="622.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2640" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2644" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2642" font-family="Helvetica, Arial, sans-serif" x="1130" y="627.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2643" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2647" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2645" font-family="Helvetica, Arial, sans-serif" x="1130" y="633.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2646" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2650" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2648" font-family="Helvetica, Arial, sans-serif" x="1130" y="638.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2649" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2653" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2651" font-family="Helvetica, Arial, sans-serif" x="1130" y="641.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2652" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2656" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2654" font-family="Helvetica, Arial, sans-serif" x="1130" y="645.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2655" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2659" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2657" font-family="Helvetica, Arial, sans-serif" x="1130" y="652.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2658" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2662" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2660" font-family="Helvetica, Arial, sans-serif" x="1130" y="657.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2661" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2665" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2663" font-family="Helvetica, Arial, sans-serif" x="1130" y="662.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2664" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2668" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2666" font-family="Helvetica, Arial, sans-serif" x="1130" y="666.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2667" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2671" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2669" font-family="Helvetica, Arial, sans-serif" x="1130" y="671.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2670" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2674" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2672" font-family="Helvetica, Arial, sans-serif" x="1130" y="676.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2673" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2677" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2675" font-family="Helvetica, Arial, sans-serif" x="1130" y="680.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2676" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2680" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2678" font-family="Helvetica, Arial, sans-serif" x="1130" y="685.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2679" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2683" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2681" font-family="Helvetica, Arial, sans-serif" x="1130" y="688.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2682" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2686" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2684" font-family="Helvetica, Arial, sans-serif" x="1130" y="694.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2685" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2689" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2687" font-family="Helvetica, Arial, sans-serif" x="1130" y="697.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2688" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2692" href="data:text/plain,memcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2690" font-family="Helvetica, Arial, sans-serif" x="1130" y="702.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2691" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2695" href="data:text/plain,style::stylesheets::rule_parser::NestedRuleParser::parse_nested_rules%0a%0dmemcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2693" font-family="Helvetica, Arial, sans-serif" x="1130" y="706.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2694" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::stylesheets::rule_parser::NestedRuleParser::parse_nested_rules</tspan></text></a><a id="SvgjsA2698" href="data:text/plain,cssparser::parser::Parser::skip_whitespace%0a%0dcssparser::parser::Parser::expect_exhausted%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::transition::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::stylesheets::rule_parser::NestedRuleParser::parse_nested_rules%0a%0dmemcpy()%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2696" font-family="Helvetica, Arial, sans-serif" x="1130" y="709.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2697" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::parser::Parser::skip_whitespace</tspan></text></a><a id="SvgjsA2701" href="data:text/plain,core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::tokenizer::consume_numeric%0a%0dstyle::values::specified::time::Time::parse_with_clamping_mode%0a%0dstyle::values::specified::time::Time::parse_non_negative%0a%0dstyle::properties::longhands::transition_duration::single_value::parse%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2699" font-family="Helvetica, Arial, sans-serif" x="1130" y="713.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2700" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</tspan></text></a><a id="SvgjsA2704" href="data:text/plain,CompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dstyle::properties::longhands::transition_duration::single_value::parse%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2702" font-family="Helvetica, Arial, sans-serif" x="1130" y="717.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2703" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">CompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)</tspan></text></a><a id="SvgjsA2707" href="data:text/plain,core::option::Option&lt;cssparser::parser::BlockType&gt;::take&lt;cssparser::parser::BlockType&gt;%0a%0dcssparser::parser::Parser::expect_delim%0a%0dcssparser::rules_and_declarations::parse_important%0a%0dcore::ops::function::FnOnce::call_once&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(mut cssparser::parser::Parser*)&gt;%0a%0dstyle::properties::longhands::transition_duration::single_value::parse%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2705" font-family="Helvetica, Arial, sans-serif" x="1130" y="720.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2706" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::option::Option&lt;cssparser::parser::BlockType&gt;::take&lt;cssparser::parser::BlockType&gt;</tspan></text></a><a id="SvgjsA2710" href="data:text/plain,servo_arc::HeaderWithLength&lt;H&gt;::new%0a%0dselectors::parser::parse_selector%0a%0dcssparser::rules_and_declarations::parse_important%0a%0dcore::ops::function::FnOnce::call_once&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(mut cssparser::parser::Parser*)&gt;%0a%0dstyle::properties::longhands::transition_duration::single_value::parse%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0d&lt;style::values::specified::color::Color as style::parser::Parse&gt;::parse%0a%0dstyle::values::specified::effects::{{impl}}::parse::{{closure}}%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::color::Color,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::properties::shorthands::background::parse_value::{{closure}}%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2708" font-family="Helvetica, Arial, sans-serif" x="1130" y="723.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2709" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">servo_arc::HeaderWithLength&lt;H&gt;::new</tspan></text></a><a id="SvgjsA2713" href="data:text/plain,core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2711" font-family="Helvetica, Arial, sans-serif" x="1130" y="727.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2712" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;</tspan></text></a><a id="SvgjsA2716" href="data:text/plain,&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2714" font-family="Helvetica, Arial, sans-serif" x="1130" y="730.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2715" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add</tspan></text></a><a id="SvgjsA2719" href="data:text/plain,style::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2717" font-family="Helvetica, Arial, sans-serif" x="1130" y="734.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2718" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::letter_spacing::parse_declared</tspan></text></a><a id="SvgjsA2722" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2720" font-family="Helvetica, Arial, sans-serif" x="1130" y="737.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2721" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2725" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2723" font-family="Helvetica, Arial, sans-serif" x="1130" y="743.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2724" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2728" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2726" font-family="Helvetica, Arial, sans-serif" x="1130" y="750.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2727" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2731" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2729" font-family="Helvetica, Arial, sans-serif" x="1130" y="753.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2730" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2734" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2732" font-family="Helvetica, Arial, sans-serif" x="1130" y="757.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2733" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2737" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2735" font-family="Helvetica, Arial, sans-serif" x="1130" y="760.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2736" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2740" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2738" font-family="Helvetica, Arial, sans-serif" x="1130" y="765.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2739" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2743" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2741" font-family="Helvetica, Arial, sans-serif" x="1130" y="776.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2742" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2746" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2744" font-family="Helvetica, Arial, sans-serif" x="1130" y="781.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2745" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2749" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2747" font-family="Helvetica, Arial, sans-serif" x="1130" y="784.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2748" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2752" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2750" font-family="Helvetica, Arial, sans-serif" x="1130" y="790.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2751" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2755" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2753" font-family="Helvetica, Arial, sans-serif" x="1130" y="797.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2754" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2758" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2756" font-family="Helvetica, Arial, sans-serif" x="1130" y="800.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2757" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2761" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2759" font-family="Helvetica, Arial, sans-serif" x="1130" y="805.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2760" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2764" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2762" font-family="Helvetica, Arial, sans-serif" x="1130" y="811.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2763" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2767" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2765" font-family="Helvetica, Arial, sans-serif" x="1130" y="814.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2766" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2770" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2768" font-family="Helvetica, Arial, sans-serif" x="1130" y="823.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2769" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2773" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2771" font-family="Helvetica, Arial, sans-serif" x="1130" y="828.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2772" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2776" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2774" font-family="Helvetica, Arial, sans-serif" x="1130" y="833.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2775" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2779" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2777" font-family="Helvetica, Arial, sans-serif" x="1130" y="837.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2778" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2782" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2780" font-family="Helvetica, Arial, sans-serif" x="1130" y="849.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2781" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2785" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2783" font-family="Helvetica, Arial, sans-serif" x="1130" y="854.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2784" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2788" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2786" font-family="Helvetica, Arial, sans-serif" x="1130" y="865.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2787" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2791" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2789" font-family="Helvetica, Arial, sans-serif" x="1130" y="881.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2790" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2794" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2792" font-family="Helvetica, Arial, sans-serif" x="1130" y="896.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2793" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2797" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2795" font-family="Helvetica, Arial, sans-serif" x="1130" y="900.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2796" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA2800" href="data:text/plain,&lt;hashglobe::shim::Shared&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from%0a%0dcore::iter::range::{{impl}}::next&lt;usize&gt;%0a%0dstyle::gecko_bindings::structs::root::__BindgenBitfieldUnit&lt;[u8; 4], u32&gt;::get&lt;[u8; 4],u32&gt;%0a%0dstyle::gecko_string_cache::WeakAtom::is_static%0a%0dstyle::gecko_string_cache::make_handle%0a%0dstyle::gecko_string_cache::{{impl}}::from%0a%0dcore::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2798" font-family="Helvetica, Arial, sans-serif" x="1130" y="903.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2799" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">&lt;hashglobe::shim::Shared&lt;T&gt; as core::convert::From&lt;&amp;mut T&gt;&gt;::from</tspan></text></a><a id="SvgjsA2803" href="data:text/plain,cssparser::tokenizer::{{impl}}::clone%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2801" font-family="Helvetica, Arial, sans-serif" x="1130" y="907.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2802" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::tokenizer::{{impl}}::clone</tspan></text></a><a id="SvgjsA2806" href="data:text/plain,core::num::{{impl}}::wrapping_add%0a%0dcore::iter::traits::iterator::Iterator::position::check::{{closure}}&lt;u8,closure-0&gt;%0a%0dcssparser::tokenizer::{{impl}}::clone%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2804" font-family="Helvetica, Arial, sans-serif" x="1130" y="910.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2805" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::num::{{impl}}::wrapping_add</tspan></text></a><a id="SvgjsA2809" href="data:text/plain,core::ptr::swap_nonoverlapping_one&lt;usize&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;xpcom::refptr::RefPtr&lt;xpcom::interfaces::idl::nsIThread&gt;&gt;&gt;%0a%0dstyle::properties::PropertyDeclaration::parse_into%0a%0dcore::num::{{impl}}::wrapping_add%0a%0dcore::iter::traits::iterator::Iterator::position::check::{{closure}}&lt;u8,closure-0&gt;%0a%0dcssparser::tokenizer::{{impl}}::clone%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2807" font-family="Helvetica, Arial, sans-serif" x="1130" y="914.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2808" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::swap_nonoverlapping_one&lt;usize&gt;</tspan></text></a><a id="SvgjsA2812" href="data:text/plain,cssparser::parser::Parser::expect_ident%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2810" font-family="Helvetica, Arial, sans-serif" x="1130" y="917.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2811" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::parser::Parser::expect_ident</tspan></text></a><a id="SvgjsA2815" href="data:text/plain,selectors::parser::SelectorParsingState::allows_non_functional_pseudo_classes%0a%0dselectors::parser::Selector&lt;style::gecko::selector_parser::SelectorImpl&gt;::has_pseudo_element&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dselectors::parser::parse_selector%0a%0dcssparser::parser::Parser::expect_ident%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2813" font-family="Helvetica, Arial, sans-serif" x="1130" y="921.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2814" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">selectors::parser::SelectorParsingState::allows_non_functional_pseudo_classes</tspan></text></a><a id="SvgjsA2818" href="data:text/plain,selectors::parser::parse_qualified_name%0a%0dselectors::parser::SelectorParsingState::allows_non_functional_pseudo_classes%0a%0dselectors::parser::Selector&lt;style::gecko::selector_parser::SelectorImpl&gt;::has_pseudo_element&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dselectors::parser::parse_selector%0a%0dcssparser::parser::Parser::expect_ident%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2816" font-family="Helvetica, Arial, sans-serif" x="1130" y="924.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2817" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">selectors::parser::parse_qualified_name</tspan></text></a><a id="SvgjsA2821" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2819" font-family="Helvetica, Arial, sans-serif" x="1130" y="928.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2820" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2824" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2822" font-family="Helvetica, Arial, sans-serif" x="1130" y="933.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2823" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2827" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2825" font-family="Helvetica, Arial, sans-serif" x="1130" y="940.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2826" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2830" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2828" font-family="Helvetica, Arial, sans-serif" x="1130" y="945.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2829" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2833" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2831" font-family="Helvetica, Arial, sans-serif" x="1130" y="949.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2832" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2836" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2834" font-family="Helvetica, Arial, sans-serif" x="1130" y="954.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2835" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2839" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2837" font-family="Helvetica, Arial, sans-serif" x="1130" y="959.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2838" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2842" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2840" font-family="Helvetica, Arial, sans-serif" x="1130" y="962.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2841" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2845" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2843" font-family="Helvetica, Arial, sans-serif" x="1130" y="966.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2844" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2848" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2846" font-family="Helvetica, Arial, sans-serif" x="1130" y="969.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2847" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2851" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2849" font-family="Helvetica, Arial, sans-serif" x="1130" y="975.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2850" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2854" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2852" font-family="Helvetica, Arial, sans-serif" x="1130" y="978.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2853" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2857" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2855" font-family="Helvetica, Arial, sans-serif" x="1130" y="982.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2856" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2860" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2858" font-family="Helvetica, Arial, sans-serif" x="1130" y="985.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2859" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2863" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2861" font-family="Helvetica, Arial, sans-serif" x="1130" y="989.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2862" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2866" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2864" font-family="Helvetica, Arial, sans-serif" x="1130" y="1008.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2865" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2869" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2867" font-family="Helvetica, Arial, sans-serif" x="1130" y="1011.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2868" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2872" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2870" font-family="Helvetica, Arial, sans-serif" x="1130" y="1020.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2871" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2875" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2873" font-family="Helvetica, Arial, sans-serif" x="1130" y="1027.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2874" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2878" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2876" font-family="Helvetica, Arial, sans-serif" x="1130" y="1034.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2877" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2881" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2879" font-family="Helvetica, Arial, sans-serif" x="1130" y="1037.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2880" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2884" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2882" font-family="Helvetica, Arial, sans-serif" x="1130" y="1044.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2883" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2887" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2885" font-family="Helvetica, Arial, sans-serif" x="1130" y="1048.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2886" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2890" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2888" font-family="Helvetica, Arial, sans-serif" x="1130" y="1060.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2889" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2893" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2891" font-family="Helvetica, Arial, sans-serif" x="1130" y="1064.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2892" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2896" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2894" font-family="Helvetica, Arial, sans-serif" x="1130" y="1067.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2895" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2899" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2897" font-family="Helvetica, Arial, sans-serif" x="1130" y="1074.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2898" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2902" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2900" font-family="Helvetica, Arial, sans-serif" x="1130" y="1078.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2901" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2905" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2903" font-family="Helvetica, Arial, sans-serif" x="1130" y="1090.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2904" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2908" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2906" font-family="Helvetica, Arial, sans-serif" x="1130" y="1095.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2907" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2911" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2909" font-family="Helvetica, Arial, sans-serif" x="1130" y="1102.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2910" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2914" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2912" font-family="Helvetica, Arial, sans-serif" x="1130" y="1106.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2913" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2917" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2915" font-family="Helvetica, Arial, sans-serif" x="1130" y="1109.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2916" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2920" href="data:text/plain,webrender::storage::Index&lt;T&gt;::new%0a%0dcssparser::tokenizer::Tokenizer::has_at_least%0a%0dcssparser::tokenizer::consume_name%0a%0dcssparser::tokenizer::next_token%0a%0dselectors::parser::parse_qualified_name%0a%0dselectors::parser::parse_type_selector%0a%0dselectors::parser::parse_compound_selector%0a%0dalloc::alloc::box_free&lt;xulstore::iter::XULStoreIterator&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::extend%0a%0dcssparser::rules_and_declarations::parse_qualified_rule::{{closure}}&lt;style::stylesheets::rule_parser::NestedRuleParser,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-1,style::stylesheets::CssRule,style_traits::StyleParseErrorKind&gt;%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2918" font-family="Helvetica, Arial, sans-serif" x="1130" y="1116.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2919" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">webrender::storage::Index&lt;T&gt;::new</tspan></text></a><a id="SvgjsA2923" href="data:text/plain,style::media_queries::media_condition::Operator::parse%0a%0djs::ProxyGetProperty(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d0xfdb17158e0%0a%0d[js] onLinkEvent%0a%0dJS::AutoAssertNoGC::AutoAssertNoGC(JSContext*)%0a%0djs::jit::Linker::newCode(JSContext*, js::jit::CodeKind)%0a%0djs::jit::BaselineCacheIRCompiler::compile(void)%0a%0djs::jit::AttachBaselineCacheIRStub(JSContext*, js::jit::CacheIRWriter const&amp;, js::jit::CacheKind, js::jit::BaselineCacheIRStubKind, JSScript*, js::jit::ICFallbackStub*, bool*)%0a%0djs::jit::TryAttachGetPropStub%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2921" font-family="Helvetica, Arial, sans-serif" x="1130" y="1119.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2922" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::media_queries::media_condition::Operator::parse</tspan></text></a><a id="SvgjsA2926" href="data:text/plain,style::values::specified::color::{{impl}}::parse%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2924" font-family="Helvetica, Arial, sans-serif" x="1130" y="1123.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2925" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::specified::color::{{impl}}::parse</tspan></text></a><a id="SvgjsA2929" href="data:text/plain,cssparser::parser::parse_nested_block%0a%0dstyle::values::specified::color::{{impl}}::parse%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2927" font-family="Helvetica, Arial, sans-serif" x="1130" y="1127.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2928" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::parser::parse_nested_block</tspan></text></a><a id="SvgjsA2932" href="data:text/plain,AddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2930" font-family="Helvetica, Arial, sans-serif" x="1130" y="1130.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2931" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">AddressRadixTree&lt;44&gt;::Get(void*)</tspan></text></a><a id="SvgjsA2935" href="data:text/plain,cssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2933" font-family="Helvetica, Arial, sans-serif" x="1130" y="1133.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2934" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::parser::Parser::next_including_whitespace_and_comments</tspan></text></a><a id="SvgjsA2938" href="data:text/plain,baldrdash::utils::BasicError::new%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2936" font-family="Helvetica, Arial, sans-serif" x="1130" y="1137.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2937" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">baldrdash::utils::BasicError::new</tspan></text></a><a id="SvgjsA2941" href="data:text/plain,AddressRadixTree&lt;44&gt;::Get(void*)%0a%0dreplace_realloc%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2939" font-family="Helvetica, Arial, sans-serif" x="1130" y="1140.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2940" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">AddressRadixTree&lt;44&gt;::Get(void*)</tspan></text></a><a id="SvgjsA2944" href="data:text/plain,servo_arc::ArcUnion&lt;A,B&gt;::new%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::properties::declaration_block::parse_property_declaration_list%0a%0dbaldrdash::utils::BasicError::new%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2942" font-family="Helvetica, Arial, sans-serif" x="1130" y="1144.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2943" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">servo_arc::ArcUnion&lt;A,B&gt;::new</tspan></text></a><a id="SvgjsA2947" href="data:text/plain,core::ptr::real_drop_in_place&lt;core::result::Result&lt;cssparser::tokenizer::Token*, cssparser::parser::BasicParseError&gt;&gt;%0a%0dselectors::parser::parse_one_simple_selector%0a%0dcssparser::tokenizer::Tokenizer::state%0a%0dcssparser::parser::Parser::state%0a%0d&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::bloom::PushedElement&lt;E&gt;::new%0a%0dalloc::vec::Vec&lt;T&gt;::from_raw_parts%0a%0dfallible::try_double_small_vec%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2945" font-family="Helvetica, Arial, sans-serif" x="1130" y="1148.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2946" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::real_drop_in_place&lt;core::result::Result&lt;cssparser::tokenizer::Token*, cssparser::parser::BasicParseError&gt;&gt;</tspan></text></a><a id="SvgjsA2950" href="data:text/plain,core::ptr::real_drop_in_place&lt;cssparser::tokenizer::Token&gt;%0a%0dcssparser::rules_and_declarations::parse_qualified_rule%0a%0dservo_arc::ArcUnion&lt;A,B&gt;::new%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::properties::declaration_block::parse_property_declaration_list%0a%0dbaldrdash::utils::BasicError::new%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2948" font-family="Helvetica, Arial, sans-serif" x="1130" y="1151.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2949" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::real_drop_in_place&lt;cssparser::tokenizer::Token&gt;</tspan></text></a><a id="SvgjsA2953" href="data:text/plain,&lt;core::iter::adapters::Rev&lt;I&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len%0a%0d&lt;selectors::builder::SelectorBuilderIter&lt;Impl&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;cssparser::tokenizer::Token&gt;%0a%0dcssparser::rules_and_declarations::parse_qualified_rule%0a%0dservo_arc::ArcUnion&lt;A,B&gt;::new%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::properties::declaration_block::parse_property_declaration_list%0a%0dbaldrdash::utils::BasicError::new%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2951" font-family="Helvetica, Arial, sans-serif" x="1130" y="1154.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2952" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">&lt;core::iter::adapters::Rev&lt;I&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len</tspan></text></a><a id="SvgjsA2956" href="data:text/plain,cssparser::tokenizer::Tokenizer::byte_at%0a%0dcssparser::tokenizer::consume_name%0a%0dmozilla::PresShell::DoFlushPendingNotifications(mozilla::ChangesToFlush)%0a%0dhashglobe::table::FullBucket&lt;K,V,M&gt;::displacement%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::ptr::write&lt;usize&gt;%0a%0d&lt;style::invalidation::element::invalidation_map::CompoundSelectorDependencyCollector as selectors::visitor::SelectorVisitor&gt;::visit_simple_selector%0a%0d&lt;selectors::parser::Component&lt;Impl&gt; as selectors::visitor::Visit&gt;::visit%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2954" font-family="Helvetica, Arial, sans-serif" x="1130" y="1158.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2955" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::tokenizer::Tokenizer::byte_at</tspan></text></a><a id="SvgjsA2959" href="data:text/plain,_security_check_cookie%0a%0dMaybePageAlloc%0a%0dreplace_malloc%0a%0dcssparser::tokenizer::is_ident_start%0a%0dcssparser::tokenizer::consume_numeric%0a%0d&lt;style::values::specified::color::ColorComponentParser as cssparser::color::ColorComponentParser&gt;::parse_number_or_percentage%0a%0dcssparser::color::parse_color_function&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::color::{{impl}}::parse_with::{{closure}}&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_nested_block%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::color::Color::parse_with%0a%0dstyle::values::specified::color::{{impl}}::parse::{{closure}}%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2957" font-family="Helvetica, Arial, sans-serif" x="1130" y="1162.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2958" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">_security_check_cookie</tspan></text></a><a id="SvgjsA2962" href="data:text/plain,core::result::Result&lt;style::values::specified::length::LengthPercentage, ()&gt;::map_err&lt;style::values::specified::length::LengthPercentage,(),cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;,closure-0&gt;%0a%0dstyle::values::specified::length::LengthPercentage::parse_internal%0a%0dstyle::values::specified::length::LengthPercentage::parse_non_negative_quirky%0a%0dstyle::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;::parse_quirky%0a%0dstyle::values::specified::length::&lt;impl style::values::generics::length::GenericSize&lt;style::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;&gt;&gt;::parse_quirky%0a%0dstyle::properties::longhands::width::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d_security_check_cookie%0a%0dMaybePageAlloc%0a%0dreplace_malloc%0a%0dcssparser::tokenizer::is_ident_start%0a%0dcssparser::tokenizer::consume_numeric%0a%0d&lt;style::values::specified::color::ColorComponentParser as cssparser::color::ColorComponentParser&gt;::parse_number_or_percentage%0a%0dcssparser::color::parse_color_function&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::color::{{impl}}::parse_with::{{closure}}&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_nested_block%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::color::Color::parse_with%0a%0dstyle::values::specified::color::{{impl}}::parse::{{closure}}%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2960" font-family="Helvetica, Arial, sans-serif" x="1130" y="1165.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2961" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::result::Result&lt;style::values::specified::length::LengthPercentage, ()&gt;::map_err&lt;style::values::specified::length::LengthPercentage,(),cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;,closure-0&gt;</tspan></text></a><a id="SvgjsA2965" href="data:text/plain,&lt;arrayvec::Drain&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dcore::ptr::real_drop_in_place&lt;style::properties::SourcePropertyDeclarationDrain&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::extend%0a%0dcore::result::Result&lt;style::values::specified::length::LengthPercentage, ()&gt;::map_err&lt;style::values::specified::length::LengthPercentage,(),cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;,closure-0&gt;%0a%0dstyle::values::specified::length::LengthPercentage::parse_internal%0a%0dstyle::values::specified::length::LengthPercentage::parse_non_negative_quirky%0a%0dstyle::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;::parse_quirky%0a%0dstyle::values::specified::length::&lt;impl style::values::generics::length::GenericSize&lt;style::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;&gt;&gt;::parse_quirky%0a%0dstyle::properties::longhands::width::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d_security_check_cookie%0a%0dMaybePageAlloc%0a%0dreplace_malloc%0a%0dcssparser::tokenizer::is_ident_start%0a%0dcssparser::tokenizer::consume_numeric%0a%0d&lt;style::values::specified::color::ColorComponentParser as cssparser::color::ColorComponentParser&gt;::parse_number_or_percentage%0a%0dcssparser::color::parse_color_function&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::color::{{impl}}::parse_with::{{closure}}&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_nested_block%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::color::Color::parse_with%0a%0dstyle::values::specified::color::{{impl}}::parse::{{closure}}%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2963" font-family="Helvetica, Arial, sans-serif" x="1130" y="1327.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2964" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">&lt;arrayvec::Drain&lt;A&gt; as core::ops::drop::Drop&gt;::drop</tspan></text></a><a id="SvgjsA2968" href="data:text/plain,core::alloc::Layout::from_size_align%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in%0a%0d&lt;arrayvec::Drain&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dcore::ptr::real_drop_in_place&lt;style::properties::SourcePropertyDeclarationDrain&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::extend%0a%0dcore::result::Result&lt;style::values::specified::length::LengthPercentage, ()&gt;::map_err&lt;style::values::specified::length::LengthPercentage,(),cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;,closure-0&gt;%0a%0dstyle::values::specified::length::LengthPercentage::parse_internal%0a%0dstyle::values::specified::length::LengthPercentage::parse_non_negative_quirky%0a%0dstyle::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;::parse_quirky%0a%0dstyle::values::specified::length::&lt;impl style::values::generics::length::GenericSize&lt;style::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;&gt;&gt;::parse_quirky%0a%0dstyle::properties::longhands::width::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d_security_check_cookie%0a%0dMaybePageAlloc%0a%0dreplace_malloc%0a%0dcssparser::tokenizer::is_ident_start%0a%0dcssparser::tokenizer::consume_numeric%0a%0d&lt;style::values::specified::color::ColorComponentParser as cssparser::color::ColorComponentParser&gt;::parse_number_or_percentage%0a%0dcssparser::color::parse_color_function&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::color::{{impl}}::parse_with::{{closure}}&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_nested_block%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::color::Color::parse_with%0a%0dstyle::values::specified::color::{{impl}}::parse::{{closure}}%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2966" font-family="Helvetica, Arial, sans-serif" x="1130" y="1331.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2967" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::alloc::Layout::from_size_align</tspan></text></a><a id="SvgjsA2971" href="data:text/plain,core::slice::{{impl}}::next_back&lt;(selectors::parser::Combinator, usize)&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dcore::alloc::Layout::from_size_align%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in%0a%0d&lt;arrayvec::Drain&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dcore::ptr::real_drop_in_place&lt;style::properties::SourcePropertyDeclarationDrain&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::extend%0a%0dcore::result::Result&lt;style::values::specified::length::LengthPercentage, ()&gt;::map_err&lt;style::values::specified::length::LengthPercentage,(),cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;,closure-0&gt;%0a%0dstyle::values::specified::length::LengthPercentage::parse_internal%0a%0dstyle::values::specified::length::LengthPercentage::parse_non_negative_quirky%0a%0dstyle::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;::parse_quirky%0a%0dstyle::values::specified::length::&lt;impl style::values::generics::length::GenericSize&lt;style::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;&gt;&gt;::parse_quirky%0a%0dstyle::properties::longhands::width::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d_security_check_cookie%0a%0dMaybePageAlloc%0a%0dreplace_malloc%0a%0dcssparser::tokenizer::is_ident_start%0a%0dcssparser::tokenizer::consume_numeric%0a%0d&lt;style::values::specified::color::ColorComponentParser as cssparser::color::ColorComponentParser&gt;::parse_number_or_percentage%0a%0dcssparser::color::parse_color_function&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::color::{{impl}}::parse_with::{{closure}}&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_nested_block%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::color::Color::parse_with%0a%0dstyle::values::specified::color::{{impl}}::parse::{{closure}}%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2969" font-family="Helvetica, Arial, sans-serif" x="1130" y="1334.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2970" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::slice::{{impl}}::next_back&lt;(selectors::parser::Combinator, usize)&gt;</tspan></text></a><a id="SvgjsA2974" href="data:text/plain,cssparser::parser::Parser::next%0a%0dselectors::parser::SelectorList&lt;Impl&gt;::parse%0a%0dcore::ptr::{{impl}}::is_null&lt;u8&gt;%0a%0dcore::slice::{{impl}}::next_back&lt;(selectors::parser::Combinator, usize)&gt;%0a%0dsmallvec::{{impl}}::next_back&lt;[(selectors::parser::Combinator, usize); 16]&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0d&lt;style::font_face::FontFaceRuleParser as cssparser::rules_and_declarations::DeclarationParser&gt;::parse_value%0a%0dcssparser::rules_and_declarations::{{impl}}::next::{{closure}}&lt;(),style::font_face::FontFaceRuleParser,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_after%0a%0d&lt;cssparser::rules_and_declarations::DeclarationListParser&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next%0a%0dstyle::font_face::parse_font_face_block%0a%0d&lt;style::stylesheets::rule_parser::NestedRuleParser as cssparser::rules_and_declarations::AtRuleParser&gt;::parse_block%0a%0dstyle::stylesheets::rule_parser::{{impl}}::parse_block%0a%0dcssparser::rules_and_declarations::parse_at_rule::{{closure}}&lt;style::stylesheets::rule_parser::TopLevelRuleParser,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-1,style::stylesheets::CssRule,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_nested_block%0a%0dcssparser::rules_and_declarations::parse_at_rule%0a%0d&lt;cssparser::rules_and_declarations::RuleListParser&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next%0a%0dservo_arc::ArcUnion&lt;A,B&gt;::new%0a%0dcore::iter::range::{{impl}}::add_usize%0a%0dcore::iter::range::{{impl}}::next&lt;usize&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dselectors::parser::parse_selector%0a%0dselectors::parser::SelectorList&lt;Impl&gt;::parse%0a%0dcssparser::parser::Parser::try_parse&lt;closure-0,style::values::specified::font::AbsoluteFontWeight,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;closure-0,style::values::specified::font::AbsoluteFontWeight,cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dstyle::values::specified::font::{{impl}}::parse%0a%0dstyle::properties::longhands::font_weight::parse%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0d&lt;style::properties::declaration_block::PropertyDeclarationParser as cssparser::rules_and_declarations::DeclarationParser&gt;::parse_value%0a%0dcssparser::rules_and_declarations::{{impl}}::next::{{closure}}&lt;style::properties::declaration_block::Importance,style::properties::declaration_block::PropertyDeclarationParser,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::declaration_block::Importance,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;closure-0,style::properties::declaration_block::Importance,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_after%0a%0d&lt;cssparser::rules_and_declarations::DeclarationListParser&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next%0a%0dstyle::properties::declaration_block::parse_property_declaration_list%0a%0d&lt;style::stylesheets::rule_parser::NestedRuleParser as cssparser::rules_and_declarations::QualifiedRuleParser&gt;::parse_block%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::properties::declaration_block::PropertyDeclarationBlock&gt;&gt;::new&lt;style::shared_lock::Locked&lt;style::properties::declaration_block::PropertyDeclarationBlock&gt;&gt;%0a%0d&lt;style::stylesheets::rule_parser::NestedRuleParser as cssparser::rules_and_declarations::QualifiedRuleParser&gt;::parse_block%0a%0dstyle::stylesheets::rule_parser::{{impl}}::parse_block%0a%0dcssparser::rules_and_declarations::parse_qualified_rule::{{closure}}&lt;style::stylesheets::rule_parser::TopLevelRuleParser,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-1,style::stylesheets::CssRule,style_traits::StyleParseErrorKind&gt;%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2972" font-family="Helvetica, Arial, sans-serif" x="1130" y="1338.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2973" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::parser::Parser::next</tspan></text></a><a id="SvgjsA2977" href="data:text/plain,memcpy()%0a%0d&lt;arrayvec::Drain&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dcore::ptr::real_drop_in_place&lt;style::properties::SourcePropertyDeclarationDrain&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::extend%0a%0dcore::result::Result&lt;style::values::specified::length::LengthPercentage, ()&gt;::map_err&lt;style::values::specified::length::LengthPercentage,(),cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;,closure-0&gt;%0a%0dstyle::values::specified::length::LengthPercentage::parse_internal%0a%0dstyle::values::specified::length::LengthPercentage::parse_non_negative_quirky%0a%0dstyle::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;::parse_quirky%0a%0dstyle::values::specified::length::&lt;impl style::values::generics::length::GenericSize&lt;style::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;&gt;&gt;::parse_quirky%0a%0dstyle::properties::longhands::width::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d_security_check_cookie%0a%0dMaybePageAlloc%0a%0dreplace_malloc%0a%0dcssparser::tokenizer::is_ident_start%0a%0dcssparser::tokenizer::consume_numeric%0a%0d&lt;style::values::specified::color::ColorComponentParser as cssparser::color::ColorComponentParser&gt;::parse_number_or_percentage%0a%0dcssparser::color::parse_color_function&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::color::{{impl}}::parse_with::{{closure}}&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_nested_block%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::color::Color::parse_with%0a%0dstyle::values::specified::color::{{impl}}::parse::{{closure}}%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2975" font-family="Helvetica, Arial, sans-serif" x="1130" y="1341.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2976" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA2980" href="data:text/plain,cssparser::tokenizer::Tokenizer::reset%0a%0dcssparser::parser::Parser::reset%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,(),cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0dcssparser::parser::Parser::try&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,(),cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;%0a%0d&lt;style::values::specified::box_::Display as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::display::parse%0a%0dstyle::properties::longhands::display::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dmemcpy()%0a%0d&lt;arrayvec::Drain&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dcore::ptr::real_drop_in_place&lt;style::properties::SourcePropertyDeclarationDrain&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::extend%0a%0dcore::result::Result&lt;style::values::specified::length::LengthPercentage, ()&gt;::map_err&lt;style::values::specified::length::LengthPercentage,(),cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;,closure-0&gt;%0a%0dstyle::values::specified::length::LengthPercentage::parse_internal%0a%0dstyle::values::specified::length::LengthPercentage::parse_non_negative_quirky%0a%0dstyle::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;::parse_quirky%0a%0dstyle::values::specified::length::&lt;impl style::values::generics::length::GenericSize&lt;style::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;&gt;&gt;::parse_quirky%0a%0dstyle::properties::longhands::width::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d_security_check_cookie%0a%0dMaybePageAlloc%0a%0dreplace_malloc%0a%0dcssparser::tokenizer::is_ident_start%0a%0dcssparser::tokenizer::consume_numeric%0a%0d&lt;style::values::specified::color::ColorComponentParser as cssparser::color::ColorComponentParser&gt;::parse_number_or_percentage%0a%0dcssparser::color::parse_color_function&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::color::{{impl}}::parse_with::{{closure}}&lt;style::values::specified::color::ColorComponentParser&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_nested_block%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,cssparser::color::Color,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::color::Color::parse_with%0a%0dstyle::values::specified::color::{{impl}}::parse::{{closure}}%0a%0dmozilla::DllServices::NotifyDllLoad(mozilla::glue::EnhancedModuleLoadInfo&amp;&amp;)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2978" font-family="Helvetica, Arial, sans-serif" x="1130" y="1345.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2979" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">cssparser::tokenizer::Tokenizer::reset</tspan></text></a><a id="SvgjsA2983" href="data:text/plain,&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2981" font-family="Helvetica, Arial, sans-serif" x="1130" y="1348.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2982" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add</tspan></text></a><a id="SvgjsA2986" href="data:text/plain,replace_realloc%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0d_rg_realloc%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2984" font-family="Helvetica, Arial, sans-serif" x="1130" y="1352.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2985" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">replace_realloc</tspan></text></a><a id="SvgjsA2989" href="data:text/plain,webrender::storage::Index&lt;T&gt;::new%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::properties::declaration_block::PropertyDeclarationBlock&gt;&gt;::new&lt;style::shared_lock::Locked&lt;style::properties::declaration_block::PropertyDeclarationBlock&gt;&gt;%0a%0d&lt;style::stylesheets::rule_parser::NestedRuleParser as cssparser::rules_and_declarations::QualifiedRuleParser&gt;::parse_block%0a%0dstyle::stylesheets::rule_parser::{{impl}}::parse_block%0a%0dcssparser::rules_and_declarations::parse_qualified_rule::{{closure}}&lt;style::stylesheets::rule_parser::TopLevelRuleParser,style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-1,style::stylesheets::CssRule,style_traits::StyleParseErrorKind&gt;%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText2987" font-family="Helvetica, Arial, sans-serif" x="1130" y="1355.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2988" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">webrender::storage::Index&lt;T&gt;::new</tspan></text></a><a id="SvgjsA2992" href="data:text/plain,selectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2990" font-family="Helvetica, Arial, sans-serif" x="1130" y="1359.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2991" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">selectors::parser::parse_qualified_name</tspan></text></a><a id="SvgjsA2995" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2993" font-family="Helvetica, Arial, sans-serif" x="1130" y="1362.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2994" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA2998" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2996" font-family="Helvetica, Arial, sans-serif" x="1130" y="1366.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2997" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3001" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2999" font-family="Helvetica, Arial, sans-serif" x="1130" y="1374.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3000" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3004" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3002" font-family="Helvetica, Arial, sans-serif" x="1130" y="1378.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3003" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3007" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3005" font-family="Helvetica, Arial, sans-serif" x="1130" y="1381.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3006" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3010" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3008" font-family="Helvetica, Arial, sans-serif" x="1130" y="1388.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3009" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3013" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3011" font-family="Helvetica, Arial, sans-serif" x="1130" y="1400.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3012" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3016" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3014" font-family="Helvetica, Arial, sans-serif" x="1130" y="1406.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3015" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3019" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3017" font-family="Helvetica, Arial, sans-serif" x="1130" y="1415.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3018" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3022" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3020" font-family="Helvetica, Arial, sans-serif" x="1130" y="1418.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3021" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3025" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3023" font-family="Helvetica, Arial, sans-serif" x="1130" y="1425.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3024" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3028" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3026" font-family="Helvetica, Arial, sans-serif" x="1130" y="1428.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3027" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3031" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3029" font-family="Helvetica, Arial, sans-serif" x="1130" y="1432.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3030" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3034" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3032" font-family="Helvetica, Arial, sans-serif" x="1130" y="1437.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3033" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3037" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3035" font-family="Helvetica, Arial, sans-serif" x="1130" y="1444.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3036" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3040" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3038" font-family="Helvetica, Arial, sans-serif" x="1130" y="1449.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3039" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3043" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3041" font-family="Helvetica, Arial, sans-serif" x="1130" y="1455.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3042" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3046" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3044" font-family="Helvetica, Arial, sans-serif" x="1130" y="1462.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3045" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3049" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3047" font-family="Helvetica, Arial, sans-serif" x="1130" y="1470.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3048" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3052" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3050" font-family="Helvetica, Arial, sans-serif" x="1130" y="1474.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3051" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3055" href="data:text/plain,style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3053" font-family="Helvetica, Arial, sans-serif" x="1130" y="1481.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3054" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;</tspan></text></a><a id="SvgjsA3058" href="data:text/plain,core::ptr::real_drop_in_place&lt;core::result::Result&lt;(), cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;&gt;%0a%0dstyle::properties::PropertyDeclaration::parse_into%0a%0dstyle::values::generics::svg::{{impl}}::parse&lt;style::values::specified::color::Color,style::gecko::url::CssUrl&gt;%0a%0d&lt;style::values::generics::svg::GenericSVGPaint&lt;C,U&gt; as style::parser::Parse&gt;::parse%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3056" font-family="Helvetica, Arial, sans-serif" x="1130" y="1493.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3057" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::real_drop_in_place&lt;core::result::Result&lt;(), cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;&gt;</tspan></text></a><a id="SvgjsA3061" href="data:text/plain,thin_vec::ThinVec&lt;T&gt;::header_mut%0a%0dservo_arc::{{impl}}::clone&lt;style::shared_lock::Locked&lt;style::font_face::FontFaceRuleData&gt;&gt;%0a%0dstyle::properties::longhands::fill::parse%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3059" font-family="Helvetica, Arial, sans-serif" x="1130" y="1496.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3060" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">thin_vec::ThinVec&lt;T&gt;::header_mut</tspan></text></a><a id="SvgjsA3064" href="data:text/plain,core::mem::take&lt;core::option::Option&lt;cssparser::parser::BlockType&gt;&gt;%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3062" font-family="Helvetica, Arial, sans-serif" x="1130" y="1500.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3063" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::mem::take&lt;core::option::Option&lt;cssparser::parser::BlockType&gt;&gt;</tspan></text></a><a id="SvgjsA3067" href="data:text/plain,core::mem::replace&lt;core::option::Option&lt;cssparser::parser::BlockType&gt;&gt;%0a%0dstyle::properties::PropertyDeclaration::parse_into%0a%0dcore::mem::take&lt;core::option::Option&lt;cssparser::parser::BlockType&gt;&gt;%0a%0dstyle::properties::longhands::fill::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0dselectors::parser::parse_qualified_name%0a%0dcore::slice::{{impl}}::iter&lt;alloc::vec::Vec&lt;u8&gt;&gt;%0a%0dselectors::builder::{{impl}}::next::{{closure}}&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dcore::option::Option&lt;(selectors::parser::Combinator, usize)&gt;::map&lt;(selectors::parser::Combinator, usize),selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0&gt;%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;, slice&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;&gt;&gt;::from_header_and_iter_alloc&lt;servo_arc::HeaderWithLength&lt;selectors::builder::SpecificityAndFlags&gt;,selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;,closure-0,selectors::builder::SelectorBuilderIter&lt;style::gecko::selector_parser::SelectorImpl&gt;&gt;%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;::push&lt;style::values::specified::position::PositionComponent&lt;style::values::specified::position::HorizontalPositionKeyword&gt;&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::values::computed::font::SingleFontFamily, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::values::computed::font::SingleFontFamily,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::values::specified::font::FontFamily::parse_specified%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dcssparser::parser::Parser::next_including_whitespace_and_comments%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3065" font-family="Helvetica, Arial, sans-serif" x="1130" y="1503.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3066" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::mem::replace&lt;core::option::Option&lt;cssparser::parser::BlockType&gt;&gt;</tspan></text></a><a id="SvgjsA3070" href="data:text/plain,&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3068" font-family="Helvetica, Arial, sans-serif" x="1130" y="1507.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3069" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add</tspan></text></a><a id="SvgjsA3073" href="data:text/plain,alloc::vec::Vec&lt;style::stylesheets::keyframes_rule::KeyframePercentage&gt;::push&lt;style::stylesheets::keyframes_rule::KeyframePercentage&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;style::stylesheets::keyframes_rule::KeyframePercentage, cssparser::parser::ParseError&lt;style_traits::StyleParseErrorKind&gt;&gt;,style::stylesheets::keyframes_rule::KeyframePercentage,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::stylesheets::keyframes_rule::KeyframeSelector::parse%0a%0d&lt;style::stylesheets::keyframes_rule::KeyframeListParser as cssparser::rules_and_declarations::QualifiedRuleParser&gt;::parse_prelude%0a%0dcssparser::rules_and_declarations::parse_qualified_rule::{{closure}}&lt;style::stylesheets::keyframes_rule::KeyframeListParser,style_traits::StyleParseErrorKind&gt;%0a%0dcore::ops::function::FnOnce::call_once&lt;closure-0,(mut cssparser::parser::Parser*)&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::stylesheets::keyframes_rule::KeyframeSelector,style_traits::StyleParseErrorKind&gt;%0a%0dnsTArray_base&lt;nsTArrayInfallibleAllocator, nsTArray_CopyWithMemutils&gt;::SwapArrayElements&lt;nsTArrayInfallibleAllocator, nsTArrayInfallibleAllocator&gt;(nsTArray_base&lt;nsTArrayInfallibleAllocator, nsTArray_CopyWithMemutils&gt;&amp;, uint64_t, uint64_t)%0a%0dmozilla::CycleCollectedJSContext::CleanupIDBTransactions(unsigned int)%0a%0dmozilla::CycleCollectedJSContext::AfterProcessMicrotasks(void)%0a%0dmozilla::CycleCollectedJSContext::PerformMicroTaskCheckPoint(bool)%0a%0dmozilla::CycleCollectedJSContext::AfterProcessTask(unsigned int)%0a%0dXPCJSContext::AfterProcessTask(unsigned int)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsTSubstring&lt;char&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char&gt;::SetLength(unsigned int, std::nothrow_t const&amp;)%0a%0dmozilla::net::nsStandardURL::BuildNormalizedSpec(char const*, mozilla::Encoding const*)%0a%0dmozilla::net::nsStandardURL::BuildNormalizedSpec(char const*, mozilla::Encoding const*)%0a%0dmozilla::StyleCssUrl::GetURI(void)%0a%0dmozilla::dom::FontFaceSet::FindOrCreateUserFontEntryFromFontFace(nsTSubstring&lt;char&gt; const&amp;, mozilla::dom::FontFace*, mozilla::StyleOrigin)%0a%0dmozilla::dom::FontFaceSet::InsertRuleFontFace(mozilla::dom::FontFace*, mozilla::StyleOrigin, nsTArray&lt;mozilla::dom::FontFaceSet::FontFaceRecord&gt;&amp;, bool&amp;)%0a%0dmozilla::dom::FontFaceSet::UpdateRules(nsTArray&lt;nsFontFaceRuleContainer&gt; const&amp;)%0a%0dmozilla::dom::Document::FlushUserFontSet(void)%0a%0dmozilla::PresShell::DoFlushPendingNotifications(mozilla::ChangesToFlush)%0a%0dhashglobe::table::FullBucket&lt;K,V,M&gt;::displacement%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::ptr::write&lt;usize&gt;%0a%0d&lt;style::invalidation::element::invalidation_map::CompoundSelectorDependencyCollector as selectors::visitor::SelectorVisitor&gt;::visit_simple_selector%0a%0d&lt;selectors::parser::Component&lt;Impl&gt; as selectors::visitor::Visit&gt;::visit%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3071" font-family="Helvetica, Arial, sans-serif" x="1130" y="1510.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3072" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">alloc::vec::Vec&lt;style::stylesheets::keyframes_rule::KeyframePercentage&gt;::push&lt;style::stylesheets::keyframes_rule::KeyframePercentage&gt;</tspan></text></a><a id="SvgjsA3076" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3074" font-family="Helvetica, Arial, sans-serif" x="1130" y="1514.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3075" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3079" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3077" font-family="Helvetica, Arial, sans-serif" x="1130" y="1521.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3078" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3082" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3080" font-family="Helvetica, Arial, sans-serif" x="1130" y="1533.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3081" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3085" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3083" font-family="Helvetica, Arial, sans-serif" x="1130" y="1545.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3084" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3088" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3086" font-family="Helvetica, Arial, sans-serif" x="1130" y="1557.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3087" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3091" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3089" font-family="Helvetica, Arial, sans-serif" x="1130" y="1566.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3090" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3094" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3092" font-family="Helvetica, Arial, sans-serif" x="1130" y="1575.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3093" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3097" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3095" font-family="Helvetica, Arial, sans-serif" x="1130" y="1578.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3096" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3100" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3098" font-family="Helvetica, Arial, sans-serif" x="1130" y="1585.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3099" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3103" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3101" font-family="Helvetica, Arial, sans-serif" x="1130" y="1591.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3102" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3106" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3104" font-family="Helvetica, Arial, sans-serif" x="1130" y="1598.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3105" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3109" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3107" font-family="Helvetica, Arial, sans-serif" x="1130" y="1610.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3108" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3112" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3110" font-family="Helvetica, Arial, sans-serif" x="1130" y="1615.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3111" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3115" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3113" font-family="Helvetica, Arial, sans-serif" x="1130" y="1620.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3114" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3118" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3116" font-family="Helvetica, Arial, sans-serif" x="1130" y="1627.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3117" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3121" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dmozilla::Vector&lt;js::wasm::Val, 0, js::SystemAllocPolicy&gt;::growStorageBy(uint64_t)%0a%0dmozilla::net::nsIOService::URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dNS_URIChainHasFlags(nsIURI*, unsigned int, bool*)%0a%0dnsScriptSecurityManager::CheckLoadURIWithPrincipal(nsIPrincipal*, nsIURI*, unsigned int, uint64_t)%0a%0dnsScriptSecurityManager::CheckLoadURIStrWithPrincipal(nsIPrincipal*, nsTSubstring&lt;char&gt; const&amp;, unsigned int)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)"><text id="SvgjsText3119" font-family="Helvetica, Arial, sans-serif" x="1130" y="1631.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3120" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA3124" href="data:text/plain,&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::time::Time&gt;::push&lt;style::values::specified::time::Time&gt;%0a%0dstyle::properties::shorthands::animation::parse_value%0a%0dstyle::properties::shorthands::animation::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::animation::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::animation::parse_into%0a%0dencoding_rs::utf_8::convert_utf16_to_utf8_partial_inner%0a%0dhashglobe::table::FullBucket&lt;K,V,M&gt;::displacement%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::ptr::write&lt;usize&gt;%0a%0d&lt;style::invalidation::element::invalidation_map::CompoundSelectorDependencyCollector as selectors::visitor::SelectorVisitor&gt;::visit_simple_selector%0a%0d&lt;selectors::parser::Component&lt;Impl&gt; as selectors::visitor::Visit&gt;::visit%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3122" font-family="Helvetica, Arial, sans-serif" x="1130" y="1636.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3123" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop</tspan></text></a><a id="SvgjsA3127" href="data:text/plain,NtFreeVirtualMemory%0a%0dResidentUniqueDistinguishedAmount%0a%0dNtQueryVirtualMemory%0a%0dK32QueryWorkingSet%0a%0dResidentUniqueDistinguishedAmount%0a%0dnsMemoryReporterManager::ResidentUnique(void)%0a%0dmozilla::ScriptPreloader::FinishContentStartup(void)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3125" font-family="Helvetica, Arial, sans-serif" x="1130" y="1640.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3126" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">NtFreeVirtualMemory</tspan></text></a><a id="SvgjsA3130" href="data:text/plain,smallvec::SmallVec&lt;A&gt;::set_len%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dmozilla::css::Loader::LoadInlineStyle(nsIStyleSheetLinkingElement::SheetInfo const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, unsigned int, nsICSSLoaderObserver*)%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::time::Time&gt;::push&lt;style::values::specified::time::Time&gt;%0a%0dstyle::properties::shorthands::animation::parse_value%0a%0dstyle::properties::shorthands::animation::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::animation::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::animation::parse_into%0a%0dencoding_rs::utf_8::convert_utf16_to_utf8_partial_inner%0a%0dhashglobe::table::FullBucket&lt;K,V,M&gt;::displacement%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::ptr::write&lt;usize&gt;%0a%0d&lt;style::invalidation::element::invalidation_map::CompoundSelectorDependencyCollector as selectors::visitor::SelectorVisitor&gt;::visit_simple_selector%0a%0d&lt;selectors::parser::Component&lt;Impl&gt; as selectors::visitor::Visit&gt;::visit%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3128" font-family="Helvetica, Arial, sans-serif" x="1130" y="1643.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3129" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">smallvec::SmallVec&lt;A&gt;::set_len</tspan></text></a><a id="SvgjsA3133" href="data:text/plain,smallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::spilled&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::SmallVec&lt;[style::custom_properties::substitute_all::VarInfo; 5]&gt;::triple&lt;[style::custom_properties::substitute_all::VarInfo; 5]&gt;%0a%0dsmallvec::{{impl}}::deref&lt;[style::custom_properties::substitute_all::VarInfo; 5]&gt;%0a%0dsmallvec::{{impl}}::next&lt;[style::gecko_string_cache::Atom; 5]&gt;%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;A&gt;::set_len%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dmozilla::css::Loader::LoadInlineStyle(nsIStyleSheetLinkingElement::SheetInfo const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, unsigned int, nsICSSLoaderObserver*)%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::time::Time&gt;::push&lt;style::values::specified::time::Time&gt;%0a%0dstyle::properties::shorthands::animation::parse_value%0a%0dstyle::properties::shorthands::animation::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::animation::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::animation::parse_into%0a%0dencoding_rs::utf_8::convert_utf16_to_utf8_partial_inner%0a%0dhashglobe::table::FullBucket&lt;K,V,M&gt;::displacement%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::ptr::write&lt;usize&gt;%0a%0d&lt;style::invalidation::element::invalidation_map::CompoundSelectorDependencyCollector as selectors::visitor::SelectorVisitor&gt;::visit_simple_selector%0a%0d&lt;selectors::parser::Component&lt;Impl&gt; as selectors::visitor::Visit&gt;::visit%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3131" font-family="Helvetica, Arial, sans-serif" x="1130" y="1647.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3132" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">smallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::spilled&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;</tspan></text></a><a id="SvgjsA3136" href="data:text/plain,style::gecko_string_cache::namespace::{{impl}}::default%0a%0d&lt;selectors::parser::Component&lt;Impl&gt; as selectors::visitor::Visit&gt;::visit%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::spilled&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::SmallVec&lt;[style::custom_properties::substitute_all::VarInfo; 5]&gt;::triple&lt;[style::custom_properties::substitute_all::VarInfo; 5]&gt;%0a%0dsmallvec::{{impl}}::deref&lt;[style::custom_properties::substitute_all::VarInfo; 5]&gt;%0a%0dsmallvec::{{impl}}::next&lt;[style::gecko_string_cache::Atom; 5]&gt;%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;A&gt;::set_len%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dmozilla::css::Loader::LoadInlineStyle(nsIStyleSheetLinkingElement::SheetInfo const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, unsigned int, nsICSSLoaderObserver*)%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal%0a%0dalloc::raw_vec::RawVec&lt;T,A&gt;::reserve%0a%0dalloc::vec::Vec&lt;style::values::specified::time::Time&gt;::push&lt;style::values::specified::time::Time&gt;%0a%0dstyle::properties::shorthands::animation::parse_value%0a%0dstyle::properties::shorthands::animation::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::animation::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::animation::parse_into%0a%0dencoding_rs::utf_8::convert_utf16_to_utf8_partial_inner%0a%0dhashglobe::table::FullBucket&lt;K,V,M&gt;::displacement%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::ptr::write&lt;usize&gt;%0a%0d&lt;style::invalidation::element::invalidation_map::CompoundSelectorDependencyCollector as selectors::visitor::SelectorVisitor&gt;::visit_simple_selector%0a%0d&lt;selectors::parser::Component&lt;Impl&gt; as selectors::visitor::Visit&gt;::visit%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3134" font-family="Helvetica, Arial, sans-serif" x="1130" y="1650.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3135" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::gecko_string_cache::namespace::{{impl}}::default</tspan></text></a><a id="SvgjsA3139" href="data:text/plain,core::intrinsics::copy_nonoverlapping&lt;usize&gt;%0a%0dstyle::gecko_string_cache::WeakAtom::is_empty%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3137" font-family="Helvetica, Arial, sans-serif" x="1130" y="1653.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3138" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::intrinsics::copy_nonoverlapping&lt;usize&gt;</tspan></text></a><a id="SvgjsA3142" href="data:text/plain,smallvec::SmallVec&lt;[wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;; 1]&gt;::triple_mut&lt;[wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;; 1]&gt;%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::ptr::write&lt;usize&gt;%0a%0d&lt;style::invalidation::element::invalidation_map::CompoundSelectorDependencyCollector as selectors::visitor::SelectorVisitor&gt;::visit_simple_selector%0a%0d&lt;selectors::parser::Component&lt;Impl&gt; as selectors::visitor::Visit&gt;::visit%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3140" font-family="Helvetica, Arial, sans-serif" x="1130" y="1657.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3141" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">smallvec::SmallVec&lt;[wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;; 1]&gt;::triple_mut&lt;[wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;; 1]&gt;</tspan></text></a><a id="SvgjsA3145" href="data:text/plain,hashglobe::table::Bucket&lt;K,V,M&gt;::peek%0a%0dstyle::gecko_bindings::structs::root::__BindgenBitfieldUnit&lt;[u8; 4], u32&gt;::get&lt;[u8; 4],u32&gt;%0a%0dstyle::gecko_string_cache::WeakAtom::is_empty%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3143" font-family="Helvetica, Arial, sans-serif" x="1130" y="1660.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3144" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">hashglobe::table::Bucket&lt;K,V,M&gt;::peek</tspan></text></a><a id="SvgjsA3148" href="data:text/plain,hashglobe::table::FullBucket&lt;K,V,M&gt;::displacement%0a%0dhashglobe::table::Bucket&lt;K,V,M&gt;::peek%0a%0dstyle::gecko_bindings::structs::root::__BindgenBitfieldUnit&lt;[u8; 4], u32&gt;::get&lt;[u8; 4],u32&gt;%0a%0dstyle::gecko_string_cache::WeakAtom::is_empty%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3146" font-family="Helvetica, Arial, sans-serif" x="1130" y="1664.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3147" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">hashglobe::table::FullBucket&lt;K,V,M&gt;::displacement</tspan></text></a><a id="SvgjsA3151" href="data:text/plain,style::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dhashglobe::table::FullBucket&lt;K,V,M&gt;::displacement%0a%0dhashglobe::table::Bucket&lt;K,V,M&gt;::peek%0a%0dstyle::gecko_bindings::structs::root::__BindgenBitfieldUnit&lt;[u8; 4], u32&gt;::get&lt;[u8; 4],u32&gt;%0a%0dstyle::gecko_string_cache::WeakAtom::is_empty%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3149" font-family="Helvetica, Arial, sans-serif" x="1130" y="1667.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3150" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">style::invalidation::element::invalidation_map::InvalidationMap::note_selector</tspan></text></a><a id="SvgjsA3154" href="data:text/plain,AddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3152" font-family="Helvetica, Arial, sans-serif" x="1130" y="1671.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3153" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">AddressRadixTree&lt;44&gt;::Get(void*)</tspan></text></a><a id="SvgjsA3157" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3155" font-family="Helvetica, Arial, sans-serif" x="1130" y="1674.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3156" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3160" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3158" font-family="Helvetica, Arial, sans-serif" x="1130" y="1680.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3159" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3163" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3161" font-family="Helvetica, Arial, sans-serif" x="1130" y="1683.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3162" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3166" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3164" font-family="Helvetica, Arial, sans-serif" x="1130" y="1690.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3165" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3169" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3167" font-family="Helvetica, Arial, sans-serif" x="1130" y="1694.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3168" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3172" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3170" font-family="Helvetica, Arial, sans-serif" x="1130" y="1697.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3171" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3175" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3173" font-family="Helvetica, Arial, sans-serif" x="1130" y="1702.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3174" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3178" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3176" font-family="Helvetica, Arial, sans-serif" x="1130" y="1716.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3177" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3181" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3179" font-family="Helvetica, Arial, sans-serif" x="1130" y="1720.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3180" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3184" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3182" font-family="Helvetica, Arial, sans-serif" x="1130" y="1732.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3183" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3187" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3185" font-family="Helvetica, Arial, sans-serif" x="1130" y="1736.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3186" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3190" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3188" font-family="Helvetica, Arial, sans-serif" x="1130" y="1741.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3189" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3193" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3191" font-family="Helvetica, Arial, sans-serif" x="1130" y="1744.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3192" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3196" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3194" font-family="Helvetica, Arial, sans-serif" x="1130" y="1751.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3195" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3199" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3197" font-family="Helvetica, Arial, sans-serif" x="1130" y="1755.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3198" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3202" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3200" font-family="Helvetica, Arial, sans-serif" x="1130" y="1762.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3201" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3205" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3203" font-family="Helvetica, Arial, sans-serif" x="1130" y="1765.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3204" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3208" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3206" font-family="Helvetica, Arial, sans-serif" x="1130" y="1769.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3207" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3211" href="data:text/plain,core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;%0a%0dalloc::vec::Vec&lt;style::properties::PropertyDeclaration&gt;::push&lt;style::properties::PropertyDeclaration&gt;%0a%0dstyle::properties::declaration_block::PropertyDeclarationBlock::push%0a%0dstyle::properties::longhands::letter_spacing::parse_declared%0a%0dstyle::properties::LonghandId::parse_value%0a%0d&lt;webrender::render_backend::FrameId as core::ops::arith::Add&lt;usize&gt;&gt;::add%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;u8&gt;,usize,closure-0,core::iter::LoopState&lt;usize, usize&gt;&gt;%0a%0dstyle::properties::{{impl}}::parse_unchecked::static_id%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_ok&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcore::result::Result&lt;(), cssparser::parser::BasicParseError&gt;::is_err&lt;(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::try_parse&lt;fn(mut cssparser::parser::Parser*) -&gt; core::result::Result&lt;(), cssparser::parser::BasicParseError&gt;,(),cssparser::parser::BasicParseError&gt;%0a%0dcssparser::parser::Parser::parse_entirely&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::parse_until_before%0a%0dcssparser::parser::Parser::parse_until_before&lt;mut closure-0*,(),style_traits::StyleParseErrorKind&gt;%0a%0dcssparser::parser::Parser::parse_comma_separated&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_value%0a%0dstyle::properties::shorthands::background::parse_into::{{closure}}%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,style::properties::shorthands::background::Longhands,style_traits::StyleParseErrorKind&gt;%0a%0dstyle::properties::shorthands::background::parse_into%0a%0dstyle::properties::ShorthandId::parse_into%0a%0dalloc::raw_vec::RawVec&lt;T&gt;::into_box%0a%0dservo_arc::Arc&lt;servo_arc::HeaderSlice&lt;servo_arc::HeaderWithLength&lt;u64&gt;, slice&lt;style::values::CustomIdent&gt;&gt;&gt;::allocate_buffer&lt;servo_arc::HeaderWithLength&lt;u64&gt;,style::values::CustomIdent,usize&gt;%0a%0dnsTSubstring&lt;char16_t&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsTSubstring&lt;char16_t&gt;::Append(char16_t const*, unsigned int, std::nothrow_t const&amp;)%0a%0dnsTextFormatter::StringStuff(nsTextFormatter::SprintfStateStr*, char16_t const*, unsigned int)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3209" font-family="Helvetica, Arial, sans-serif" x="1130" y="1772.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3210" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::write&lt;(alloc::vec::Vec&lt;u8&gt;, i16)&gt;</tspan></text></a><a id="SvgjsA3214" href="data:text/plain,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;::push&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::intrinsics::copy_nonoverlapping&lt;usize&gt;%0a%0dstyle::gecko_string_cache::WeakAtom::is_empty%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3212" font-family="Helvetica, Arial, sans-serif" x="1130" y="1795.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3213" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;::push&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;</tspan></text></a><a id="SvgjsA3217" href="data:text/plain,core::ptr::{{impl}}::offset&lt;fluent_langneg_ffi::LangIdString*&gt;%0a%0dhashglobe::table::FullBucket&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;, mut hashglobe::table::RawTable&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*&gt;::hash&lt;style::gecko_string_cache::namespace::Namespace,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,mut hashglobe::table::RawTable&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*&gt;%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;A&gt;::grow%0a%0d&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::bloom::PushedElement&lt;E&gt;::new%0a%0dalloc::vec::Vec&lt;T&gt;::from_raw_parts%0a%0dfallible::try_double_small_vec%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3215" font-family="Helvetica, Arial, sans-serif" x="1130" y="1798.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3216" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::{{impl}}::offset&lt;fluent_langneg_ffi::LangIdString*&gt;</tspan></text></a><a id="SvgjsA3220" href="data:text/plain,core::option::Option&lt;hashglobe::hash_map::Entry&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;&gt;::expect&lt;hashglobe::hash_map::Entry&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;&gt;%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dcore::ptr::{{impl}}::offset&lt;fluent_langneg_ffi::LangIdString*&gt;%0a%0dhashglobe::table::FullBucket&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;, mut hashglobe::table::RawTable&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*&gt;::hash&lt;style::gecko_string_cache::namespace::Namespace,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,mut hashglobe::table::RawTable&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*&gt;%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;A&gt;::grow%0a%0d&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::bloom::PushedElement&lt;E&gt;::new%0a%0dalloc::vec::Vec&lt;T&gt;::from_raw_parts%0a%0dfallible::try_double_small_vec%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3218" font-family="Helvetica, Arial, sans-serif" x="1130" y="1802.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3219" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::option::Option&lt;hashglobe::hash_map::Entry&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;&gt;::expect&lt;hashglobe::hash_map::Entry&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;&gt;</tspan></text></a><a id="SvgjsA3223" href="data:text/plain,hashbrown::scopeguard::guard%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::option::Option&lt;hashglobe::hash_map::Entry&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;&gt;::expect&lt;hashglobe::hash_map::Entry&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;&gt;%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dcore::ptr::{{impl}}::offset&lt;fluent_langneg_ffi::LangIdString*&gt;%0a%0dhashglobe::table::FullBucket&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;, mut hashglobe::table::RawTable&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*&gt;::hash&lt;style::gecko_string_cache::namespace::Namespace,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,mut hashglobe::table::RawTable&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*&gt;%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;A&gt;::grow%0a%0d&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::bloom::PushedElement&lt;E&gt;::new%0a%0dalloc::vec::Vec&lt;T&gt;::from_raw_parts%0a%0dfallible::try_double_small_vec%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3221" font-family="Helvetica, Arial, sans-serif" x="1130" y="1805.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3222" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">hashbrown::scopeguard::guard</tspan></text></a><a id="SvgjsA3226" href="data:text/plain,hashbrown::scopeguard::guard%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::option::Option&lt;hashglobe::hash_map::Entry&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;&gt;::expect&lt;hashglobe::hash_map::Entry&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;&gt;%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dcore::ptr::{{impl}}::offset&lt;fluent_langneg_ffi::LangIdString*&gt;%0a%0dhashglobe::table::FullBucket&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;, mut hashglobe::table::RawTable&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*&gt;::hash&lt;style::gecko_string_cache::namespace::Namespace,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,mut hashglobe::table::RawTable&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*&gt;%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;A&gt;::grow%0a%0d&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::bloom::PushedElement&lt;E&gt;::new%0a%0dalloc::vec::Vec&lt;T&gt;::from_raw_parts%0a%0dfallible::try_double_small_vec%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3224" font-family="Helvetica, Arial, sans-serif" x="1130" y="1809.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3225" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">hashbrown::scopeguard::guard</tspan></text></a><a id="SvgjsA3229" href="data:text/plain,selectors::parser::SelectorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;::next_sequence&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0d&lt;selectors::parser::AncestorIter&lt;Impl&gt; as core::iter::traits::iterator::Iterator&gt;::next%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;selectors::parser::AncestorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;,(),closure-0,core::iter::LoopState&lt;(), u32&gt;&gt;%0a%0dcore::iter::traits::iterator::Iterator::find_map&lt;selectors::parser::AncestorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;,u32,mut closure-0*&gt;%0a%0dselectors::parser::AncestorHashes::from_iter%0a%0dselectors::parser::AncestorHashes::new%0a%0dstyle::stylist::CascadeData::add_stylesheet%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dhashbrown::scopeguard::guard%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dcore::option::Option&lt;hashglobe::hash_map::Entry&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;&gt;::expect&lt;hashglobe::hash_map::Entry&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;&gt;%0a%0dstyle::selector_map::MaybeCaseInsensitiveHashMap&lt;style::gecko_string_cache::Atom,V&gt;::try_entry%0a%0dcore::ptr::{{impl}}::offset&lt;fluent_langneg_ffi::LangIdString*&gt;%0a%0dhashglobe::table::FullBucket&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;, mut hashglobe::table::RawTable&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*&gt;::hash&lt;style::gecko_string_cache::namespace::Namespace,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,mut hashglobe::table::RawTable&lt;style::gecko_string_cache::namespace::Namespace, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*&gt;%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;A&gt;::grow%0a%0d&lt;smallvec::IntoIter&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::bloom::PushedElement&lt;E&gt;::new%0a%0dalloc::vec::Vec&lt;T&gt;::from_raw_parts%0a%0dfallible::try_double_small_vec%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3227" font-family="Helvetica, Arial, sans-serif" x="1130" y="1812.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3228" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">selectors::parser::SelectorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;::next_sequence&lt;style::gecko::selector_parser::SelectorImpl&gt;</tspan></text></a><a id="SvgjsA3232" href="data:text/plain,hashglobe::table::Bucket&lt;K,V,M&gt;::next%0a%0dhashglobe::table::FullBucket&lt;style::gecko_string_cache::Atom*, (), mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom*, ()&gt;*&gt;::next&lt;style::gecko_string_cache::Atom*,(),mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom*, ()&gt;*&gt;%0a%0dstyle::gecko_bindings::structs::root::__BindgenBitfieldUnit&lt;[u8; 4], u32&gt;::get&lt;[u8; 4],u32&gt;%0a%0dstyle::gecko_string_cache::WeakAtom::is_empty%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3230" font-family="Helvetica, Arial, sans-serif" x="1130" y="1816.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3231" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">hashglobe::table::Bucket&lt;K,V,M&gt;::next</tspan></text></a><a id="SvgjsA3235" href="data:text/plain,hashglobe::table::FullBucket&lt;style::gecko_string_cache::Atom*, (), mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom*, ()&gt;*&gt;::next&lt;style::gecko_string_cache::Atom*,(),mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom*, ()&gt;*&gt;%0a%0dhashglobe::table::Bucket&lt;K,V,M&gt;::next%0a%0dhashglobe::table::FullBucket&lt;style::gecko_string_cache::Atom*, (), mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom*, ()&gt;*&gt;::next&lt;style::gecko_string_cache::Atom*,(),mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom*, ()&gt;*&gt;%0a%0dstyle::gecko_bindings::structs::root::__BindgenBitfieldUnit&lt;[u8; 4], u32&gt;::get&lt;[u8; 4],u32&gt;%0a%0dstyle::gecko_string_cache::WeakAtom::is_empty%0a%0dcore::slice::{{impl}}::next&lt;regex_syntax::hir::ClassBytesRange&gt;%0a%0dencoding_rs::mem::is_utf16_bidi%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dmemcpy()%0a%0darena_t::PallocHuge(uint64_t, uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dnsStringBuffer::Alloc(uint64_t)%0a%0dnsTextFragment::SetTo(char16_t const*, int, bool, bool)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dnsIncrementalStreamLoader::OnStopRequest(nsIRequest*, nsresult)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3233" font-family="Helvetica, Arial, sans-serif" x="1130" y="1819.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3234" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">hashglobe::table::FullBucket&lt;style::gecko_string_cache::Atom*, (), mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom*, ()&gt;*&gt;::next&lt;style::gecko_string_cache::Atom*,(),mut hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom*, ()&gt;*&gt;</tspan></text></a><a id="SvgjsA3238" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3236" font-family="Helvetica, Arial, sans-serif" x="1130" y="1823.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3237" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3241" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3239" font-family="Helvetica, Arial, sans-serif" x="1130" y="1828.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3240" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3244" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3242" font-family="Helvetica, Arial, sans-serif" x="1130" y="1833.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3243" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3247" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3245" font-family="Helvetica, Arial, sans-serif" x="1130" y="1838.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3246" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3250" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3248" font-family="Helvetica, Arial, sans-serif" x="1130" y="1842.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3249" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3253" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3251" font-family="Helvetica, Arial, sans-serif" x="1130" y="1847.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3252" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3256" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3254" font-family="Helvetica, Arial, sans-serif" x="1130" y="1853.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3255" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3259" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3257" font-family="Helvetica, Arial, sans-serif" x="1130" y="1858.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3258" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3262" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3260" font-family="Helvetica, Arial, sans-serif" x="1130" y="1866.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3261" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3265" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3263" font-family="Helvetica, Arial, sans-serif" x="1130" y="1870.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3264" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3268" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3266" font-family="Helvetica, Arial, sans-serif" x="1130" y="1877.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3267" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3271" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3269" font-family="Helvetica, Arial, sans-serif" x="1130" y="1880.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3270" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3274" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3272" font-family="Helvetica, Arial, sans-serif" x="1130" y="1887.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3273" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3277" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3275" font-family="Helvetica, Arial, sans-serif" x="1130" y="1891.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3276" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3280" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3278" font-family="Helvetica, Arial, sans-serif" x="1130" y="1900.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3279" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3283" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3281" font-family="Helvetica, Arial, sans-serif" x="1130" y="1908.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3282" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3286" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3284" font-family="Helvetica, Arial, sans-serif" x="1130" y="1912.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3285" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3289" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3287" font-family="Helvetica, Arial, sans-serif" x="1130" y="1915.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3288" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3292" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3290" font-family="Helvetica, Arial, sans-serif" x="1130" y="1923.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3291" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3295" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3293" font-family="Helvetica, Arial, sans-serif" x="1130" y="1926.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3294" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3298" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3296" font-family="Helvetica, Arial, sans-serif" x="1130" y="1940.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3297" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3301" href="data:text/plain,core::mem::swap&lt;core::option::Option&lt;(wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;&gt;, gfx_backend_dx12::resource::Framebuffer)&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;(wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;&gt;, gfx_backend_dx12::resource::Framebuffer)&gt;&gt;%0a%0dhashglobe::table::FullBucket&lt;K,V,M&gt;::replace%0a%0dhashglobe::hash_map::robin_hood%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3299" font-family="Helvetica, Arial, sans-serif" x="1130" y="1943.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3300" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">core::mem::swap&lt;core::option::Option&lt;(wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;&gt;, gfx_backend_dx12::resource::Framebuffer)&gt;&gt;</tspan></text></a><a id="SvgjsA3304" href="data:text/plain,install_rust_oom_hook%0a%0dselectors::parser::{{impl}}::next&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0d&lt;selectors::parser::AncestorIter&lt;Impl&gt; as core::iter::traits::iterator::Iterator&gt;::next%0a%0dcore::mem::swap&lt;core::option::Option&lt;(wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;&gt;, gfx_backend_dx12::resource::Framebuffer)&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;(wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;&gt;, gfx_backend_dx12::resource::Framebuffer)&gt;&gt;%0a%0dhashglobe::table::FullBucket&lt;K,V,M&gt;::replace%0a%0dhashglobe::hash_map::robin_hood%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0dalloc::alloc::{{impl}}::realloc%0a%0dChromeUtils.idleDispatch%0a%0d[js] sendWhenIdle%0a%0djs::NewObjectWithClassProtoCommon(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0dNewFunctionClone%0a%0djs::CloneFunctionReuseScript(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::gc::AllocKind, js::NewObjectKind, JS::Handle&lt;JSObject*&gt;)%0a%0djs::CloneFunctionObjectIfNotSingleton(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0dsmallvec::{{impl}}::deref_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 5]&gt;%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut%0a%0d&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::invalidation::element::invalidation_map::InvalidationMap::note_selector%0a%0dwebrender::intern::Handle&lt;I&gt;::uid%0a%0dhashglobe::hash_map::VacantEntry&lt;K,V&gt;::insert%0a%0dhashglobe::hash_map::Entry&lt;K,V&gt;::or_insert_with%0a%0dstyle::selector_map::SelectorMap&lt;T&gt;::insert%0a%0djs::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0djs::CreateThisForFunctionWithProto(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0djs::CreateThisForFunction(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] get iconLoader%0a%0dmozJSComponentLoader::Import(JSContext*, nsTSubstring&lt;char&gt; const&amp;, JS::MutableHandle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool)%0a%0dmozilla::detail::RunnableMethodImpl&lt;RefPtr&lt;mozilla::net::WebrtcTCPSocketCallback&gt;, void (mozilla::net::WebrtcTCPSocketCallback::*)(nsTString&lt;char&gt; const&amp;), 1, 0, nsTString&lt;char&gt; &gt;::Run(void)%0a%0dnsRefreshTimer::Release(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3302" font-family="Helvetica, Arial, sans-serif" x="1130" y="1947.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3303" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">install_rust_oom_hook</tspan></text></a><a id="SvgjsA3307" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3305" font-family="Helvetica, Arial, sans-serif" x="1130" y="1950.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3306" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3310" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3308" font-family="Helvetica, Arial, sans-serif" x="1130" y="1955.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3309" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3313" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3311" font-family="Helvetica, Arial, sans-serif" x="1130" y="1959.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3312" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3316" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3314" font-family="Helvetica, Arial, sans-serif" x="1130" y="1962.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3315" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3319" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3317" font-family="Helvetica, Arial, sans-serif" x="1130" y="1968.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3318" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3322" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3320" font-family="Helvetica, Arial, sans-serif" x="1130" y="1971.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3321" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3325" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3323" font-family="Helvetica, Arial, sans-serif" x="1130" y="1975.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3324" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3328" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3326" font-family="Helvetica, Arial, sans-serif" x="1130" y="1982.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3327" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3331" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3329" font-family="Helvetica, Arial, sans-serif" x="1130" y="1990.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3330" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3334" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3332" font-family="Helvetica, Arial, sans-serif" x="1130" y="1996.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3333" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3337" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3335" font-family="Helvetica, Arial, sans-serif" x="1130" y="1999.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3336" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3340" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3338" font-family="Helvetica, Arial, sans-serif" x="1130" y="2002.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3339" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3343" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3341" font-family="Helvetica, Arial, sans-serif" x="1130" y="2013.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3342" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3346" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3344" font-family="Helvetica, Arial, sans-serif" x="1130" y="2025.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3345" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3349" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3347" font-family="Helvetica, Arial, sans-serif" x="1130" y="2029.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3348" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3352" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3350" font-family="Helvetica, Arial, sans-serif" x="1130" y="2041.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3351" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3355" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dnsContentSink::NotifyDocElementCreated(mozilla::dom::Document*)%0a%0dnsDocElementCreatedNotificationRunner::Run(void)%0a%0dmozilla::dom::Document::EndUpdate(void)%0a%0dnsHtml5TreeOpExecutor::PauseDocUpdate(bool*)%0a%0dnsHtml5TreeOperation::Perform(nsHtml5TreeOpExecutor*, nsIContent**, bool*, bool*)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop(void)%0a%0dnsHtml5TreeOpExecutor::RunFlushLoop%0a%0dnsHtml5ExecutorFlusher::Run(void)%0a%0dXPCWrappedNative::InitTearOff(JSContext*, XPCWrappedNativeTearOff*, XPCNativeInterface*, bool)%0a%0dXPCWrappedNative::FindTearOff(JSContext*, XPCNativeInterface*, bool, nsresult*)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dnsObserverService::NotifyObservers inner-window-destroyed%0a%0dmozilla::WindowDestroyedEvent::Run(void)%0a%0dWindowDestroyedEvent::Run%0a%0dnsViewSourceChannel::AddRef(void)%0a%0dnsCOMPtr_base::assign_with_AddRef(nsISupports*)%0a%0dNewStandardURI%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0dNS_NewURI(nsIURI**, nsTSubstring&lt;char16_t&gt; const&amp;, char const*, nsIURI*)%0a%0dmozilla::dom::PerformanceResourceTiming::PerformanceResourceTiming(mozilla::UniquePtr&lt;mozilla::dom::PerformanceTimingData, mozilla::DefaultDelete&lt;mozilla::dom::PerformanceTimingData&gt; &gt;&amp;&amp;, mozilla::dom::Performance*, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::dom::PerformanceMainThread::CreateNavigationTimingEntry(void)%0a%0dmozilla::dom::PerformanceMainThread::PerformanceMainThread(nsPIDOMWindowInner*, nsDOMNavigationTiming*, nsITimedChannel*, bool)%0a%0dmozilla::dom::Performance::CreateForMainThread(nsPIDOMWindowInner*, nsIPrincipal*, nsDOMNavigationTiming*, nsITimedChannel*)%0a%0dnsPIDOMWindowInner::CreatePerformanceObjectIfNeeded(void)%0a%0dnsPIDOMWindowInner::GetPerformance(void)%0a%0dmozilla::dom::Window_Binding::get_performance%0a%0dget Window.performance%0a%0dmozilla::dom::Window_Binding::ClearCachedPerformanceValue(JSContext*, nsGlobalWindowInner*)%0a%0dnsGlobalWindowInner::InitDocumentDependentState(JSContext*)%0a%0dnsGlobalWindowOuter::SetNewDocument(mozilla::dom::Document*, nsISupports*, bool, mozilla::dom::WindowGlobalChild*)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0djs::NewMaybeExternalString(JSContext*, char16_t const*, uint64_t, JSExternalStringCallbacks const*, bool*)%0a%0dXPCStringConvert::ReadableToJSVal(JSContext*, nsTSubstring&lt;char16_t&gt; const&amp;, nsStringBuffer**, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::NonVoidStringToJsval(JSContext*, nsTSubstring&lt;char16_t&gt;&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::ChromeUtils::DefineModuleGetter(mozilla::dom::GlobalObject const&amp;, JS::Handle&lt;JSObject*&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ChromeUtils_Binding::defineModuleGetter%0a%0dChromeUtils.defineModuleGetter%0a%0dresource:///actors/AboutReaderChild.jsm%0a%0dExecuteInExtensibleLexicalEnvironment%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::StackGCVector&lt;JSObject*, js::TempAllocPolicy&gt; &gt;)%0a%0djs::ExecuteInJSMEnvironment(JSContext*, JS::Handle&lt;JSScript*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch pagehide%0a%0dNS_NewNamedThread(nsTSubstring&lt;char&gt; const&amp;, nsIThread**, nsIRunnable*, unsigned int)%0a%0dnsHtml5Module::GetStreamParserThread(void)%0a%0dnsHtml5StreamParser::nsHtml5StreamParser(nsHtml5TreeOpExecutor*, nsHtml5Parser*, eParserMode)%0a%0dnsHtml5Parser::MarkAsNotScriptCreated(char const*)%0a%0dnsHTMLDocument::StartDocumentLoad(char const*, nsIChannel*, nsILoadGroup*, nsISupports*, nsIStreamListener**, bool, nsIContentSink*)%0a%0dnsContentDLF::CreateInstance(char const*, nsIChannel*, nsILoadGroup*, nsTSubstring&lt;char&gt; const&amp;, nsIDocShell*, nsISupports*, nsIStreamListener**, nsIContentViewer**)%0a%0dnsDocShell::CreateContentViewer(nsTSubstring&lt;char&gt; const&amp;, nsIRequest*, nsIStreamListener**)%0a%0dnsDSURIContentListener::DoContent(nsTSubstring&lt;char&gt; const&amp;, bool, nsIRequest*, nsIStreamListener**, bool*)%0a%0dnsDocumentOpenInfo::TryContentListener(nsIURIContentListener*, nsIChannel*)%0a%0dnsDocumentOpenInfo::DispatchContent(nsIRequest*, nsISupports*)%0a%0dnsDocumentOpenInfo::OnStartRequest(nsIRequest*)%0a%0dmozilla::ScriptPreloader::Observe(nsISupports*, char const*, char16_t const*)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::GetEvent(bool, mozilla::EventQueuePriority*, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt;*)%0a%0dThreadEventQueue::GetEvent::Wait%0a%0dNS_ProcessNextEvent(nsIThread*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dnsBaseAppShell::Run(void)%0a%0dnsAppShell::Run(void)%0a%0dXRE_RunAppShell(void)%0a%0dMessageLoop::RunHandler(void)%0a%0dMessageLoop::Run(void)%0a%0dXRE_InitChildProcess(int, char** const, XREChildData const*)%0a%0dXRE_InitChildProcess%0a%0dNS_internal_main(int, char**, char**)%0a%0dwmain%0a%0d_scrt_common_main_seh%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3353" font-family="Helvetica, Arial, sans-serif" x="1130" y="2057.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3354" dy="6.5" x="1130" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a></svg>