<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" width="1536" height="2485"><svg id="SvgjsSvg1001" width="2" height="0" focusable="false" style="overflow:hidden;top:-100%;left:-100%;position:absolute;opacity:0"><polyline id="SvgjsPolyline1002" points="0,0"></polyline><path id="SvgjsPath1003" d="M0 0 "></path></svg><line id="SvgjsLine1005" x1="153" y1="20" x2="153" y2="2485" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1006" font-family="Helvetica, Arial, sans-serif" x="59.59375" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1007" dy="20.8" x="59.59375" svgjs:data="{&quot;newLined&quot;:true}">Web Content/GeckoMain</tspan></text><line id="SvgjsLine1008" x1="460" y1="20" x2="460" y2="2485" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1009" font-family="Helvetica, Arial, sans-serif" x="371.3671875" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1010" dy="20.8" x="371.3671875" svgjs:data="{&quot;newLined&quot;:true}">Web Content/IO Sender</tspan></text><line id="SvgjsLine1011" x1="768" y1="20" x2="768" y2="2485" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1012" font-family="Helvetica, Arial, sans-serif" x="667.33203125" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1013" dy="20.8" x="667.33203125" svgjs:data="{&quot;newLined&quot;:true}">Parent Process/IO Receiver</tspan></text><line id="SvgjsLine1014" x1="1075" y1="20" x2="1075" y2="2485" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1015" font-family="Helvetica, Arial, sans-serif" x="974.62890625" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1016" dy="20.8" x="974.62890625" svgjs:data="{&quot;newLined&quot;:true}">Parent Process/GeckoMain</tspan></text><line id="SvgjsLine1017" x1="1382" y1="20" x2="1382" y2="2485" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1018" font-family="Helvetica, Arial, sans-serif" x="1295.94140625" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1019" dy="20.8" x="1295.94140625" svgjs:data="{&quot;newLined&quot;:true}">Parent Process/119444</tspan></text><line id="SvgjsLine1020" x1="614" y1="0" x2="614" y2="2485" stroke-dasharray="2,2" stroke="#ffb080" stroke-width="2"></line><text id="SvgjsText1021" font-family="Helvetica, Arial, sans-serif" x="33" y="31.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1022" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 0 ms</tspan></text><line id="SvgjsLine1023" x1="153" y1="40" x2="1382" y2="40" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1024" font-family="Helvetica, Arial, sans-serif" x="33" y="55.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1025" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 20 ms</tspan></text><line id="SvgjsLine1026" x1="153" y1="64" x2="1382" y2="64" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1027" font-family="Helvetica, Arial, sans-serif" x="33" y="79.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1028" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 40.01 ms</tspan></text><line id="SvgjsLine1029" x1="153" y1="88" x2="1382" y2="88" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1030" font-family="Helvetica, Arial, sans-serif" x="33" y="104.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1031" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 60.02 ms</tspan></text><line id="SvgjsLine1032" x1="153" y1="113" x2="1382" y2="113" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1033" font-family="Helvetica, Arial, sans-serif" x="33" y="128.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1034" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 80.03 ms</tspan></text><line id="SvgjsLine1035" x1="153" y1="137" x2="1382" y2="137" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1036" font-family="Helvetica, Arial, sans-serif" x="33" y="153.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1037" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 100.03 ms</tspan></text><line id="SvgjsLine1038" x1="153" y1="162" x2="1382" y2="162" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1039" font-family="Helvetica, Arial, sans-serif" x="33" y="177.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1040" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 120.04 ms</tspan></text><line id="SvgjsLine1041" x1="153" y1="186" x2="1382" y2="186" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1042" font-family="Helvetica, Arial, sans-serif" x="33" y="202.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1043" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 140.05 ms</tspan></text><line id="SvgjsLine1044" x1="153" y1="211" x2="1382" y2="211" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1045" font-family="Helvetica, Arial, sans-serif" x="33" y="226.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1046" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 160.06 ms</tspan></text><line id="SvgjsLine1047" x1="153" y1="235" x2="1382" y2="235" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1048" font-family="Helvetica, Arial, sans-serif" x="33" y="251.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1049" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 180.06 ms</tspan></text><line id="SvgjsLine1050" x1="153" y1="260" x2="1382" y2="260" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1051" font-family="Helvetica, Arial, sans-serif" x="33" y="275.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1052" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 200.07 ms</tspan></text><line id="SvgjsLine1053" x1="153" y1="284" x2="1382" y2="284" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1054" font-family="Helvetica, Arial, sans-serif" x="33" y="299.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1055" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 220.08 ms</tspan></text><line id="SvgjsLine1056" x1="153" y1="308" x2="1382" y2="308" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1057" font-family="Helvetica, Arial, sans-serif" x="33" y="324.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1058" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 240.09 ms</tspan></text><line id="SvgjsLine1059" x1="153" y1="333" x2="1382" y2="333" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1060" font-family="Helvetica, Arial, sans-serif" x="33" y="348.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1061" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 260.09 ms</tspan></text><line id="SvgjsLine1062" x1="153" y1="357" x2="1382" y2="357" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1063" font-family="Helvetica, Arial, sans-serif" x="33" y="373.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1064" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 280.1 ms</tspan></text><line id="SvgjsLine1065" x1="153" y1="382" x2="1382" y2="382" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1066" font-family="Helvetica, Arial, sans-serif" x="33" y="397.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1067" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 300.11 ms</tspan></text><line id="SvgjsLine1068" x1="153" y1="406" x2="1382" y2="406" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1069" font-family="Helvetica, Arial, sans-serif" x="33" y="422.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1070" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 320.12 ms</tspan></text><line id="SvgjsLine1071" x1="153" y1="431" x2="1382" y2="431" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1072" font-family="Helvetica, Arial, sans-serif" x="33" y="446.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1073" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 340.12 ms</tspan></text><line id="SvgjsLine1074" x1="153" y1="455" x2="1382" y2="455" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1075" font-family="Helvetica, Arial, sans-serif" x="33" y="471.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1076" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 360.13 ms</tspan></text><line id="SvgjsLine1077" x1="153" y1="480" x2="1382" y2="480" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1078" font-family="Helvetica, Arial, sans-serif" x="33" y="495.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1079" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 380.14 ms</tspan></text><line id="SvgjsLine1080" x1="153" y1="504" x2="1382" y2="504" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1081" font-family="Helvetica, Arial, sans-serif" x="33" y="519.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1082" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 400.15 ms</tspan></text><line id="SvgjsLine1083" x1="153" y1="528" x2="1382" y2="528" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1084" font-family="Helvetica, Arial, sans-serif" x="33" y="544.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1085" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 420.15 ms</tspan></text><line id="SvgjsLine1086" x1="153" y1="553" x2="1382" y2="553" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1087" font-family="Helvetica, Arial, sans-serif" x="33" y="568.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1088" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 440.16 ms</tspan></text><line id="SvgjsLine1089" x1="153" y1="577" x2="1382" y2="577" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1090" font-family="Helvetica, Arial, sans-serif" x="33" y="593.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1091" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 460.17 ms</tspan></text><line id="SvgjsLine1092" x1="153" y1="602" x2="1382" y2="602" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1093" font-family="Helvetica, Arial, sans-serif" x="33" y="617.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1094" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 480.18 ms</tspan></text><line id="SvgjsLine1095" x1="153" y1="626" x2="1382" y2="626" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1096" font-family="Helvetica, Arial, sans-serif" x="33" y="642.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1097" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 500.18 ms</tspan></text><line id="SvgjsLine1098" x1="153" y1="651" x2="1382" y2="651" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1099" font-family="Helvetica, Arial, sans-serif" x="33" y="666.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1100" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 520.19 ms</tspan></text><line id="SvgjsLine1101" x1="153" y1="675" x2="1382" y2="675" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1102" font-family="Helvetica, Arial, sans-serif" x="33" y="691.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1103" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 540.2 ms</tspan></text><line id="SvgjsLine1104" x1="153" y1="700" x2="1382" y2="700" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1105" font-family="Helvetica, Arial, sans-serif" x="33" y="715.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1106" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 560.21 ms</tspan></text><line id="SvgjsLine1107" x1="153" y1="724" x2="1382" y2="724" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1108" font-family="Helvetica, Arial, sans-serif" x="33" y="740.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1109" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 580.21 ms</tspan></text><line id="SvgjsLine1110" x1="153" y1="749" x2="1382" y2="749" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1111" font-family="Helvetica, Arial, sans-serif" x="33" y="764.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1112" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 600.22 ms</tspan></text><line id="SvgjsLine1113" x1="153" y1="773" x2="1382" y2="773" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1114" font-family="Helvetica, Arial, sans-serif" x="33" y="788.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1115" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 620.23 ms</tspan></text><line id="SvgjsLine1116" x1="153" y1="797" x2="1382" y2="797" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1117" font-family="Helvetica, Arial, sans-serif" x="33" y="813.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1118" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 640.24 ms</tspan></text><line id="SvgjsLine1119" x1="153" y1="822" x2="1382" y2="822" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1120" font-family="Helvetica, Arial, sans-serif" x="33" y="837.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1121" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 660.24 ms</tspan></text><line id="SvgjsLine1122" x1="153" y1="846" x2="1382" y2="846" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1123" font-family="Helvetica, Arial, sans-serif" x="33" y="862.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1124" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 680.25 ms</tspan></text><line id="SvgjsLine1125" x1="153" y1="871" x2="1382" y2="871" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1126" font-family="Helvetica, Arial, sans-serif" x="33" y="886.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1127" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 700.26 ms</tspan></text><line id="SvgjsLine1128" x1="153" y1="895" x2="1382" y2="895" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1129" font-family="Helvetica, Arial, sans-serif" x="33" y="911.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1130" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 720.27 ms</tspan></text><line id="SvgjsLine1131" x1="153" y1="920" x2="1382" y2="920" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1132" font-family="Helvetica, Arial, sans-serif" x="33" y="935.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1133" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 740.27 ms</tspan></text><line id="SvgjsLine1134" x1="153" y1="944" x2="1382" y2="944" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1135" font-family="Helvetica, Arial, sans-serif" x="33" y="960.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1136" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 760.28 ms</tspan></text><line id="SvgjsLine1137" x1="153" y1="969" x2="1382" y2="969" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1138" font-family="Helvetica, Arial, sans-serif" x="33" y="984.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1139" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 780.29 ms</tspan></text><line id="SvgjsLine1140" x1="153" y1="993" x2="1382" y2="993" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1141" font-family="Helvetica, Arial, sans-serif" x="33" y="1009.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1142" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 800.3 ms</tspan></text><line id="SvgjsLine1143" x1="153" y1="1018" x2="1382" y2="1018" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1144" font-family="Helvetica, Arial, sans-serif" x="33" y="1033.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1145" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 820.3 ms</tspan></text><line id="SvgjsLine1146" x1="153" y1="1042" x2="1382" y2="1042" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1147" font-family="Helvetica, Arial, sans-serif" x="33" y="1057.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1148" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 840.31 ms</tspan></text><line id="SvgjsLine1149" x1="153" y1="1066" x2="1382" y2="1066" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1150" font-family="Helvetica, Arial, sans-serif" x="33" y="1082.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1151" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 860.32 ms</tspan></text><line id="SvgjsLine1152" x1="153" y1="1091" x2="1382" y2="1091" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1153" font-family="Helvetica, Arial, sans-serif" x="33" y="1106.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1154" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 880.33 ms</tspan></text><line id="SvgjsLine1155" x1="153" y1="1115" x2="1382" y2="1115" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1156" font-family="Helvetica, Arial, sans-serif" x="33" y="1131.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1157" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 900.33 ms</tspan></text><line id="SvgjsLine1158" x1="153" y1="1140" x2="1382" y2="1140" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1159" font-family="Helvetica, Arial, sans-serif" x="33" y="1155.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1160" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 920.34 ms</tspan></text><line id="SvgjsLine1161" x1="153" y1="1164" x2="1382" y2="1164" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1162" font-family="Helvetica, Arial, sans-serif" x="33" y="1180.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1163" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 940.35 ms</tspan></text><line id="SvgjsLine1164" x1="153" y1="1189" x2="1382" y2="1189" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1165" font-family="Helvetica, Arial, sans-serif" x="33" y="1204.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1166" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 960.36 ms</tspan></text><line id="SvgjsLine1167" x1="153" y1="1213" x2="1382" y2="1213" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1168" font-family="Helvetica, Arial, sans-serif" x="33" y="1229.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1169" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 980.36 ms</tspan></text><line id="SvgjsLine1170" x1="153" y1="1238" x2="1382" y2="1238" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1171" font-family="Helvetica, Arial, sans-serif" x="33" y="1253.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1172" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1000.37 ms</tspan></text><line id="SvgjsLine1173" x1="153" y1="1262" x2="1382" y2="1262" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1174" font-family="Helvetica, Arial, sans-serif" x="33" y="1277.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1175" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1020.38 ms</tspan></text><line id="SvgjsLine1176" x1="153" y1="1286" x2="1382" y2="1286" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1177" font-family="Helvetica, Arial, sans-serif" x="33" y="1302.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1178" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1040.39 ms</tspan></text><line id="SvgjsLine1179" x1="153" y1="1311" x2="1382" y2="1311" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1180" font-family="Helvetica, Arial, sans-serif" x="33" y="1326.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1181" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1060.39 ms</tspan></text><line id="SvgjsLine1182" x1="153" y1="1335" x2="1382" y2="1335" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1183" font-family="Helvetica, Arial, sans-serif" x="33" y="1351.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1184" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1080.4 ms</tspan></text><line id="SvgjsLine1185" x1="153" y1="1360" x2="1382" y2="1360" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1186" font-family="Helvetica, Arial, sans-serif" x="33" y="1375.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1187" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1100.41 ms</tspan></text><line id="SvgjsLine1188" x1="153" y1="1384" x2="1382" y2="1384" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1189" font-family="Helvetica, Arial, sans-serif" x="33" y="1400.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1190" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1120.42 ms</tspan></text><line id="SvgjsLine1191" x1="153" y1="1409" x2="1382" y2="1409" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1192" font-family="Helvetica, Arial, sans-serif" x="33" y="1424.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1193" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1140.42 ms</tspan></text><line id="SvgjsLine1194" x1="153" y1="1433" x2="1382" y2="1433" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1195" font-family="Helvetica, Arial, sans-serif" x="33" y="1449.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1196" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1160.43 ms</tspan></text><line id="SvgjsLine1197" x1="153" y1="1458" x2="1382" y2="1458" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1198" font-family="Helvetica, Arial, sans-serif" x="33" y="1473.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1199" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1180.44 ms</tspan></text><line id="SvgjsLine1200" x1="153" y1="1482" x2="1382" y2="1482" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1201" font-family="Helvetica, Arial, sans-serif" x="33" y="1498.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1202" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1200.45 ms</tspan></text><line id="SvgjsLine1203" x1="153" y1="1507" x2="1382" y2="1507" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1204" font-family="Helvetica, Arial, sans-serif" x="33" y="1522.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1205" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1220.46 ms</tspan></text><line id="SvgjsLine1206" x1="153" y1="1531" x2="1382" y2="1531" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1207" font-family="Helvetica, Arial, sans-serif" x="33" y="1546.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1208" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1240.46 ms</tspan></text><line id="SvgjsLine1209" x1="153" y1="1555" x2="1382" y2="1555" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1210" font-family="Helvetica, Arial, sans-serif" x="33" y="1571.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1211" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1260.47 ms</tspan></text><line id="SvgjsLine1212" x1="153" y1="1580" x2="1382" y2="1580" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1213" font-family="Helvetica, Arial, sans-serif" x="33" y="1595.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1214" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1280.48 ms</tspan></text><line id="SvgjsLine1215" x1="153" y1="1604" x2="1382" y2="1604" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1216" font-family="Helvetica, Arial, sans-serif" x="33" y="1620.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1217" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1300.49 ms</tspan></text><line id="SvgjsLine1218" x1="153" y1="1629" x2="1382" y2="1629" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1219" font-family="Helvetica, Arial, sans-serif" x="33" y="1644.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1220" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1320.49 ms</tspan></text><line id="SvgjsLine1221" x1="153" y1="1653" x2="1382" y2="1653" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1222" font-family="Helvetica, Arial, sans-serif" x="33" y="1669.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1223" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1340.5 ms</tspan></text><line id="SvgjsLine1224" x1="153" y1="1678" x2="1382" y2="1678" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1225" font-family="Helvetica, Arial, sans-serif" x="33" y="1693.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1226" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1360.51 ms</tspan></text><line id="SvgjsLine1227" x1="153" y1="1702" x2="1382" y2="1702" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1228" font-family="Helvetica, Arial, sans-serif" x="33" y="1718.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1229" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1380.52 ms</tspan></text><line id="SvgjsLine1230" x1="153" y1="1727" x2="1382" y2="1727" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1231" font-family="Helvetica, Arial, sans-serif" x="33" y="1742.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1232" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1400.52 ms</tspan></text><line id="SvgjsLine1233" x1="153" y1="1751" x2="1382" y2="1751" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1234" font-family="Helvetica, Arial, sans-serif" x="33" y="1766.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1235" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1420.53 ms</tspan></text><line id="SvgjsLine1236" x1="153" y1="1775" x2="1382" y2="1775" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1237" font-family="Helvetica, Arial, sans-serif" x="33" y="1791.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1238" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1440.54 ms</tspan></text><line id="SvgjsLine1239" x1="153" y1="1800" x2="1382" y2="1800" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1240" font-family="Helvetica, Arial, sans-serif" x="33" y="1815.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1241" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1460.55 ms</tspan></text><line id="SvgjsLine1242" x1="153" y1="1824" x2="1382" y2="1824" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1243" font-family="Helvetica, Arial, sans-serif" x="33" y="1840.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1244" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1480.55 ms</tspan></text><line id="SvgjsLine1245" x1="153" y1="1849" x2="1382" y2="1849" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1246" font-family="Helvetica, Arial, sans-serif" x="33" y="1864.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1247" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1500.56 ms</tspan></text><line id="SvgjsLine1248" x1="153" y1="1873" x2="1382" y2="1873" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1249" font-family="Helvetica, Arial, sans-serif" x="33" y="1889.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1250" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1520.57 ms</tspan></text><line id="SvgjsLine1251" x1="153" y1="1898" x2="1382" y2="1898" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1252" font-family="Helvetica, Arial, sans-serif" x="33" y="1913.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1253" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1540.58 ms</tspan></text><line id="SvgjsLine1254" x1="153" y1="1922" x2="1382" y2="1922" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1255" font-family="Helvetica, Arial, sans-serif" x="33" y="1938.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1256" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1560.58 ms</tspan></text><line id="SvgjsLine1257" x1="153" y1="1947" x2="1382" y2="1947" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1258" font-family="Helvetica, Arial, sans-serif" x="33" y="1962.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1259" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1580.59 ms</tspan></text><line id="SvgjsLine1260" x1="153" y1="1971" x2="1382" y2="1971" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1261" font-family="Helvetica, Arial, sans-serif" x="33" y="1986.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1262" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1600.6 ms</tspan></text><line id="SvgjsLine1263" x1="153" y1="1995" x2="1382" y2="1995" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1264" font-family="Helvetica, Arial, sans-serif" x="33" y="2011.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1265" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1620.61 ms</tspan></text><line id="SvgjsLine1266" x1="153" y1="2020" x2="1382" y2="2020" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1267" font-family="Helvetica, Arial, sans-serif" x="33" y="2035.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1268" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1640.61 ms</tspan></text><line id="SvgjsLine1269" x1="153" y1="2044" x2="1382" y2="2044" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1270" font-family="Helvetica, Arial, sans-serif" x="33" y="2060.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1271" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1660.62 ms</tspan></text><line id="SvgjsLine1272" x1="153" y1="2069" x2="1382" y2="2069" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1273" font-family="Helvetica, Arial, sans-serif" x="33" y="2084.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1274" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1680.63 ms</tspan></text><line id="SvgjsLine1275" x1="153" y1="2093" x2="1382" y2="2093" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1276" font-family="Helvetica, Arial, sans-serif" x="33" y="2109.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1277" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1700.64 ms</tspan></text><line id="SvgjsLine1278" x1="153" y1="2118" x2="1382" y2="2118" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1279" font-family="Helvetica, Arial, sans-serif" x="33" y="2133.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1280" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1720.64 ms</tspan></text><line id="SvgjsLine1281" x1="153" y1="2142" x2="1382" y2="2142" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1282" font-family="Helvetica, Arial, sans-serif" x="33" y="2158.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1283" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1740.65 ms</tspan></text><line id="SvgjsLine1284" x1="153" y1="2167" x2="1382" y2="2167" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1285" font-family="Helvetica, Arial, sans-serif" x="33" y="2182.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1286" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1760.66 ms</tspan></text><line id="SvgjsLine1287" x1="153" y1="2191" x2="1382" y2="2191" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1288" font-family="Helvetica, Arial, sans-serif" x="33" y="2207.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1289" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1780.67 ms</tspan></text><line id="SvgjsLine1290" x1="153" y1="2216" x2="1382" y2="2216" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1291" font-family="Helvetica, Arial, sans-serif" x="33" y="2231.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1292" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1800.67 ms</tspan></text><line id="SvgjsLine1293" x1="153" y1="2240" x2="1382" y2="2240" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1294" font-family="Helvetica, Arial, sans-serif" x="33" y="2255.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1295" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1820.68 ms</tspan></text><line id="SvgjsLine1296" x1="153" y1="2264" x2="1382" y2="2264" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1297" font-family="Helvetica, Arial, sans-serif" x="33" y="2280.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1298" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1840.69 ms</tspan></text><line id="SvgjsLine1299" x1="153" y1="2289" x2="1382" y2="2289" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1300" font-family="Helvetica, Arial, sans-serif" x="33" y="2304.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1301" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1860.7 ms</tspan></text><line id="SvgjsLine1302" x1="153" y1="2313" x2="1382" y2="2313" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1303" font-family="Helvetica, Arial, sans-serif" x="33" y="2329.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1304" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1880.7 ms</tspan></text><line id="SvgjsLine1305" x1="153" y1="2338" x2="1382" y2="2338" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1306" font-family="Helvetica, Arial, sans-serif" x="33" y="2353.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1307" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1900.71 ms</tspan></text><line id="SvgjsLine1308" x1="153" y1="2362" x2="1382" y2="2362" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1309" font-family="Helvetica, Arial, sans-serif" x="33" y="2378.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1310" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1920.72 ms</tspan></text><line id="SvgjsLine1311" x1="153" y1="2387" x2="1382" y2="2387" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1312" font-family="Helvetica, Arial, sans-serif" x="33" y="2402.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1313" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1940.73 ms</tspan></text><line id="SvgjsLine1314" x1="153" y1="2411" x2="1382" y2="2411" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1315" font-family="Helvetica, Arial, sans-serif" x="33" y="2427.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1316" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1960.73 ms</tspan></text><line id="SvgjsLine1317" x1="153" y1="2436" x2="1382" y2="2436" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1318" font-family="Helvetica, Arial, sans-serif" x="33" y="2451.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1319" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 1980.74 ms</tspan></text><line id="SvgjsLine1320" x1="153" y1="2460" x2="1382" y2="2460" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1321" font-family="Helvetica, Arial, sans-serif" x="33" y="2475.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1322" dy="13" x="33" svgjs:data="{&quot;newLined&quot;:true}">~108 s + 2000.75 ms</tspan></text><line id="SvgjsLine1323" x1="153" y1="2484" x2="1382" y2="2484" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><line id="SvgjsLine1324" x1="153" y1="40" x2="460" y2="40" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1326)"></line><defs id="SvgjsDefs1325"><marker id="SvgjsMarker1326" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1327" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1331" d="M153 25 L460 25"></path><marker id="SvgjsMarker1334" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1335" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1339" d="M460 25 L460 25"></path><marker id="SvgjsMarker1342" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1343" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1347" d="M460 25 L768 25"></path><marker id="SvgjsMarker1350" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1351" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1355" d="M768 25 L1075 444"></path><marker id="SvgjsMarker1358" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1359" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1363" d="M153 25 L460 25"></path><marker id="SvgjsMarker1366" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1367" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1371" d="M460 25 L460 25"></path><marker id="SvgjsMarker1374" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1375" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1379" d="M460 25 L768 25"></path><marker id="SvgjsMarker1382" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1383" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1387" d="M768 25 L1075 444"></path><marker id="SvgjsMarker1390" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1391" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1395" d="M153 34 L460 34"></path><marker id="SvgjsMarker1398" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1399" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1403" d="M460 34 L460 35"></path><marker id="SvgjsMarker1406" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1407" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1411" d="M460 35 L768 35"></path><marker id="SvgjsMarker1414" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1415" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1419" d="M768 35 L1075 444"></path><marker id="SvgjsMarker1422" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1423" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1427" d="M153 95 L460 95"></path><marker id="SvgjsMarker1430" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1431" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1435" d="M460 95 L460 95"></path><marker id="SvgjsMarker1438" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1439" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1443" d="M460 95 L768 95"></path><marker id="SvgjsMarker1446" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1447" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1451" d="M768 95 L1075 447"></path><marker id="SvgjsMarker1454" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1455" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1459" d="M153 96 L460 96"></path><marker id="SvgjsMarker1462" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1463" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1467" d="M460 96 L460 96"></path><marker id="SvgjsMarker1470" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1471" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1475" d="M460 96 L768 96"></path><marker id="SvgjsMarker1478" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1479" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1483" d="M768 96 L1075 448"></path><marker id="SvgjsMarker1486" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1487" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1491" d="M153 96 L460 96"></path><marker id="SvgjsMarker1494" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1495" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1499" d="M460 96 L460 96"></path><marker id="SvgjsMarker1502" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1503" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1507" d="M460 96 L768 96"></path><marker id="SvgjsMarker1510" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1511" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1515" d="M768 96 L1075 448"></path><marker id="SvgjsMarker1518" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1519" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1523" d="M153 274 L460 274"></path><marker id="SvgjsMarker1526" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1527" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1531" d="M460 274 L460 274"></path><marker id="SvgjsMarker1534" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1535" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1539" d="M460 274 L768 274"></path><marker id="SvgjsMarker1542" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1543" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1547" d="M768 274 L1075 461"></path><marker id="SvgjsMarker1550" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1551" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1555" d="M153 274 L460 274"></path><marker id="SvgjsMarker1558" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1559" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1563" d="M460 274 L460 274"></path><marker id="SvgjsMarker1566" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1567" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1571" d="M460 274 L768 274"></path><marker id="SvgjsMarker1574" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1575" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1579" d="M768 274 L1075 461"></path><marker id="SvgjsMarker1582" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1583" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1587" d="M153 274 L460 274"></path><marker id="SvgjsMarker1590" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1591" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1595" d="M460 274 L460 274"></path><marker id="SvgjsMarker1598" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1599" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1603" d="M460 274 L768 274"></path><marker id="SvgjsMarker1606" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1607" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1611" d="M768 274 L1075 461"></path><marker id="SvgjsMarker1614" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1615" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1619" d="M153 619 L460 619"></path><marker id="SvgjsMarker1622" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1623" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1627" d="M460 619 L460 619"></path><marker id="SvgjsMarker1630" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1631" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1635" d="M460 619 L768 655"></path><marker id="SvgjsMarker1638" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1639" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1643" d="M768 655 L1382 663"></path><marker id="SvgjsMarker1646" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1647" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1651" d="M153 699 L460 699"></path><marker id="SvgjsMarker1654" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1655" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1659" d="M460 699 L460 699"></path><marker id="SvgjsMarker1662" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1663" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1667" d="M460 699 L768 2000"></path><marker id="SvgjsMarker1670" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1671" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1675" d="M768 2000 L1382 2001"></path><marker id="SvgjsMarker1678" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1679" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1683" d="M153 2153 L460 2153"></path><marker id="SvgjsMarker1686" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1687" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1691" d="M460 2153 L460 2153"></path><marker id="SvgjsMarker1694" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1695" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1699" d="M460 2153 L768 2153"></path><marker id="SvgjsMarker1702" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1703" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1707" d="M768 2153 L1382 2153"></path><marker id="SvgjsMarker1710" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1711" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1715" d="M153 2166 L460 2166"></path><marker id="SvgjsMarker1718" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1719" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1723" d="M460 2166 L460 2166"></path><marker id="SvgjsMarker1726" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1727" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1731" d="M460 2166 L768 2166"></path><marker id="SvgjsMarker1734" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1735" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1739" d="M768 2166 L1382 2166"></path><marker id="SvgjsMarker1742" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1743" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1747" d="M153 2227 L460 2227"></path><marker id="SvgjsMarker1750" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1751" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1755" d="M460 2227 L460 2227"></path><marker id="SvgjsMarker1758" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1759" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1763" d="M460 2227 L768 2227"></path><marker id="SvgjsMarker1766" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1767" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1771" d="M768 2227 L1382 2227"></path><marker id="SvgjsMarker1774" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1775" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1779" d="M153 2297 L460 2297"></path><marker id="SvgjsMarker1782" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1783" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1787" d="M460 2297 L460 2297"></path><marker id="SvgjsMarker1790" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1791" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1795" d="M460 2297 L768 2297"></path><marker id="SvgjsMarker1798" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1799" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1803" d="M768 2297 L1382 2297"></path><marker id="SvgjsMarker1806" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1807" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1811" d="M153 2297 L460 2297"></path><marker id="SvgjsMarker1814" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1815" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1819" d="M460 2297 L460 2297"></path><marker id="SvgjsMarker1822" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1823" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1827" d="M460 2297 L768 2297"></path><marker id="SvgjsMarker1830" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1831" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1835" d="M768 2297 L1382 2297"></path><marker id="SvgjsMarker1838" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1839" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1843" d="M153 2362 L460 2362"></path><marker id="SvgjsMarker1846" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1847" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1851" d="M460 2362 L460 2362"></path><marker id="SvgjsMarker1854" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1855" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1859" d="M460 2362 L768 2362"></path><marker id="SvgjsMarker1862" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1863" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1867" d="M768 2362 L1382 2362"></path><marker id="SvgjsMarker1870" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1871" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1875" d="M153 2362 L460 2362"></path><marker id="SvgjsMarker1878" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1879" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1883" d="M460 2362 L460 2362"></path><marker id="SvgjsMarker1886" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1887" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1891" d="M460 2362 L768 2362"></path><marker id="SvgjsMarker1894" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1895" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1899" d="M768 2362 L1382 2362"></path><marker id="SvgjsMarker1902" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1903" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1907" d="M153 2427 L460 2427"></path><marker id="SvgjsMarker1910" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1911" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1915" d="M460 2427 L460 2427"></path><marker id="SvgjsMarker1918" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1919" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1923" d="M460 2427 L768 2427"></path><marker id="SvgjsMarker1926" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1927" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1931" d="M768 2427 L1382 2427"></path><marker id="SvgjsMarker1934" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1935" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1939" d="M153 2427 L460 2427"></path><marker id="SvgjsMarker1942" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1943" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1947" d="M460 2427 L460 2427"></path><marker id="SvgjsMarker1950" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1951" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1955" d="M460 2427 L768 2427"></path><marker id="SvgjsMarker1958" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1959" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1963" d="M768 2427 L1382 2427"></path><marker id="SvgjsMarker1966" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1967" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1971" d="M153 2469 L460 2469"></path><marker id="SvgjsMarker1974" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1975" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1979" d="M460 2469 L460 2469"></path><marker id="SvgjsMarker1982" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1983" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1987" d="M460 2469 L768 2469"></path><marker id="SvgjsMarker1990" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1991" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1995" d="M768 2469 L1382 2470"></path></defs><a id="SvgjsA1332" href="plot-ipc-113164-116008-1586822936434-21.html#1"><text id="SvgjsText1328" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1330" href="#SvgjsPath1331"><tspan id="SvgjsTspan1329" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PNecko::Msg_HTMLDNSPrefetch (184)</tspan></textPath></text></a><line id="SvgjsLine1333" x1="460" y1="40" x2="460" y2="40" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1334)"></line><a id="SvgjsA1340" href="plot-ipc-113164-116008-1586822936434-21.html#1"><text id="SvgjsText1336" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1338" href="#SvgjsPath1339"><tspan id="SvgjsTspan1337" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PNecko::Msg_HTMLDNSPrefetch (184)</tspan></textPath></text></a><line id="SvgjsLine1341" x1="460" y1="40" x2="768" y2="40" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1342)"></line><a id="SvgjsA1348" href="plot-ipc-113164-116008-1586822936434-21.html#1"><text id="SvgjsText1344" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1346" href="#SvgjsPath1347"><tspan id="SvgjsTspan1345" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PNecko::Msg_HTMLDNSPrefetch (184)</tspan></textPath></text></a><line id="SvgjsLine1349" x1="768" y1="40" x2="1075" y2="459" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1350)"></line><a id="SvgjsA1356" href="plot-ipc-113164-116008-1586822936434-21.html#1"><text id="SvgjsText1352" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1354" href="#SvgjsPath1355"><tspan id="SvgjsTspan1353" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PNecko::Msg_HTMLDNSPrefetch (184)</tspan></textPath></text></a><line id="SvgjsLine1357" x1="153" y1="40" x2="460" y2="40" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1358)"></line><a id="SvgjsA1364" href="plot-ipc-113164-116008-1586822936434-21.html#2"><text id="SvgjsText1360" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1362" href="#SvgjsPath1363"><tspan id="SvgjsTspan1361" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PNecko::Msg_HTMLDNSPrefetch (196)</tspan></textPath></text></a><line id="SvgjsLine1365" x1="460" y1="40" x2="460" y2="40" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1366)"></line><a id="SvgjsA1372" href="plot-ipc-113164-116008-1586822936434-21.html#2"><text id="SvgjsText1368" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1370" href="#SvgjsPath1371"><tspan id="SvgjsTspan1369" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PNecko::Msg_HTMLDNSPrefetch (196)</tspan></textPath></text></a><line id="SvgjsLine1373" x1="460" y1="40" x2="768" y2="40" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1374)"></line><a id="SvgjsA1380" href="plot-ipc-113164-116008-1586822936434-21.html#2"><text id="SvgjsText1376" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1378" href="#SvgjsPath1379"><tspan id="SvgjsTspan1377" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PNecko::Msg_HTMLDNSPrefetch (196)</tspan></textPath></text></a><line id="SvgjsLine1381" x1="768" y1="40" x2="1075" y2="459" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1382)"></line><a id="SvgjsA1388" href="plot-ipc-113164-116008-1586822936434-21.html#2"><text id="SvgjsText1384" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1386" href="#SvgjsPath1387"><tspan id="SvgjsTspan1385" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PNecko::Msg_HTMLDNSPrefetch (196)</tspan></textPath></text></a><line id="SvgjsLine1389" x1="153" y1="49" x2="460" y2="49" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1390)"></line><a id="SvgjsA1396" href="plot-ipc-113164-116008-1586822936434-21.html#3"><text id="SvgjsText1392" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1394" href="#SvgjsPath1395"><tspan id="SvgjsTspan1393" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PNecko::Msg_PHttpChannelConstructor (7092)</tspan></textPath></text></a><line id="SvgjsLine1397" x1="460" y1="49" x2="460" y2="50" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1398)"></line><a id="SvgjsA1404" href="plot-ipc-113164-116008-1586822936434-21.html#3"><text id="SvgjsText1400" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1402" href="#SvgjsPath1403"><tspan id="SvgjsTspan1401" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PNecko::Msg_PHttpChannelConstructor (7092)</tspan></textPath></text></a><line id="SvgjsLine1405" x1="460" y1="50" x2="768" y2="50" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1406)"></line><a id="SvgjsA1412" href="plot-ipc-113164-116008-1586822936434-21.html#3"><text id="SvgjsText1408" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1410" href="#SvgjsPath1411"><tspan id="SvgjsTspan1409" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PNecko::Msg_PHttpChannelConstructor (7092)</tspan></textPath></text></a><line id="SvgjsLine1413" x1="768" y1="50" x2="1075" y2="459" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1414)"></line><a id="SvgjsA1420" href="plot-ipc-113164-116008-1586822936434-21.html#3"><text id="SvgjsText1416" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1418" href="#SvgjsPath1419"><tspan id="SvgjsTspan1417" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PNecko::Msg_PHttpChannelConstructor (7092)</tspan></textPath></text></a><line id="SvgjsLine1421" x1="153" y1="110" x2="460" y2="110" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1422)"></line><a id="SvgjsA1428" href="plot-ipc-113164-116008-1586822936434-21.html#4"><text id="SvgjsText1424" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1426" href="#SvgjsPath1427"><tspan id="SvgjsTspan1425" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PHttpChannelConstructor (6936)</tspan></textPath></text></a><line id="SvgjsLine1429" x1="460" y1="110" x2="460" y2="110" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1430)"></line><a id="SvgjsA1436" href="plot-ipc-113164-116008-1586822936434-21.html#4"><text id="SvgjsText1432" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1434" href="#SvgjsPath1435"><tspan id="SvgjsTspan1433" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PHttpChannelConstructor (6936)</tspan></textPath></text></a><line id="SvgjsLine1437" x1="460" y1="110" x2="768" y2="110" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1438)"></line><a id="SvgjsA1444" href="plot-ipc-113164-116008-1586822936434-21.html#4"><text id="SvgjsText1440" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1442" href="#SvgjsPath1443"><tspan id="SvgjsTspan1441" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PHttpChannelConstructor (6936)</tspan></textPath></text></a><line id="SvgjsLine1445" x1="768" y1="110" x2="1075" y2="462" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1446)"></line><a id="SvgjsA1452" href="plot-ipc-113164-116008-1586822936434-21.html#4"><text id="SvgjsText1448" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1450" href="#SvgjsPath1451"><tspan id="SvgjsTspan1449" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PHttpChannelConstructor (6936)</tspan></textPath></text></a><line id="SvgjsLine1453" x1="153" y1="111" x2="460" y2="111" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1454)"></line><a id="SvgjsA1460" href="plot-ipc-113164-116008-1586822936434-21.html#5"><text id="SvgjsText1456" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1458" href="#SvgjsPath1459"><tspan id="SvgjsTspan1457" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PNecko::Msg_PredLearn (1244)</tspan></textPath></text></a><line id="SvgjsLine1461" x1="460" y1="111" x2="460" y2="111" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1462)"></line><a id="SvgjsA1468" href="plot-ipc-113164-116008-1586822936434-21.html#5"><text id="SvgjsText1464" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1466" href="#SvgjsPath1467"><tspan id="SvgjsTspan1465" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PNecko::Msg_PredLearn (1244)</tspan></textPath></text></a><line id="SvgjsLine1469" x1="460" y1="111" x2="768" y2="111" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1470)"></line><a id="SvgjsA1476" href="plot-ipc-113164-116008-1586822936434-21.html#5"><text id="SvgjsText1472" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1474" href="#SvgjsPath1475"><tspan id="SvgjsTspan1473" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PNecko::Msg_PredLearn (1244)</tspan></textPath></text></a><line id="SvgjsLine1477" x1="768" y1="111" x2="1075" y2="463" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1478)"></line><a id="SvgjsA1484" href="plot-ipc-113164-116008-1586822936434-21.html#5"><text id="SvgjsText1480" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1482" href="#SvgjsPath1483"><tspan id="SvgjsTspan1481" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PNecko::Msg_PredLearn (1244)</tspan></textPath></text></a><line id="SvgjsLine1485" x1="153" y1="111" x2="460" y2="111" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1486)"></line><a id="SvgjsA1492" href="plot-ipc-113164-116008-1586822936434-21.html#6"><text id="SvgjsText1488" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1490" href="#SvgjsPath1491"><tspan id="SvgjsTspan1489" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PNecko::Msg_PredLearn (1244)</tspan></textPath></text></a><line id="SvgjsLine1493" x1="460" y1="111" x2="460" y2="111" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1494)"></line><a id="SvgjsA1500" href="plot-ipc-113164-116008-1586822936434-21.html#6"><text id="SvgjsText1496" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1498" href="#SvgjsPath1499"><tspan id="SvgjsTspan1497" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PNecko::Msg_PredLearn (1244)</tspan></textPath></text></a><line id="SvgjsLine1501" x1="460" y1="111" x2="768" y2="111" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1502)"></line><a id="SvgjsA1508" href="plot-ipc-113164-116008-1586822936434-21.html#6"><text id="SvgjsText1504" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1506" href="#SvgjsPath1507"><tspan id="SvgjsTspan1505" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PNecko::Msg_PredLearn (1244)</tspan></textPath></text></a><line id="SvgjsLine1509" x1="768" y1="111" x2="1075" y2="463" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1510)"></line><a id="SvgjsA1516" href="plot-ipc-113164-116008-1586822936434-21.html#6"><text id="SvgjsText1512" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1514" href="#SvgjsPath1515"><tspan id="SvgjsTspan1513" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PNecko::Msg_PredLearn (1244)</tspan></textPath></text></a><line id="SvgjsLine1517" x1="153" y1="289" x2="460" y2="289" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1518)"></line><a id="SvgjsA1524" href="plot-ipc-113164-116008-1586822936434-21.html#7"><text id="SvgjsText1520" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1522" href="#SvgjsPath1523"><tspan id="SvgjsTspan1521" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PContent::Msg_RecordDiscardedData (144)</tspan></textPath></text></a><line id="SvgjsLine1525" x1="460" y1="289" x2="460" y2="289" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1526)"></line><a id="SvgjsA1532" href="plot-ipc-113164-116008-1586822936434-21.html#7"><text id="SvgjsText1528" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1530" href="#SvgjsPath1531"><tspan id="SvgjsTspan1529" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PContent::Msg_RecordDiscardedData (144)</tspan></textPath></text></a><line id="SvgjsLine1533" x1="460" y1="289" x2="768" y2="289" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1534)"></line><a id="SvgjsA1540" href="plot-ipc-113164-116008-1586822936434-21.html#7"><text id="SvgjsText1536" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1538" href="#SvgjsPath1539"><tspan id="SvgjsTspan1537" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PContent::Msg_RecordDiscardedData (144)</tspan></textPath></text></a><line id="SvgjsLine1541" x1="768" y1="289" x2="1075" y2="476" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1542)"></line><a id="SvgjsA1548" href="plot-ipc-113164-116008-1586822936434-21.html#7"><text id="SvgjsText1544" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1546" href="#SvgjsPath1547"><tspan id="SvgjsTspan1545" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PContent::Msg_RecordDiscardedData (144)</tspan></textPath></text></a><line id="SvgjsLine1549" x1="153" y1="289" x2="460" y2="289" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1550)"></line><a id="SvgjsA1556" href="plot-ipc-113164-116008-1586822936434-21.html#8"><text id="SvgjsText1552" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1554" href="#SvgjsPath1555"><tspan id="SvgjsTspan1553" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PContent::Msg_AccumulateChildKeyedHistograms (1820)</tspan></textPath></text></a><line id="SvgjsLine1557" x1="460" y1="289" x2="460" y2="289" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1558)"></line><a id="SvgjsA1564" href="plot-ipc-113164-116008-1586822936434-21.html#8"><text id="SvgjsText1560" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1562" href="#SvgjsPath1563"><tspan id="SvgjsTspan1561" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PContent::Msg_AccumulateChildKeyedHistograms (1820)</tspan></textPath></text></a><line id="SvgjsLine1565" x1="460" y1="289" x2="768" y2="289" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1566)"></line><a id="SvgjsA1572" href="plot-ipc-113164-116008-1586822936434-21.html#8"><text id="SvgjsText1568" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1570" href="#SvgjsPath1571"><tspan id="SvgjsTspan1569" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PContent::Msg_AccumulateChildKeyedHistograms (1820)</tspan></textPath></text></a><line id="SvgjsLine1573" x1="768" y1="289" x2="1075" y2="476" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1574)"></line><a id="SvgjsA1580" href="plot-ipc-113164-116008-1586822936434-21.html#8"><text id="SvgjsText1576" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1578" href="#SvgjsPath1579"><tspan id="SvgjsTspan1577" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PContent::Msg_AccumulateChildKeyedHistograms (1820)</tspan></textPath></text></a><line id="SvgjsLine1581" x1="153" y1="289" x2="460" y2="289" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1582)"></line><a id="SvgjsA1588" href="plot-ipc-113164-116008-1586822936434-21.html#9"><text id="SvgjsText1584" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1586" href="#SvgjsPath1587"><tspan id="SvgjsTspan1585" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PContent::Msg_AccumulateChildHistograms (1032)</tspan></textPath></text></a><line id="SvgjsLine1589" x1="460" y1="289" x2="460" y2="289" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1590)"></line><a id="SvgjsA1596" href="plot-ipc-113164-116008-1586822936434-21.html#9"><text id="SvgjsText1592" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1594" href="#SvgjsPath1595"><tspan id="SvgjsTspan1593" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PContent::Msg_AccumulateChildHistograms (1032)</tspan></textPath></text></a><line id="SvgjsLine1597" x1="460" y1="289" x2="768" y2="289" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1598)"></line><a id="SvgjsA1604" href="plot-ipc-113164-116008-1586822936434-21.html#9"><text id="SvgjsText1600" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1602" href="#SvgjsPath1603"><tspan id="SvgjsTspan1601" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PContent::Msg_AccumulateChildHistograms (1032)</tspan></textPath></text></a><line id="SvgjsLine1605" x1="768" y1="289" x2="1075" y2="476" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1606)"></line><a id="SvgjsA1612" href="plot-ipc-113164-116008-1586822936434-21.html#9"><text id="SvgjsText1608" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1610" href="#SvgjsPath1611"><tspan id="SvgjsTspan1609" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PContent::Msg_AccumulateChildHistograms (1032)</tspan></textPath></text></a><line id="SvgjsLine1613" x1="153" y1="634" x2="460" y2="634" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1614)"></line><a id="SvgjsA1620" href="plot-ipc-113164-116008-1586822936434-21.html#10"><text id="SvgjsText1616" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1618" href="#SvgjsPath1619"><tspan id="SvgjsTspan1617" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PVsync::Msg_Observe (120)</tspan></textPath></text></a><line id="SvgjsLine1621" x1="460" y1="634" x2="460" y2="634" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1622)"></line><a id="SvgjsA1628" href="plot-ipc-113164-116008-1586822936434-21.html#10"><text id="SvgjsText1624" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1626" href="#SvgjsPath1627"><tspan id="SvgjsTspan1625" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PVsync::Msg_Observe (120)</tspan></textPath></text></a><line id="SvgjsLine1629" x1="460" y1="634" x2="768" y2="670" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1630)"></line><a id="SvgjsA1636" href="plot-ipc-113164-116008-1586822936434-21.html#10"><text id="SvgjsText1632" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1634" href="#SvgjsPath1635"><tspan id="SvgjsTspan1633" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PVsync::Msg_Observe (120)</tspan></textPath></text></a><line id="SvgjsLine1637" x1="768" y1="670" x2="1382" y2="678" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1638)"></line><a id="SvgjsA1644" href="plot-ipc-113164-116008-1586822936434-21.html#10"><text id="SvgjsText1640" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1642" href="#SvgjsPath1643"><tspan id="SvgjsTspan1641" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PVsync::Msg_Observe (120)</tspan></textPath></text></a><line id="SvgjsLine1645" x1="153" y1="714" x2="460" y2="714" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1646)"></line><a id="SvgjsA1652" href="plot-ipc-113164-116008-1586822936434-21.html#11"><text id="SvgjsText1648" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1650" href="#SvgjsPath1651"><tspan id="SvgjsTspan1649" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1653" x1="460" y1="714" x2="460" y2="714" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1654)"></line><a id="SvgjsA1660" href="plot-ipc-113164-116008-1586822936434-21.html#11"><text id="SvgjsText1656" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1658" href="#SvgjsPath1659"><tspan id="SvgjsTspan1657" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1661" x1="460" y1="714" x2="768" y2="2015" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1662)"></line><a id="SvgjsA1668" href="plot-ipc-113164-116008-1586822936434-21.html#11"><text id="SvgjsText1664" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1666" href="#SvgjsPath1667"><tspan id="SvgjsTspan1665" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1669" x1="768" y1="2015" x2="1382" y2="2016" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1670)"></line><a id="SvgjsA1676" href="plot-ipc-113164-116008-1586822936434-21.html#11"><text id="SvgjsText1672" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1674" href="#SvgjsPath1675"><tspan id="SvgjsTspan1673" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1677" x1="153" y1="2168" x2="460" y2="2168" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1678)"></line><a id="SvgjsA1684" href="plot-ipc-113164-116008-1586822936434-21.html#12"><text id="SvgjsText1680" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1682" href="#SvgjsPath1683"><tspan id="SvgjsTspan1681" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PVsync::Msg_Unobserve (120)</tspan></textPath></text></a><line id="SvgjsLine1685" x1="460" y1="2168" x2="460" y2="2168" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1686)"></line><a id="SvgjsA1692" href="plot-ipc-113164-116008-1586822936434-21.html#12"><text id="SvgjsText1688" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1690" href="#SvgjsPath1691"><tspan id="SvgjsTspan1689" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PVsync::Msg_Unobserve (120)</tspan></textPath></text></a><line id="SvgjsLine1693" x1="460" y1="2168" x2="768" y2="2168" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1694)"></line><a id="SvgjsA1700" href="plot-ipc-113164-116008-1586822936434-21.html#12"><text id="SvgjsText1696" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1698" href="#SvgjsPath1699"><tspan id="SvgjsTspan1697" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PVsync::Msg_Unobserve (120)</tspan></textPath></text></a><line id="SvgjsLine1701" x1="768" y1="2168" x2="1382" y2="2168" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1702)"></line><a id="SvgjsA1708" href="plot-ipc-113164-116008-1586822936434-21.html#12"><text id="SvgjsText1704" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1706" href="#SvgjsPath1707"><tspan id="SvgjsTspan1705" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PVsync::Msg_Unobserve (120)</tspan></textPath></text></a><line id="SvgjsLine1709" x1="153" y1="2181" x2="460" y2="2181" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1710)"></line><a id="SvgjsA1716" href="plot-ipc-113164-116008-1586822936434-21.html#13"><text id="SvgjsText1712" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1714" href="#SvgjsPath1715"><tspan id="SvgjsTspan1713" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1717" x1="460" y1="2181" x2="460" y2="2181" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1718)"></line><a id="SvgjsA1724" href="plot-ipc-113164-116008-1586822936434-21.html#13"><text id="SvgjsText1720" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1722" href="#SvgjsPath1723"><tspan id="SvgjsTspan1721" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1725" x1="460" y1="2181" x2="768" y2="2181" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1726)"></line><a id="SvgjsA1732" href="plot-ipc-113164-116008-1586822936434-21.html#13"><text id="SvgjsText1728" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1730" href="#SvgjsPath1731"><tspan id="SvgjsTspan1729" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1733" x1="768" y1="2181" x2="1382" y2="2181" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1734)"></line><a id="SvgjsA1740" href="plot-ipc-113164-116008-1586822936434-21.html#13"><text id="SvgjsText1736" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1738" href="#SvgjsPath1739"><tspan id="SvgjsTspan1737" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1741" x1="153" y1="2242" x2="460" y2="2242" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1742)"></line><a id="SvgjsA1748" href="plot-ipc-113164-116008-1586822936434-21.html#14"><text id="SvgjsText1744" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1746" href="#SvgjsPath1747"><tspan id="SvgjsTspan1745" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1749" x1="460" y1="2242" x2="460" y2="2242" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1750)"></line><a id="SvgjsA1756" href="plot-ipc-113164-116008-1586822936434-21.html#14"><text id="SvgjsText1752" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1754" href="#SvgjsPath1755"><tspan id="SvgjsTspan1753" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1757" x1="460" y1="2242" x2="768" y2="2242" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1758)"></line><a id="SvgjsA1764" href="plot-ipc-113164-116008-1586822936434-21.html#14"><text id="SvgjsText1760" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1762" href="#SvgjsPath1763"><tspan id="SvgjsTspan1761" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1765" x1="768" y1="2242" x2="1382" y2="2242" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1766)"></line><a id="SvgjsA1772" href="plot-ipc-113164-116008-1586822936434-21.html#14"><text id="SvgjsText1768" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1770" href="#SvgjsPath1771"><tspan id="SvgjsTspan1769" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1773" x1="153" y1="2312" x2="460" y2="2312" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1774)"></line><a id="SvgjsA1780" href="plot-ipc-113164-116008-1586822936434-21.html#15"><text id="SvgjsText1776" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1778" href="#SvgjsPath1779"><tspan id="SvgjsTspan1777" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1781" x1="460" y1="2312" x2="460" y2="2312" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1782)"></line><a id="SvgjsA1788" href="plot-ipc-113164-116008-1586822936434-21.html#15"><text id="SvgjsText1784" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1786" href="#SvgjsPath1787"><tspan id="SvgjsTspan1785" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1789" x1="460" y1="2312" x2="768" y2="2312" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1790)"></line><a id="SvgjsA1796" href="plot-ipc-113164-116008-1586822936434-21.html#15"><text id="SvgjsText1792" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1794" href="#SvgjsPath1795"><tspan id="SvgjsTspan1793" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1797" x1="768" y1="2312" x2="1382" y2="2312" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1798)"></line><a id="SvgjsA1804" href="plot-ipc-113164-116008-1586822936434-21.html#15"><text id="SvgjsText1800" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1802" href="#SvgjsPath1803"><tspan id="SvgjsTspan1801" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1805" x1="153" y1="2312" x2="460" y2="2312" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1806)"></line><a id="SvgjsA1812" href="plot-ipc-113164-116008-1586822936434-21.html#16"><text id="SvgjsText1808" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1810" href="#SvgjsPath1811"><tspan id="SvgjsTspan1809" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1813" x1="460" y1="2312" x2="460" y2="2312" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1814)"></line><a id="SvgjsA1820" href="plot-ipc-113164-116008-1586822936434-21.html#16"><text id="SvgjsText1816" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1818" href="#SvgjsPath1819"><tspan id="SvgjsTspan1817" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1821" x1="460" y1="2312" x2="768" y2="2312" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1822)"></line><a id="SvgjsA1828" href="plot-ipc-113164-116008-1586822936434-21.html#16"><text id="SvgjsText1824" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1826" href="#SvgjsPath1827"><tspan id="SvgjsTspan1825" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1829" x1="768" y1="2312" x2="1382" y2="2312" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1830)"></line><a id="SvgjsA1836" href="plot-ipc-113164-116008-1586822936434-21.html#16"><text id="SvgjsText1832" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1834" href="#SvgjsPath1835"><tspan id="SvgjsTspan1833" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1837" x1="153" y1="2377" x2="460" y2="2377" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1838)"></line><a id="SvgjsA1844" href="plot-ipc-113164-116008-1586822936434-21.html#17"><text id="SvgjsText1840" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1842" href="#SvgjsPath1843"><tspan id="SvgjsTspan1841" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1845" x1="460" y1="2377" x2="460" y2="2377" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1846)"></line><a id="SvgjsA1852" href="plot-ipc-113164-116008-1586822936434-21.html#17"><text id="SvgjsText1848" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1850" href="#SvgjsPath1851"><tspan id="SvgjsTspan1849" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1853" x1="460" y1="2377" x2="768" y2="2377" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1854)"></line><a id="SvgjsA1860" href="plot-ipc-113164-116008-1586822936434-21.html#17"><text id="SvgjsText1856" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1858" href="#SvgjsPath1859"><tspan id="SvgjsTspan1857" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1861" x1="768" y1="2377" x2="1382" y2="2377" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1862)"></line><a id="SvgjsA1868" href="plot-ipc-113164-116008-1586822936434-21.html#17"><text id="SvgjsText1864" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1866" href="#SvgjsPath1867"><tspan id="SvgjsTspan1865" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1869" x1="153" y1="2377" x2="460" y2="2377" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1870)"></line><a id="SvgjsA1876" href="plot-ipc-113164-116008-1586822936434-21.html#18"><text id="SvgjsText1872" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1874" href="#SvgjsPath1875"><tspan id="SvgjsTspan1873" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1877" x1="460" y1="2377" x2="460" y2="2377" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1878)"></line><a id="SvgjsA1884" href="plot-ipc-113164-116008-1586822936434-21.html#18"><text id="SvgjsText1880" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1882" href="#SvgjsPath1883"><tspan id="SvgjsTspan1881" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1885" x1="460" y1="2377" x2="768" y2="2377" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1886)"></line><a id="SvgjsA1892" href="plot-ipc-113164-116008-1586822936434-21.html#18"><text id="SvgjsText1888" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1890" href="#SvgjsPath1891"><tspan id="SvgjsTspan1889" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1893" x1="768" y1="2377" x2="1382" y2="2377" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1894)"></line><a id="SvgjsA1900" href="plot-ipc-113164-116008-1586822936434-21.html#18"><text id="SvgjsText1896" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1898" href="#SvgjsPath1899"><tspan id="SvgjsTspan1897" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1901" x1="153" y1="2442" x2="460" y2="2442" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1902)"></line><a id="SvgjsA1908" href="plot-ipc-113164-116008-1586822936434-21.html#19"><text id="SvgjsText1904" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1906" href="#SvgjsPath1907"><tspan id="SvgjsTspan1905" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1909" x1="460" y1="2442" x2="460" y2="2442" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1910)"></line><a id="SvgjsA1916" href="plot-ipc-113164-116008-1586822936434-21.html#19"><text id="SvgjsText1912" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1914" href="#SvgjsPath1915"><tspan id="SvgjsTspan1913" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1917" x1="460" y1="2442" x2="768" y2="2442" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1918)"></line><a id="SvgjsA1924" href="plot-ipc-113164-116008-1586822936434-21.html#19"><text id="SvgjsText1920" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1922" href="#SvgjsPath1923"><tspan id="SvgjsTspan1921" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1925" x1="768" y1="2442" x2="1382" y2="2442" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1926)"></line><a id="SvgjsA1932" href="plot-ipc-113164-116008-1586822936434-21.html#19"><text id="SvgjsText1928" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1930" href="#SvgjsPath1931"><tspan id="SvgjsTspan1929" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1933" x1="153" y1="2442" x2="460" y2="2442" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1934)"></line><a id="SvgjsA1940" href="plot-ipc-113164-116008-1586822936434-21.html#20"><text id="SvgjsText1936" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1938" href="#SvgjsPath1939"><tspan id="SvgjsTspan1937" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1941" x1="460" y1="2442" x2="460" y2="2442" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1942)"></line><a id="SvgjsA1948" href="plot-ipc-113164-116008-1586822936434-21.html#20"><text id="SvgjsText1944" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1946" href="#SvgjsPath1947"><tspan id="SvgjsTspan1945" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1949" x1="460" y1="2442" x2="768" y2="2442" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1950)"></line><a id="SvgjsA1956" href="plot-ipc-113164-116008-1586822936434-21.html#20"><text id="SvgjsText1952" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1954" href="#SvgjsPath1955"><tspan id="SvgjsTspan1953" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1957" x1="768" y1="2442" x2="1382" y2="2442" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1958)"></line><a id="SvgjsA1964" href="plot-ipc-113164-116008-1586822936434-21.html#20"><text id="SvgjsText1960" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1962" href="#SvgjsPath1963"><tspan id="SvgjsTspan1961" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine1965" x1="153" y1="2484" x2="460" y2="2484" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1966)"></line><a id="SvgjsA1972" href="plot-ipc-113164-116008-1586822936434-21.html#21"><text id="SvgjsText1968" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1970" href="#SvgjsPath1971"><tspan id="SvgjsTspan1969" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1973" x1="460" y1="2484" x2="460" y2="2484" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1974)"></line><a id="SvgjsA1980" href="plot-ipc-113164-116008-1586822936434-21.html#21"><text id="SvgjsText1976" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1978" href="#SvgjsPath1979"><tspan id="SvgjsTspan1977" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1981" x1="460" y1="2484" x2="768" y2="2484" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1982)"></line><a id="SvgjsA1988" href="plot-ipc-113164-116008-1586822936434-21.html#21"><text id="SvgjsText1984" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1986" href="#SvgjsPath1987"><tspan id="SvgjsTspan1985" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine1989" x1="768" y1="2484" x2="1382" y2="2485" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1990)"></line><a id="SvgjsA1996" href="plot-ipc-113164-116008-1586822936434-21.html#21"><text id="SvgjsText1992" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1994" href="#SvgjsPath1995"><tspan id="SvgjsTspan1993" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><a id="SvgjsA1999" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText1997" font-family="Helvetica, Arial, sans-serif" x="778" y="36.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1998" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2002" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2000" font-family="Helvetica, Arial, sans-serif" x="778" y="39.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2001" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2005" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2003" font-family="Helvetica, Arial, sans-serif" x="778" y="41.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2004" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2008" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2006" font-family="Helvetica, Arial, sans-serif" x="778" y="44.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2007" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2011" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2009" font-family="Helvetica, Arial, sans-serif" x="778" y="46.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2010" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2014" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2012" font-family="Helvetica, Arial, sans-serif" x="778" y="49.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2013" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2017" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2015" font-family="Helvetica, Arial, sans-serif" x="778" y="51.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2016" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2020" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2018" font-family="Helvetica, Arial, sans-serif" x="778" y="54.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2019" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2023" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2021" font-family="Helvetica, Arial, sans-serif" x="778" y="56.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2022" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2026" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2024" font-family="Helvetica, Arial, sans-serif" x="778" y="58.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2025" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2029" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2027" font-family="Helvetica, Arial, sans-serif" x="778" y="61.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2028" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2032" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2030" font-family="Helvetica, Arial, sans-serif" x="778" y="63.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2031" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2035" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2033" font-family="Helvetica, Arial, sans-serif" x="778" y="66.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2034" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2038" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2036" font-family="Helvetica, Arial, sans-serif" x="778" y="68.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2037" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2041" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2039" font-family="Helvetica, Arial, sans-serif" x="778" y="71.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2040" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2044" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2042" font-family="Helvetica, Arial, sans-serif" x="778" y="73.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2043" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2047" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2045" font-family="Helvetica, Arial, sans-serif" x="778" y="75.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2046" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2050" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2048" font-family="Helvetica, Arial, sans-serif" x="778" y="78.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2049" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2053" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2051" font-family="Helvetica, Arial, sans-serif" x="778" y="80.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2052" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2056" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2054" font-family="Helvetica, Arial, sans-serif" x="778" y="83.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2055" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2059" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2057" font-family="Helvetica, Arial, sans-serif" x="778" y="85.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2058" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2062" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2060" font-family="Helvetica, Arial, sans-serif" x="778" y="88.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2061" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2065" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2063" font-family="Helvetica, Arial, sans-serif" x="778" y="90.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2064" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2068" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2066" font-family="Helvetica, Arial, sans-serif" x="778" y="92.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2067" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2071" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2069" font-family="Helvetica, Arial, sans-serif" x="778" y="95.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2070" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2074" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2072" font-family="Helvetica, Arial, sans-serif" x="778" y="97.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2073" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2077" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2075" font-family="Helvetica, Arial, sans-serif" x="778" y="100.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2076" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2080" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2078" font-family="Helvetica, Arial, sans-serif" x="778" y="102.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2079" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2083" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2081" font-family="Helvetica, Arial, sans-serif" x="778" y="162.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2082" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2086" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2084" font-family="Helvetica, Arial, sans-serif" x="778" y="164.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2085" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2089" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2087" font-family="Helvetica, Arial, sans-serif" x="778" y="166.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2088" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2092" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2090" font-family="Helvetica, Arial, sans-serif" x="778" y="168.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2091" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2095" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2093" font-family="Helvetica, Arial, sans-serif" x="778" y="171.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2094" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2098" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2096" font-family="Helvetica, Arial, sans-serif" x="778" y="173.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2097" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2101" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2099" font-family="Helvetica, Arial, sans-serif" x="778" y="176.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2100" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2104" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2102" font-family="Helvetica, Arial, sans-serif" x="778" y="178.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2103" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2107" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2105" font-family="Helvetica, Arial, sans-serif" x="778" y="180.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2106" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2110" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2108" font-family="Helvetica, Arial, sans-serif" x="778" y="183.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2109" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2113" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2111" font-family="Helvetica, Arial, sans-serif" x="778" y="185.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2112" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2116" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2114" font-family="Helvetica, Arial, sans-serif" x="778" y="188.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2115" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2119" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2117" font-family="Helvetica, Arial, sans-serif" x="778" y="190.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2118" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2122" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2120" font-family="Helvetica, Arial, sans-serif" x="778" y="193.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2121" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2125" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2123" font-family="Helvetica, Arial, sans-serif" x="778" y="195.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2124" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2128" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2126" font-family="Helvetica, Arial, sans-serif" x="778" y="198.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2127" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2131" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2129" font-family="Helvetica, Arial, sans-serif" x="778" y="200.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2130" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2134" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2132" font-family="Helvetica, Arial, sans-serif" x="778" y="202.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2133" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2137" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2135" font-family="Helvetica, Arial, sans-serif" x="778" y="205.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2136" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2140" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2138" font-family="Helvetica, Arial, sans-serif" x="778" y="207.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2139" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2143" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2141" font-family="Helvetica, Arial, sans-serif" x="778" y="210.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2142" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2146" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2144" font-family="Helvetica, Arial, sans-serif" x="778" y="212.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2145" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2149" href="data:text/plain,mozilla::detail::ConditionVariableImpl::notify_one(void)%0a%0dmozilla::ipc::MessageChannel::OnMessageReceivedFromLink(IPC::Message&amp;&amp;)%0a%0dmozilla::ipc::ProcessLink::OnMessageReceived(IPC::Message&amp;&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::IOInterposeObserver::Observation::Observation(mozilla::IOInterposeObserver::Operation, char const*, bool)%0a%0dmozilla::ipc::ChannelLog::Add(char const*, char const*, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, bool)%0a%0dnsXULPopupShownEvent::AddRef(void)%0a%0dNtAlertThreadByThreadId%0a%0dRtlpWakeSRWLock%0a%0dmozilla::ThreadEventQueue&lt;mozilla::EventQueue&gt;::PutEventInternal(already_AddRefed&lt;nsIRunnable&gt;&amp;&amp;, mozilla::EventQueuePriority, mozilla::ThreadEventQueue&lt;mozilla::EventQueue&gt;::NestedSink*)%0a%0dmozilla::ThreadEventTarget::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dnsThread::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dMessageLoop::PostTask_Helper(already_AddRefed&lt;nsIRunnable&gt;, int)%0a%0dMessageLoop::PostTask(already_AddRefed&lt;nsIRunnable&gt;)%0a%0dmozilla::ipc::MessageChannel::MessageTask::Post(void)%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2147" font-family="Helvetica, Arial, sans-serif" x="778" y="215.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2148" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">mozilla::detail::ConditionVariableImpl::notify_one(void)</tspan></text></a><a id="SvgjsA2152" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2150" font-family="Helvetica, Arial, sans-serif" x="778" y="217.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2151" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2155" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2153" font-family="Helvetica, Arial, sans-serif" x="778" y="220.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2154" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2158" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2156" font-family="Helvetica, Arial, sans-serif" x="778" y="222.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2157" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2161" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2159" font-family="Helvetica, Arial, sans-serif" x="778" y="225.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2160" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2164" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2162" font-family="Helvetica, Arial, sans-serif" x="778" y="227.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2163" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2167" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2165" font-family="Helvetica, Arial, sans-serif" x="778" y="229.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2166" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2170" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2168" font-family="Helvetica, Arial, sans-serif" x="778" y="232.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2169" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2173" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2171" font-family="Helvetica, Arial, sans-serif" x="778" y="234.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2172" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2176" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2174" font-family="Helvetica, Arial, sans-serif" x="778" y="237.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2175" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2179" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2177" font-family="Helvetica, Arial, sans-serif" x="778" y="239.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2178" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2182" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2180" font-family="Helvetica, Arial, sans-serif" x="778" y="242.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2181" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2185" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2183" font-family="Helvetica, Arial, sans-serif" x="778" y="244.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2184" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2188" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2186" font-family="Helvetica, Arial, sans-serif" x="778" y="247.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2187" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2191" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2189" font-family="Helvetica, Arial, sans-serif" x="778" y="249.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2190" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2194" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2192" font-family="Helvetica, Arial, sans-serif" x="778" y="251.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2193" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2197" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2195" font-family="Helvetica, Arial, sans-serif" x="778" y="254.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2196" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2200" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2198" font-family="Helvetica, Arial, sans-serif" x="778" y="256.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2199" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2203" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2201" font-family="Helvetica, Arial, sans-serif" x="778" y="259.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2202" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2206" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2204" font-family="Helvetica, Arial, sans-serif" x="778" y="261.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2205" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2209" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2207" font-family="Helvetica, Arial, sans-serif" x="778" y="270.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2208" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2212" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2210" font-family="Helvetica, Arial, sans-serif" x="778" y="274.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2211" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2215" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2213" font-family="Helvetica, Arial, sans-serif" x="778" y="292.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2214" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2218" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2216" font-family="Helvetica, Arial, sans-serif" x="778" y="294.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2217" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2221" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2219" font-family="Helvetica, Arial, sans-serif" x="778" y="297.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2220" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2224" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2222" font-family="Helvetica, Arial, sans-serif" x="778" y="299.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2223" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2227" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2225" font-family="Helvetica, Arial, sans-serif" x="778" y="301.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2226" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2230" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2228" font-family="Helvetica, Arial, sans-serif" x="778" y="304.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2229" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2233" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2231" font-family="Helvetica, Arial, sans-serif" x="778" y="306.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2232" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2236" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2234" font-family="Helvetica, Arial, sans-serif" x="778" y="309.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2235" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2239" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2237" font-family="Helvetica, Arial, sans-serif" x="778" y="311.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2238" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2242" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2240" font-family="Helvetica, Arial, sans-serif" x="778" y="314.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2241" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2245" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2243" font-family="Helvetica, Arial, sans-serif" x="778" y="316.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2244" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2248" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2246" font-family="Helvetica, Arial, sans-serif" x="778" y="370.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2247" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2251" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2249" font-family="Helvetica, Arial, sans-serif" x="778" y="372.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2250" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2254" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2252" font-family="Helvetica, Arial, sans-serif" x="778" y="375.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2253" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2257" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2255" font-family="Helvetica, Arial, sans-serif" x="778" y="377.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2256" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2260" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2258" font-family="Helvetica, Arial, sans-serif" x="778" y="380.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2259" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2263" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2261" font-family="Helvetica, Arial, sans-serif" x="778" y="382.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2262" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2266" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2264" font-family="Helvetica, Arial, sans-serif" x="778" y="385.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2265" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2269" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2267" font-family="Helvetica, Arial, sans-serif" x="778" y="387.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2268" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2272" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2270" font-family="Helvetica, Arial, sans-serif" x="778" y="390.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2271" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2275" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2273" font-family="Helvetica, Arial, sans-serif" x="778" y="392.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2274" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2278" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2276" font-family="Helvetica, Arial, sans-serif" x="778" y="394.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2277" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2281" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2279" font-family="Helvetica, Arial, sans-serif" x="778" y="397.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2280" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2284" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2282" font-family="Helvetica, Arial, sans-serif" x="778" y="399.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2283" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2287" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2285" font-family="Helvetica, Arial, sans-serif" x="778" y="402.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2286" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2290" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlpWaitOnAddressWithTimeout%0a%0dRtlpWaitOnAddress%0a%0dRtlpWaitOnCriticalSection%0a%0dRtlpEnterCriticalSectionContended%0a%0dRtlEnterCriticalSection%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::malloc(uint64_t)%0a%0dreplace_malloc%0a%0dreplace_malloc%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2288" font-family="Helvetica, Arial, sans-serif" x="778" y="404.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2289" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2293" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlpWaitOnAddressWithTimeout%0a%0dRtlpWaitOnAddress%0a%0dRtlpWaitOnCriticalSection%0a%0dRtlpEnterCriticalSectionContended%0a%0dRtlEnterCriticalSection%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::malloc(uint64_t)%0a%0dreplace_malloc%0a%0dreplace_malloc%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2291" font-family="Helvetica, Arial, sans-serif" x="778" y="407.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2292" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2296" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlpWaitOnAddressWithTimeout%0a%0dRtlpWaitOnAddress%0a%0dRtlpWaitOnCriticalSection%0a%0dRtlpEnterCriticalSectionContended%0a%0dRtlEnterCriticalSection%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::malloc(uint64_t)%0a%0dreplace_malloc%0a%0dreplace_malloc%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2294" font-family="Helvetica, Arial, sans-serif" x="778" y="409.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2295" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2299" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlpWaitOnAddressWithTimeout%0a%0dRtlpWaitOnAddress%0a%0dRtlpWaitOnCriticalSection%0a%0dRtlpEnterCriticalSectionContended%0a%0dRtlEnterCriticalSection%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::malloc(uint64_t)%0a%0dreplace_malloc%0a%0dreplace_malloc%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2297" font-family="Helvetica, Arial, sans-serif" x="778" y="411.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2298" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2302" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlpWaitOnAddressWithTimeout%0a%0dRtlpWaitOnAddress%0a%0dRtlpWaitOnCriticalSection%0a%0dRtlpEnterCriticalSectionContended%0a%0dRtlEnterCriticalSection%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::malloc(uint64_t)%0a%0dreplace_malloc%0a%0dreplace_malloc%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2300" font-family="Helvetica, Arial, sans-serif" x="778" y="414.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2301" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2305" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlpWaitOnAddressWithTimeout%0a%0dRtlpWaitOnAddress%0a%0dRtlpWaitOnCriticalSection%0a%0dRtlpEnterCriticalSectionContended%0a%0dRtlEnterCriticalSection%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::malloc(uint64_t)%0a%0dreplace_malloc%0a%0dreplace_malloc%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2303" font-family="Helvetica, Arial, sans-serif" x="778" y="416.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2304" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2308" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlpWaitOnAddressWithTimeout%0a%0dRtlpWaitOnAddress%0a%0dRtlpWaitOnCriticalSection%0a%0dRtlpEnterCriticalSectionContended%0a%0dRtlEnterCriticalSection%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::malloc(uint64_t)%0a%0dreplace_malloc%0a%0dreplace_malloc%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2306" font-family="Helvetica, Arial, sans-serif" x="778" y="419.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2307" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2311" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlpWaitOnAddressWithTimeout%0a%0dRtlpWaitOnAddress%0a%0dRtlpWaitOnCriticalSection%0a%0dRtlpEnterCriticalSectionContended%0a%0dRtlEnterCriticalSection%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::malloc(uint64_t)%0a%0dreplace_malloc%0a%0dreplace_malloc%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2309" font-family="Helvetica, Arial, sans-serif" x="778" y="421.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2310" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2314" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlpWaitOnAddressWithTimeout%0a%0dRtlpWaitOnAddress%0a%0dRtlpWaitOnCriticalSection%0a%0dRtlpEnterCriticalSectionContended%0a%0dRtlEnterCriticalSection%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::malloc(uint64_t)%0a%0dreplace_malloc%0a%0dreplace_malloc%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2312" font-family="Helvetica, Arial, sans-serif" x="778" y="424.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2313" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA2317" href="data:text/plain,arena_t::GetNonFullBinRun(arena_bin_t*)%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::calloc(uint64_t, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::calloc(uint64_t, uint64_t)%0a%0dreplace_calloc%0a%0darena_t::DallocSmall(arena_chunk_t*, void*, arena_chunk_map_t*)%0a%0darena_dalloc%0a%0darena_t::DallocRun(arena_run_t*, bool)%0a%0darena_dalloc%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2315" font-family="Helvetica, Arial, sans-serif" x="778" y="426.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2316" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">arena_t::GetNonFullBinRun(arena_bin_t*)</tspan></text></a><a id="SvgjsA2320" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2318" font-family="Helvetica, Arial, sans-serif" x="778" y="429.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2319" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2323" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2321" font-family="Helvetica, Arial, sans-serif" x="778" y="431.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2322" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2326" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2324" font-family="Helvetica, Arial, sans-serif" x="778" y="433.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2325" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2329" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2327" font-family="Helvetica, Arial, sans-serif" x="778" y="436.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2328" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2332" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2330" font-family="Helvetica, Arial, sans-serif" x="778" y="438.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2331" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2335" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2333" font-family="Helvetica, Arial, sans-serif" x="778" y="441.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2334" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2338" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2336" font-family="Helvetica, Arial, sans-serif" x="778" y="443.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2337" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2341" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2339" font-family="Helvetica, Arial, sans-serif" x="778" y="446.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2340" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2344" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2342" font-family="Helvetica, Arial, sans-serif" x="778" y="448.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2343" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2347" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2345" font-family="Helvetica, Arial, sans-serif" x="778" y="451.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2346" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2350" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2348" font-family="Helvetica, Arial, sans-serif" x="778" y="453.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2349" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2353" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2351" font-family="Helvetica, Arial, sans-serif" x="778" y="456.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2352" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2356" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2354" font-family="Helvetica, Arial, sans-serif" x="778" y="458.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2355" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2359" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2357" font-family="Helvetica, Arial, sans-serif" x="778" y="460.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2358" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2362" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2360" font-family="Helvetica, Arial, sans-serif" x="778" y="463.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2361" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2365" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2363" font-family="Helvetica, Arial, sans-serif" x="778" y="465.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2364" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2368" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2366" font-family="Helvetica, Arial, sans-serif" x="778" y="468.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2367" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2371" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2369" font-family="Helvetica, Arial, sans-serif" x="778" y="470.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2370" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2374" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2372" font-family="Helvetica, Arial, sans-serif" x="778" y="473.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2373" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2377" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2375" font-family="Helvetica, Arial, sans-serif" x="778" y="475.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2376" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2380" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2378" font-family="Helvetica, Arial, sans-serif" x="778" y="478.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2379" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2383" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2381" font-family="Helvetica, Arial, sans-serif" x="778" y="481.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2382" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2386" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2384" font-family="Helvetica, Arial, sans-serif" x="778" y="484.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2385" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2389" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2387" font-family="Helvetica, Arial, sans-serif" x="778" y="486.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2388" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2392" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2390" font-family="Helvetica, Arial, sans-serif" x="778" y="491.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2391" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2395" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2393" font-family="Helvetica, Arial, sans-serif" x="778" y="497.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2394" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2398" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2396" font-family="Helvetica, Arial, sans-serif" x="778" y="500.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2397" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2401" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2399" font-family="Helvetica, Arial, sans-serif" x="778" y="502.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2400" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2404" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2402" font-family="Helvetica, Arial, sans-serif" x="778" y="505.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2403" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2407" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2405" font-family="Helvetica, Arial, sans-serif" x="778" y="507.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2406" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2410" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2408" font-family="Helvetica, Arial, sans-serif" x="778" y="509.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2409" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2413" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2411" font-family="Helvetica, Arial, sans-serif" x="778" y="514.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2412" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2416" href="data:text/plain,NS_TableDrivenQI(void*, nsID const&amp;, void**, QITableEntry const*)%0a%0dmozilla::detail::ConditionVariableImpl::notify_one(void)%0a%0dmozilla::ipc::MessageChannel::OnMessageReceivedFromLink(IPC::Message&amp;&amp;)%0a%0dmozilla::ipc::ProcessLink::OnMessageReceived(IPC::Message&amp;&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::IOInterposeObserver::Observation::Observation(mozilla::IOInterposeObserver::Operation, char const*, bool)%0a%0dmozilla::ipc::ChannelLog::Add(char const*, char const*, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, bool)%0a%0dnsXULPopupShownEvent::AddRef(void)%0a%0dNtAlertThreadByThreadId%0a%0dRtlpWakeSRWLock%0a%0dmozilla::ThreadEventQueue&lt;mozilla::EventQueue&gt;::PutEventInternal(already_AddRefed&lt;nsIRunnable&gt;&amp;&amp;, mozilla::EventQueuePriority, mozilla::ThreadEventQueue&lt;mozilla::EventQueue&gt;::NestedSink*)%0a%0dmozilla::ThreadEventTarget::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dnsThread::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dMessageLoop::PostTask_Helper(already_AddRefed&lt;nsIRunnable&gt;, int)%0a%0dMessageLoop::PostTask(already_AddRefed&lt;nsIRunnable&gt;)%0a%0dmozilla::ipc::MessageChannel::MessageTask::Post(void)%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2414" font-family="Helvetica, Arial, sans-serif" x="778" y="517.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2415" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NS_TableDrivenQI(void*, nsID const&amp;, void**, QITableEntry const*)</tspan></text></a><a id="SvgjsA2419" href="data:text/plain,NS_TableDrivenQI(void*, nsID const&amp;, void**, QITableEntry const*)%0a%0dmozilla::detail::ConditionVariableImpl::notify_one(void)%0a%0dmozilla::ipc::MessageChannel::OnMessageReceivedFromLink(IPC::Message&amp;&amp;)%0a%0dmozilla::ipc::ProcessLink::OnMessageReceived(IPC::Message&amp;&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::IOInterposeObserver::Observation::Observation(mozilla::IOInterposeObserver::Operation, char const*, bool)%0a%0dmozilla::ipc::ChannelLog::Add(char const*, char const*, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, bool)%0a%0dnsXULPopupShownEvent::AddRef(void)%0a%0dNtAlertThreadByThreadId%0a%0dRtlpWakeSRWLock%0a%0dmozilla::ThreadEventQueue&lt;mozilla::EventQueue&gt;::PutEventInternal(already_AddRefed&lt;nsIRunnable&gt;&amp;&amp;, mozilla::EventQueuePriority, mozilla::ThreadEventQueue&lt;mozilla::EventQueue&gt;::NestedSink*)%0a%0dmozilla::ThreadEventTarget::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dnsThread::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dMessageLoop::PostTask_Helper(already_AddRefed&lt;nsIRunnable&gt;, int)%0a%0dMessageLoop::PostTask(already_AddRefed&lt;nsIRunnable&gt;)%0a%0dmozilla::ipc::MessageChannel::MessageTask::Post(void)%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2417" font-family="Helvetica, Arial, sans-serif" x="778" y="519.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2418" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NS_TableDrivenQI(void*, nsID const&amp;, void**, QITableEntry const*)</tspan></text></a><a id="SvgjsA2422" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2420" font-family="Helvetica, Arial, sans-serif" x="778" y="522.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2421" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2425" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2423" font-family="Helvetica, Arial, sans-serif" x="778" y="525.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2424" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2428" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2426" font-family="Helvetica, Arial, sans-serif" x="778" y="532.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2427" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2431" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2429" font-family="Helvetica, Arial, sans-serif" x="778" y="535.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2430" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2434" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2432" font-family="Helvetica, Arial, sans-serif" x="778" y="537.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2433" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2437" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2435" font-family="Helvetica, Arial, sans-serif" x="778" y="541.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2436" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2440" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2438" font-family="Helvetica, Arial, sans-serif" x="778" y="545.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2439" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2443" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2441" font-family="Helvetica, Arial, sans-serif" x="778" y="549.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2442" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2446" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2444" font-family="Helvetica, Arial, sans-serif" x="778" y="554.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2445" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2449" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2447" font-family="Helvetica, Arial, sans-serif" x="778" y="560.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2448" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2452" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2450" font-family="Helvetica, Arial, sans-serif" x="778" y="577.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2451" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2455" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2453" font-family="Helvetica, Arial, sans-serif" x="778" y="600.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2454" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2458" href="data:text/plain,mozilla::dom::BrowserChild::GetFrom(mozilla::layers::LayersId)%0a%0dmozilla::layers::CompositorManagerChild::GetSpecificMessageEventTarget(IPC::Message const&amp;)%0a%0dNS_TableDrivenQI(void*, nsID const&amp;, void**, QITableEntry const*)%0a%0dmozilla::detail::ConditionVariableImpl::notify_one(void)%0a%0dmozilla::ipc::MessageChannel::OnMessageReceivedFromLink(IPC::Message&amp;&amp;)%0a%0dmozilla::ipc::ProcessLink::OnMessageReceived(IPC::Message&amp;&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::IOInterposeObserver::Observation::Observation(mozilla::IOInterposeObserver::Operation, char const*, bool)%0a%0dmozilla::ipc::ChannelLog::Add(char const*, char const*, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, bool)%0a%0dnsXULPopupShownEvent::AddRef(void)%0a%0dNtAlertThreadByThreadId%0a%0dRtlpWakeSRWLock%0a%0dmozilla::ThreadEventQueue&lt;mozilla::EventQueue&gt;::PutEventInternal(already_AddRefed&lt;nsIRunnable&gt;&amp;&amp;, mozilla::EventQueuePriority, mozilla::ThreadEventQueue&lt;mozilla::EventQueue&gt;::NestedSink*)%0a%0dmozilla::ThreadEventTarget::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dnsThread::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dMessageLoop::PostTask_Helper(already_AddRefed&lt;nsIRunnable&gt;, int)%0a%0dMessageLoop::PostTask(already_AddRefed&lt;nsIRunnable&gt;)%0a%0dmozilla::ipc::MessageChannel::MessageTask::Post(void)%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2456" font-family="Helvetica, Arial, sans-serif" x="778" y="610.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2457" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::BrowserChild::GetFrom(mozilla::layers::LayersId)</tspan></text></a><a id="SvgjsA2461" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2459" font-family="Helvetica, Arial, sans-serif" x="778" y="620.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2460" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2464" href="data:text/plain,`anonymous namespace'::InterposedNtWriteFile%0a%0dNtWaitForAlertByThreadId%0a%0dRtlpWaitOnAddressWithTimeout%0a%0dRtlpWaitOnAddress%0a%0dRtlpWaitOnCriticalSection%0a%0dRtlpEnterCriticalSectionContended%0a%0dRtlEnterCriticalSection%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::malloc(uint64_t)%0a%0dreplace_malloc%0a%0dreplace_malloc%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2462" font-family="Helvetica, Arial, sans-serif" x="778" y="654.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2463" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">`anonymous namespace'::InterposedNtWriteFile</tspan></text></a><a id="SvgjsA2467" href="data:text/plain,nsRefreshTimer::Release(void)%0a%0dmemcpy()%0a%0dmozilla::ipc::MessageChannel::MessageTask::Post(void)%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2465" font-family="Helvetica, Arial, sans-serif" x="778" y="2009.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2466" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">nsRefreshTimer::Release(void)</tspan></text></a><a id="SvgjsA2470" href="data:text/plain,IPC::Channel::ChannelImpl::Send(IPC::Message*)%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dReadFile%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2468" font-family="Helvetica, Arial, sans-serif" x="778" y="2014.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2469" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">IPC::Channel::ChannelImpl::Send(IPC::Message*)</tspan></text></a><a id="SvgjsA2473" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2471" font-family="Helvetica, Arial, sans-serif" x="778" y="2016.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2472" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2476" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2474" font-family="Helvetica, Arial, sans-serif" x="778" y="2019.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2475" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2479" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2477" font-family="Helvetica, Arial, sans-serif" x="778" y="2022.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2478" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2482" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2480" font-family="Helvetica, Arial, sans-serif" x="778" y="2025.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2481" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2485" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2483" font-family="Helvetica, Arial, sans-serif" x="778" y="2028.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2484" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2488" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2486" font-family="Helvetica, Arial, sans-serif" x="778" y="2030.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2487" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2491" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2489" font-family="Helvetica, Arial, sans-serif" x="778" y="2032.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2490" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2494" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2492" font-family="Helvetica, Arial, sans-serif" x="778" y="2038.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2493" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2497" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2495" font-family="Helvetica, Arial, sans-serif" x="778" y="2041.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2496" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2500" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2498" font-family="Helvetica, Arial, sans-serif" x="778" y="2044.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2499" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2503" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2501" font-family="Helvetica, Arial, sans-serif" x="778" y="2046.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2502" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2506" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2504" font-family="Helvetica, Arial, sans-serif" x="778" y="2048.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2505" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2509" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2507" font-family="Helvetica, Arial, sans-serif" x="778" y="2051.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2508" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2512" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2510" font-family="Helvetica, Arial, sans-serif" x="778" y="2053.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2511" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2515" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2513" font-family="Helvetica, Arial, sans-serif" x="778" y="2056.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2514" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2518" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2516" font-family="Helvetica, Arial, sans-serif" x="778" y="2058.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2517" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2521" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2519" font-family="Helvetica, Arial, sans-serif" x="778" y="2062.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2520" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2524" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2522" font-family="Helvetica, Arial, sans-serif" x="778" y="2064.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2523" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2527" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2525" font-family="Helvetica, Arial, sans-serif" x="778" y="2067.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2526" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2530" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2528" font-family="Helvetica, Arial, sans-serif" x="778" y="2069.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2529" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2533" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2531" font-family="Helvetica, Arial, sans-serif" x="778" y="2072.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2532" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2536" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2534" font-family="Helvetica, Arial, sans-serif" x="778" y="2074.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2535" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2539" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2537" font-family="Helvetica, Arial, sans-serif" x="778" y="2076.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2538" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2542" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2540" font-family="Helvetica, Arial, sans-serif" x="778" y="2079.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2541" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2545" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2543" font-family="Helvetica, Arial, sans-serif" x="778" y="2081.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2544" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2548" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2546" font-family="Helvetica, Arial, sans-serif" x="778" y="2084.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2547" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2551" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2549" font-family="Helvetica, Arial, sans-serif" x="778" y="2087.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2550" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2554" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2552" font-family="Helvetica, Arial, sans-serif" x="778" y="2089.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2553" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2557" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2555" font-family="Helvetica, Arial, sans-serif" x="778" y="2092.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2556" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2560" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2558" font-family="Helvetica, Arial, sans-serif" x="778" y="2096.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2559" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2563" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2561" font-family="Helvetica, Arial, sans-serif" x="778" y="2098.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2562" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2566" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2564" font-family="Helvetica, Arial, sans-serif" x="778" y="2101.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2565" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2569" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2567" font-family="Helvetica, Arial, sans-serif" x="778" y="2104.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2568" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2572" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2570" font-family="Helvetica, Arial, sans-serif" x="778" y="2106.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2571" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2575" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2573" font-family="Helvetica, Arial, sans-serif" x="778" y="2109.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2574" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2578" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2576" font-family="Helvetica, Arial, sans-serif" x="778" y="2111.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2577" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2581" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2579" font-family="Helvetica, Arial, sans-serif" x="778" y="2113.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2580" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2584" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2582" font-family="Helvetica, Arial, sans-serif" x="778" y="2116.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2583" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2587" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2585" font-family="Helvetica, Arial, sans-serif" x="778" y="2119.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2586" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2590" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2588" font-family="Helvetica, Arial, sans-serif" x="778" y="2122.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2589" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2593" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2591" font-family="Helvetica, Arial, sans-serif" x="778" y="2126.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2592" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2596" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2594" font-family="Helvetica, Arial, sans-serif" x="778" y="2128.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2595" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2599" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2597" font-family="Helvetica, Arial, sans-serif" x="778" y="2130.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2598" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2602" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2600" font-family="Helvetica, Arial, sans-serif" x="778" y="2133.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2601" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2605" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2603" font-family="Helvetica, Arial, sans-serif" x="778" y="2135.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2604" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2608" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2606" font-family="Helvetica, Arial, sans-serif" x="778" y="2138.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2607" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2611" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2609" font-family="Helvetica, Arial, sans-serif" x="778" y="2140.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2610" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2614" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2612" font-family="Helvetica, Arial, sans-serif" x="778" y="2142.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2613" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2617" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2615" font-family="Helvetica, Arial, sans-serif" x="778" y="2145.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2616" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2620" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2618" font-family="Helvetica, Arial, sans-serif" x="778" y="2147.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2619" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2623" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2621" font-family="Helvetica, Arial, sans-serif" x="778" y="2150.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2622" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2626" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2624" font-family="Helvetica, Arial, sans-serif" x="778" y="2152.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2625" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2629" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2627" font-family="Helvetica, Arial, sans-serif" x="778" y="2155.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2628" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2632" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2630" font-family="Helvetica, Arial, sans-serif" x="778" y="2157.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2631" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2635" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2633" font-family="Helvetica, Arial, sans-serif" x="778" y="2159.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2634" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2638" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2636" font-family="Helvetica, Arial, sans-serif" x="778" y="2163.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2637" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2641" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2639" font-family="Helvetica, Arial, sans-serif" x="778" y="2164.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2640" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2644" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2642" font-family="Helvetica, Arial, sans-serif" x="778" y="2167.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2643" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2647" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2645" font-family="Helvetica, Arial, sans-serif" x="778" y="2169.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2646" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2650" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2648" font-family="Helvetica, Arial, sans-serif" x="778" y="2172.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2649" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2653" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2651" font-family="Helvetica, Arial, sans-serif" x="778" y="2174.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2652" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2656" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2654" font-family="Helvetica, Arial, sans-serif" x="778" y="2177.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2655" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2659" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2657" font-family="Helvetica, Arial, sans-serif" x="778" y="2179.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2658" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2662" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2660" font-family="Helvetica, Arial, sans-serif" x="778" y="2181.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2661" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2665" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2663" font-family="Helvetica, Arial, sans-serif" x="778" y="2184.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2664" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2668" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2666" font-family="Helvetica, Arial, sans-serif" x="778" y="2187.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2667" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2671" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2669" font-family="Helvetica, Arial, sans-serif" x="778" y="2189.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2670" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2674" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2672" font-family="Helvetica, Arial, sans-serif" x="778" y="2191.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2673" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2677" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2675" font-family="Helvetica, Arial, sans-serif" x="778" y="2194.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2676" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2680" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2678" font-family="Helvetica, Arial, sans-serif" x="778" y="2196.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2679" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2683" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2681" font-family="Helvetica, Arial, sans-serif" x="778" y="2199.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2682" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2686" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2684" font-family="Helvetica, Arial, sans-serif" x="778" y="2201.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2685" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2689" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2687" font-family="Helvetica, Arial, sans-serif" x="778" y="2204.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2688" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2692" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2690" font-family="Helvetica, Arial, sans-serif" x="778" y="2207.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2691" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2695" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2693" font-family="Helvetica, Arial, sans-serif" x="778" y="2210.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2694" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2698" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2696" font-family="Helvetica, Arial, sans-serif" x="778" y="2212.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2697" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2701" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2699" font-family="Helvetica, Arial, sans-serif" x="778" y="2215.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2700" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2704" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2702" font-family="Helvetica, Arial, sans-serif" x="778" y="2217.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2703" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2707" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2705" font-family="Helvetica, Arial, sans-serif" x="778" y="2219.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2706" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2710" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2708" font-family="Helvetica, Arial, sans-serif" x="778" y="2222.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2709" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2713" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2711" font-family="Helvetica, Arial, sans-serif" x="778" y="2224.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2712" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2716" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2714" font-family="Helvetica, Arial, sans-serif" x="778" y="2227.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2715" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2719" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2717" font-family="Helvetica, Arial, sans-serif" x="778" y="2229.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2718" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2722" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2720" font-family="Helvetica, Arial, sans-serif" x="778" y="2232.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2721" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2725" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2723" font-family="Helvetica, Arial, sans-serif" x="778" y="2234.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2724" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2728" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2726" font-family="Helvetica, Arial, sans-serif" x="778" y="2236.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2727" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2731" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2729" font-family="Helvetica, Arial, sans-serif" x="778" y="2239.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2730" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2734" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2732" font-family="Helvetica, Arial, sans-serif" x="778" y="2241.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2733" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2737" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2735" font-family="Helvetica, Arial, sans-serif" x="778" y="2244.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2736" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2740" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2738" font-family="Helvetica, Arial, sans-serif" x="778" y="2247.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2739" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2743" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2741" font-family="Helvetica, Arial, sans-serif" x="778" y="2249.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2742" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2746" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2744" font-family="Helvetica, Arial, sans-serif" x="778" y="2251.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2745" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2749" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2747" font-family="Helvetica, Arial, sans-serif" x="778" y="2254.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2748" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2752" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2750" font-family="Helvetica, Arial, sans-serif" x="778" y="2256.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2751" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2755" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2753" font-family="Helvetica, Arial, sans-serif" x="778" y="2258.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2754" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2758" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2756" font-family="Helvetica, Arial, sans-serif" x="778" y="2261.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2757" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2761" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2759" font-family="Helvetica, Arial, sans-serif" x="778" y="2264.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2760" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2764" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2762" font-family="Helvetica, Arial, sans-serif" x="778" y="2267.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2763" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2767" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2765" font-family="Helvetica, Arial, sans-serif" x="778" y="2269.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2766" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2770" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2768" font-family="Helvetica, Arial, sans-serif" x="778" y="2271.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2769" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2773" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2771" font-family="Helvetica, Arial, sans-serif" x="778" y="2273.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2772" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2776" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2774" font-family="Helvetica, Arial, sans-serif" x="778" y="2277.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2775" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2779" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2777" font-family="Helvetica, Arial, sans-serif" x="778" y="2279.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2778" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2782" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2780" font-family="Helvetica, Arial, sans-serif" x="778" y="2282.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2781" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2785" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2783" font-family="Helvetica, Arial, sans-serif" x="778" y="2284.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2784" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2788" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2786" font-family="Helvetica, Arial, sans-serif" x="778" y="2287.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2787" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2791" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2789" font-family="Helvetica, Arial, sans-serif" x="778" y="2289.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2790" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2794" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2792" font-family="Helvetica, Arial, sans-serif" x="778" y="2291.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2793" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2797" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2795" font-family="Helvetica, Arial, sans-serif" x="778" y="2294.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2796" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2800" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2798" font-family="Helvetica, Arial, sans-serif" x="778" y="2297.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2799" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2803" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2801" font-family="Helvetica, Arial, sans-serif" x="778" y="2299.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2802" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2806" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2804" font-family="Helvetica, Arial, sans-serif" x="778" y="2301.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2805" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2809" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2807" font-family="Helvetica, Arial, sans-serif" x="778" y="2304.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2808" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2812" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2810" font-family="Helvetica, Arial, sans-serif" x="778" y="2307.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2811" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2815" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2813" font-family="Helvetica, Arial, sans-serif" x="778" y="2309.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2814" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2818" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2816" font-family="Helvetica, Arial, sans-serif" x="778" y="2311.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2817" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2821" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2819" font-family="Helvetica, Arial, sans-serif" x="778" y="2313.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2820" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2824" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2822" font-family="Helvetica, Arial, sans-serif" x="778" y="2317.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2823" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2827" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2825" font-family="Helvetica, Arial, sans-serif" x="778" y="2320.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2826" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2830" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2828" font-family="Helvetica, Arial, sans-serif" x="778" y="2322.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2829" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2833" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2831" font-family="Helvetica, Arial, sans-serif" x="778" y="2325.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2832" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2836" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2834" font-family="Helvetica, Arial, sans-serif" x="778" y="2327.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2835" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2839" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2837" font-family="Helvetica, Arial, sans-serif" x="778" y="2330.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2838" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2842" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2840" font-family="Helvetica, Arial, sans-serif" x="778" y="2332.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2841" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2845" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2843" font-family="Helvetica, Arial, sans-serif" x="778" y="2335.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2844" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2848" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2846" font-family="Helvetica, Arial, sans-serif" x="778" y="2337.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2847" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2851" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2849" font-family="Helvetica, Arial, sans-serif" x="778" y="2340.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2850" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2854" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2852" font-family="Helvetica, Arial, sans-serif" x="778" y="2342.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2853" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2857" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2855" font-family="Helvetica, Arial, sans-serif" x="778" y="2345.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2856" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2860" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2858" font-family="Helvetica, Arial, sans-serif" x="778" y="2347.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2859" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2863" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2861" font-family="Helvetica, Arial, sans-serif" x="778" y="2349.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2862" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2866" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2864" font-family="Helvetica, Arial, sans-serif" x="778" y="2352.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2865" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2869" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2867" font-family="Helvetica, Arial, sans-serif" x="778" y="2354.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2868" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2872" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2870" font-family="Helvetica, Arial, sans-serif" x="778" y="2356.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2871" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2875" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2873" font-family="Helvetica, Arial, sans-serif" x="778" y="2359.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2874" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2878" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2876" font-family="Helvetica, Arial, sans-serif" x="778" y="2361.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2877" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2881" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2879" font-family="Helvetica, Arial, sans-serif" x="778" y="2364.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2880" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2884" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2882" font-family="Helvetica, Arial, sans-serif" x="778" y="2366.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2883" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2887" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2885" font-family="Helvetica, Arial, sans-serif" x="778" y="2370.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2886" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2890" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2888" font-family="Helvetica, Arial, sans-serif" x="778" y="2372.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2889" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2893" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2891" font-family="Helvetica, Arial, sans-serif" x="778" y="2375.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2892" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2896" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2894" font-family="Helvetica, Arial, sans-serif" x="778" y="2377.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2895" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2899" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2897" font-family="Helvetica, Arial, sans-serif" x="778" y="2380.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2898" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2902" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2900" font-family="Helvetica, Arial, sans-serif" x="778" y="2383.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2901" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2905" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2903" font-family="Helvetica, Arial, sans-serif" x="778" y="2386.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2904" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2908" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2906" font-family="Helvetica, Arial, sans-serif" x="778" y="2388.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2907" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2911" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2909" font-family="Helvetica, Arial, sans-serif" x="778" y="2390.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2910" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2914" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2912" font-family="Helvetica, Arial, sans-serif" x="778" y="2393.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2913" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2917" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2915" font-family="Helvetica, Arial, sans-serif" x="778" y="2396.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2916" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2920" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2918" font-family="Helvetica, Arial, sans-serif" x="778" y="2400.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2919" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2923" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2921" font-family="Helvetica, Arial, sans-serif" x="778" y="2402.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2922" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2926" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2924" font-family="Helvetica, Arial, sans-serif" x="778" y="2404.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2925" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2929" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2927" font-family="Helvetica, Arial, sans-serif" x="778" y="2406.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2928" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2932" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2930" font-family="Helvetica, Arial, sans-serif" x="778" y="2409.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2931" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2935" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2933" font-family="Helvetica, Arial, sans-serif" x="778" y="2411.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2934" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2938" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2936" font-family="Helvetica, Arial, sans-serif" x="778" y="2414.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2937" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2941" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2939" font-family="Helvetica, Arial, sans-serif" x="778" y="2416.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2940" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2944" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2942" font-family="Helvetica, Arial, sans-serif" x="778" y="2419.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2943" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2947" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2945" font-family="Helvetica, Arial, sans-serif" x="778" y="2422.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2946" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2950" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2948" font-family="Helvetica, Arial, sans-serif" x="778" y="2425.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2949" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2953" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2951" font-family="Helvetica, Arial, sans-serif" x="778" y="2428.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2952" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2956" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2954" font-family="Helvetica, Arial, sans-serif" x="778" y="2430.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2955" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2959" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2957" font-family="Helvetica, Arial, sans-serif" x="778" y="2433.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2958" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2962" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2960" font-family="Helvetica, Arial, sans-serif" x="778" y="2435.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2961" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2965" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2963" font-family="Helvetica, Arial, sans-serif" x="778" y="2439.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2964" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2968" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2966" font-family="Helvetica, Arial, sans-serif" x="778" y="2442.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2967" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2971" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2969" font-family="Helvetica, Arial, sans-serif" x="778" y="2445.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2970" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2974" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2972" font-family="Helvetica, Arial, sans-serif" x="778" y="2447.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2973" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2977" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2975" font-family="Helvetica, Arial, sans-serif" x="778" y="2450.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2976" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2980" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2978" font-family="Helvetica, Arial, sans-serif" x="778" y="2452.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2979" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2983" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2981" font-family="Helvetica, Arial, sans-serif" x="778" y="2454.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2982" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2986" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2984" font-family="Helvetica, Arial, sans-serif" x="778" y="2458.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2985" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2989" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2987" font-family="Helvetica, Arial, sans-serif" x="778" y="2461.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2988" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2992" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2990" font-family="Helvetica, Arial, sans-serif" x="778" y="2463.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2991" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2995" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2993" font-family="Helvetica, Arial, sans-serif" x="778" y="2465.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2994" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2998" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2996" font-family="Helvetica, Arial, sans-serif" x="778" y="2467.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2997" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3001" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2999" font-family="Helvetica, Arial, sans-serif" x="778" y="2470.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3000" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3004" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3002" font-family="Helvetica, Arial, sans-serif" x="778" y="2472.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3003" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3007" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dbase::MessagePumpForIO::WaitForIOCompletion(unsigned long, base::MessagePumpForIO::IOHandler*)%0a%0dbase::MessagePumpForIO::DoRunLoop(void)%0a%0dbase::MessagePumpWin::Run(base::MessagePump::Delegate*)%0a%0dMessageLoop::RunHandler(void)%0a%0dbase::Thread::ThreadMain(void)%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3005" font-family="Helvetica, Arial, sans-serif" x="778" y="2475.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3006" dy="6.5" x="778" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3010" href="data:text/plain,Interpret%0a%0dJS::Rooted&lt;js::SavedStacks::LocationValue&gt;::~Rooted&lt;js::SavedStacks::LocationValue&gt;(void)%0a%0djs::SavedStacks::insertFrames(JSContext*, JS::MutableHandle&lt;js::SavedFrame*&gt;, mozilla::Variant&lt;JS::AllFrames, JS::MaxFrames, JS::FirstSubsumedFrame&gt;&amp;&amp;)%0a%0dPR_StringToNetAddr%0a%0dmozilla::net::nsProtocolProxyService::CanUseProxy(nsIURI*, int)%0a%0dmozilla::net::nsProtocolProxyService::Resolve_Internal(nsIChannel*, mozilla::net::nsProtocolInfo const&amp;, unsigned int, bool*, nsIProxyInfo**)%0a%0dmozilla::net::nsProtocolProxyService::AsyncResolveInternal(nsIChannel*, unsigned int, nsIProtocolProxyCallback*, nsICancelable**, bool, nsIEventTarget*)%0a%0dmozilla::net::LoadInfo::GetForceInheritPrincipalOverruleOwner(bool*)%0a%0dnsScriptSecurityManager::GetChannelResultPrincipal(nsIChannel*, nsIPrincipal**, bool)%0a%0dnsScriptSecurityManager::GetChannelResultStoragePrincipal(nsIChannel*, nsIPrincipal**)%0a%0dnsCookieService::CountCookiesFromHostInternal(nsTSubstring&lt;char&gt; const&amp;, unsigned int, unsigned int*)%0a%0dracy_profiler_add_marker%0a%0dMaybePageAlloc%0a%0dmozilla::layers::PAPZInputBridgeChild::SendUpdateWheelTransaction(mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt; const&amp;, mozilla::EventMessage const&amp;)%0a%0dmozilla::net::PHttpChannelParent::SendDeleteSelf(void)%0a%0dPHttpChannel::Msg_DeleteSelf%0a%0dmozilla::net::HttpChannelParent::OnRedirectResult(bool)%0a%0dmozilla::net::InterceptedHttpChannel::OnRedirectVerifyCallback(nsresult)%0a%0dmozilla::dom::Element::SetAttr(int, nsAtom*, nsAtom*, nsTSubstring&lt;char16_t&gt; const&amp;, nsIPrincipal*, bool)%0a%0d[js] update%0a%0d[js] _hide%0a%0d[js] update%0a%0d[js] onLocationChange%0a%0djs::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] getWindowTitleForBrowser%0a%0d[js] updateTitlebar%0a%0djs::InternalBarrierMethods&lt;js::WasmFunctionScope*&gt;::readBarrier(js::WasmFunctionScope*)%0a%0djs::ObjectGroup::newArrayObject(JSContext*, JS::Value const*, uint64_t, js::NewObjectKind, js::ObjectGroup::NewArrayKind)%0a%0d0x2c887c22305%0a%0d[js] some%0a%0d[js] getCustomInterfaceCallback%0a%0dnsTSubstring&lt;char&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3008" font-family="Helvetica, Arial, sans-serif" x="1085" y="36.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3009" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a><a id="SvgjsA3013" href="data:text/plain,nsRefreshDriver::MostRecentRefresh(void)%0a%0dmozilla::RestyleManager::DoProcessPendingRestyles(mozilla::ServoTraversalFlags)%0a%0d[js] _mouseenter%0a%0dnsCSSRendering::DetermineBackgroundColor(nsPresContext*, mozilla::ComputedStyle*, nsIFrame*, bool&amp;, bool&amp;)%0a%0dsmallvec::SmallVec&lt;[wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;; 1]&gt;::spilled&lt;[wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;; 1]&gt;%0a%0dsmallvec::{{impl}}::deref&lt;[style::values::specified::calc::CalcNode; 1]&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::stylist::Rule&gt;::get_all_matching_rules%0a%0dmozilla::EventTargetChainItem::GetEventTargetParent(mozilla::EventChainPreVisitor&amp;)%0a%0djs::FrameIter::FrameIter(JSContext*, js::FrameIter::DebuggerEvalOption, JSPrincipals*)%0a%0dJS::DescribeScriptedCaller(JSContext*, JS::AutoFilename*, unsigned int*, unsigned int*)%0a%0dnsJSUtils::GetCallingLocation(JSContext*, nsTSubstring&lt;char&gt;&amp;, unsigned int*, unsigned int*)%0a%0dnsIFrame::IsStackingContext(nsStyleDisplay const*, nsStylePosition const*, nsStyleEffects const*, bool)%0a%0dmozilla::RestyleManager::ProcessPostTraversal(mozilla::dom::Element*, mozilla::ComputedStyle*, mozilla::ServoRestyleState&amp;, mozilla::ServoPostTraversalFlags)%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate_dom_descendants_of%0a%0dnsContentUtils::ShouldResistFingerprinting(void)%0a%0dmozilla::WidgetEvent::IsBlockedForFingerprintingResistance(void)%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3011" font-family="Helvetica, Arial, sans-serif" x="1085" y="39.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3012" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsRefreshDriver::MostRecentRefresh(void)</tspan></text></a><a id="SvgjsA3016" href="data:text/plain,style::properties::cascade::apply_declarations%0a%0dCanEnterBaselineJIT%0a%0djs::jit::JitScript::initICEntriesAndBytecodeTypeMap(JSContext*, JSScript*)%0a%0d[js] startSearch%0a%0djs::InternalBarrierMethods&lt;js::WasmFunctionScope*&gt;::readBarrier(js::WasmFunctionScope*)%0a%0djs::RegExpShared::execute(JSContext*, JS::MutableHandle&lt;js::RegExpShared*&gt;, JS::Handle&lt;JSLinearString*&gt;, uint64_t, js::VectorMatchPairs*, uint64_t*)%0a%0d[js] [Symbol.split]%0a%0d[js] split%0a%0d[js] splitString%0a%0djs::NativeObject::copyDenseElements(unsigned int, JS::Value const*, unsigned int)%0a%0djs::NativeObject::setOrExtendDenseElements(JSContext*, unsigned int, JS::Value const*, unsigned int, js::ShouldUpdateTypes)%0a%0djs::NewCopiedArrayTryUseGroup(JSContext*, JS::Handle&lt;js::ObjectGroup*&gt;, JS::Value const*, uint64_t, js::NewObjectKind, js::ShouldUpdateTypes)%0a%0djs::ObjectGroup::newArrayObject(JSContext*, JS::Value const*, uint64_t, js::NewObjectKind, js::ObjectGroup::NewArrayKind)%0a%0dmozilla::image::SurfaceCacheImpl::DoUnlockSurfaces(mozilla::NotNull&lt;mozilla::image::ImageSurfaceCache*&gt;, bool, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::SurfaceCacheImpl::UnlockImage(mozilla::image::Image* const, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::RasterImage::UnlockImage(void)%0a%0dimgRequestProxy::UnlockImage(void)%0a%0dnsImageLoadingContent::MakePendingRequestCurrent(void)%0a%0dmozilla::net::nsSimpleURI::SetPathQueryRefEscaped(nsTSubstring&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::nsSimpleURI::SetSpecInternal(nsTSubstring&lt;char&gt; const&amp;)%0a%0d[js] _updateResults%0a%0dnsXULPrototypeElement::TraceAllScripts(JSTracer*)%0a%0dmozilla::dom::TraceBlackJS(JSTracer*, bool)%0a%0dXPCJSRuntime::TraceNativeBlackRoots(JSTracer*)%0a%0djs::gc::GCRuntime::traceRuntimeCommon(JSTracer*, js::gc::GCRuntime::TraceOrMarkRuntime)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::AtomsTable::tracePinnedAtoms(JSTracer*, js::AutoAccessAtomsZone const&amp;)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::changeTableSize(unsigned int, mozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::FailureBehavior)%0a%0dJSScript::releaseScriptCounts(js::ScriptCounts*)%0a%0dJSScript::destroyScriptCounts(void)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::LifoAlloc::transferFrom(js::LifoAlloc*)%0a%0djs::jit::JitScript::Destroy(JS::Zone*, js::jit::JitScript*)%0a%0dJSScript::releaseJitScript(JSFreeOp*)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::gc::GCRuntime::discardJITCodeForGC(void)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::incrementalSlice(js::SliceBudget&amp;, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::GCRuntime::collect%0a%0djs::TenuringTracer::moveSlotsToTenured(js::NativeObject*, js::NativeObject*)%0a%0djs::Nursery::collect%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0dmozilla::net::nsHttpTransaction::`vector deleting destructor'(unsigned int)%0a%0dPL_strncasestr%0a%0dmozilla::net::nsStandardURL::CheckIfHostIsAscii(void)%0a%0dmozilla::net::nsStandardURL::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmozilla::net::nsStandardURL::TemplatedMutator&lt;mozilla::net::nsStandardURL&gt;::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3014" font-family="Helvetica, Arial, sans-serif" x="1085" y="41.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3015" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">style::properties::cascade::apply_declarations</tspan></text></a><a id="SvgjsA3019" href="data:text/plain,style::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoDisplay&gt;::specifies_transitions%0a%0d&lt;style::gecko::wrapper::GeckoElement as style::dom::TElement&gt;::might_need_transitions_update%0a%0dstyle::matching::PrivateMatchMethods::process_animations%0a%0dnsRefreshDriver::MostRecentRefresh(void)%0a%0dmozilla::RestyleManager::DoProcessPendingRestyles(mozilla::ServoTraversalFlags)%0a%0d[js] _mouseenter%0a%0dnsCSSRendering::DetermineBackgroundColor(nsPresContext*, mozilla::ComputedStyle*, nsIFrame*, bool&amp;, bool&amp;)%0a%0dsmallvec::SmallVec&lt;[wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;; 1]&gt;::spilled&lt;[wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;; 1]&gt;%0a%0dsmallvec::{{impl}}::deref&lt;[style::values::specified::calc::CalcNode; 1]&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::stylist::Rule&gt;::get_all_matching_rules%0a%0dmozilla::EventTargetChainItem::GetEventTargetParent(mozilla::EventChainPreVisitor&amp;)%0a%0djs::FrameIter::FrameIter(JSContext*, js::FrameIter::DebuggerEvalOption, JSPrincipals*)%0a%0dJS::DescribeScriptedCaller(JSContext*, JS::AutoFilename*, unsigned int*, unsigned int*)%0a%0dnsJSUtils::GetCallingLocation(JSContext*, nsTSubstring&lt;char&gt;&amp;, unsigned int*, unsigned int*)%0a%0dnsIFrame::IsStackingContext(nsStyleDisplay const*, nsStylePosition const*, nsStyleEffects const*, bool)%0a%0dmozilla::RestyleManager::ProcessPostTraversal(mozilla::dom::Element*, mozilla::ComputedStyle*, mozilla::ServoRestyleState&amp;, mozilla::ServoPostTraversalFlags)%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate_dom_descendants_of%0a%0dnsContentUtils::ShouldResistFingerprinting(void)%0a%0dmozilla::WidgetEvent::IsBlockedForFingerprintingResistance(void)%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3017" font-family="Helvetica, Arial, sans-serif" x="1085" y="43.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3018" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">style::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoDisplay&gt;::specifies_transitions</tspan></text></a><a id="SvgjsA3022" href="data:text/plain,NtUserCallOneParam%0a%0dmozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dRtlActivateActivationContextUnsafeFast%0a%0dint64_t UserCallWinProcCheckWow(struct _ACTIVATION_CONTEXT *,int64_t ( *)(struct tagWND *,unsigned int,uint64_t,int64_t),struct HWND__*,enum _WM_VALUE,uint64_t,int64_t,void *,int)%0a%0duhash_hashLong_65%0a%0dnsXULTooltipListener::MouseMove(mozilla::dom::Event*)%0a%0dnsXULTooltipListener::HandleEvent(mozilla::dom::Event*)%0a%0dmozilla::EventListenerManager::HandleEventSubType(mozilla::EventListenerManager::Listener*, mozilla::dom::Event*, mozilla::dom::EventTarget*)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dNtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3020" font-family="Helvetica, Arial, sans-serif" x="1085" y="46.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3021" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserCallOneParam</tspan></text></a><a id="SvgjsA3025" href="data:text/plain,NtUserMessageCall%0a%0dint64_t RealDefWindowProcWorker(struct tagWND *,unsigned int,uint64_t,int64_t,unsigned long)%0a%0dDefWindowProcW%0a%0dCallWindowProcW%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dcore::slice::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::process_descendant_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dstyle::data::ElementData::invalidate_style_if_needed%0a%0dstyle::traversal::DomTraversal::pre_traverse%0a%0dgeckoservo::glue::traverse_subtree%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dmozilla::dom::ToJSValue&lt;mozilla::dom::EventTarget&gt;(JSContext*, mozilla::dom::EventTarget&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3023" font-family="Helvetica, Arial, sans-serif" x="1085" y="48.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3024" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserMessageCall</tspan></text></a><a id="SvgjsA3028" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3026" font-family="Helvetica, Arial, sans-serif" x="1085" y="51.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3027" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3031" href="data:text/plain,nsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3029" font-family="Helvetica, Arial, sans-serif" x="1085" y="53.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3030" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsGlobalWindowInner::GetGlobalJSObject(void)</tspan></text></a><a id="SvgjsA3034" href="data:text/plain,core::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3032" font-family="Helvetica, Arial, sans-serif" x="1085" y="56.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3033" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">core::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;</tspan></text></a><a id="SvgjsA3037" href="data:text/plain,style::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3035" font-family="Helvetica, Arial, sans-serif" x="1085" y="58.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3036" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">style::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules</tspan></text></a><a id="SvgjsA3040" href="data:text/plain,core::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dstyle::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3038" font-family="Helvetica, Arial, sans-serif" x="1085" y="61.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3039" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;</tspan></text></a><a id="SvgjsA3043" href="data:text/plain,core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::tokenizer::Tokenizer::is_eof%0a%0dcssparser::tokenizer::Tokenizer::next_byte%0a%0dcssparser::parser::Parser::expect_exhausted%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcore::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dstyle::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3041" font-family="Helvetica, Arial, sans-serif" x="1085" y="63.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3042" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once</tspan></text></a><a id="SvgjsA3046" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3044" font-family="Helvetica, Arial, sans-serif" x="1085" y="65.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3045" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3049" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3047" font-family="Helvetica, Arial, sans-serif" x="1085" y="68.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3048" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3052" href="data:text/plain,mozilla::SchedulerGroup::EventTargetFor(mozilla::TaskCategory)%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::tokenizer::Tokenizer::is_eof%0a%0dcssparser::tokenizer::Tokenizer::next_byte%0a%0dcssparser::parser::Parser::expect_exhausted%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcore::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dstyle::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3050" font-family="Helvetica, Arial, sans-serif" x="1085" y="70.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3051" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::SchedulerGroup::EventTargetFor(mozilla::TaskCategory)</tspan></text></a><a id="SvgjsA3055" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3053" font-family="Helvetica, Arial, sans-serif" x="1085" y="73.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3054" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3058" href="data:text/plain,NtFindAtom%0a%0dInternalFindAtom%0a%0dGetPropW%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dCallWindowProcCrashProtected%0a%0dnsWindow::WindowProc(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dint64_t UserCallWinProcCheckWow(struct _ACTIVATION_CONTEXT *,int64_t ( *)(struct tagWND *,unsigned int,uint64_t,int64_t),struct HWND__*,enum _WM_VALUE,uint64_t,int64_t,void *,int)%0a%0dDispatchMessageWorker%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dInitOnceExecuteOnce%0a%0dtimeGetTime%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dmozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3056" font-family="Helvetica, Arial, sans-serif" x="1085" y="75.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3057" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtFindAtom</tspan></text></a><a id="SvgjsA3061" href="data:text/plain,mozilla::SVGObserverUtils::GetAndObserveMasks(nsIFrame*, nsTArray&lt;nsSVGMaskFrame*&gt;*)%0a%0dmozilla::SchedulerGroup::EventTargetFor(mozilla::TaskCategory)%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::tokenizer::Tokenizer::is_eof%0a%0dcssparser::tokenizer::Tokenizer::next_byte%0a%0dcssparser::parser::Parser::expect_exhausted%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcore::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dstyle::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3059" font-family="Helvetica, Arial, sans-serif" x="1085" y="78.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3060" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::SVGObserverUtils::GetAndObserveMasks(nsIFrame*, nsTArray&lt;nsSVGMaskFrame*&gt;*)</tspan></text></a><a id="SvgjsA3064" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3062" font-family="Helvetica, Arial, sans-serif" x="1085" y="80.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3063" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3067" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3065" font-family="Helvetica, Arial, sans-serif" x="1085" y="83.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3066" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3070" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3068" font-family="Helvetica, Arial, sans-serif" x="1085" y="85.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3069" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3073" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3071" font-family="Helvetica, Arial, sans-serif" x="1085" y="87.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3072" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3076" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3074" font-family="Helvetica, Arial, sans-serif" x="1085" y="90.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3075" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3079" href="data:text/plain,mozilla::ipc::ReadIPDLParam&lt;mozilla::layers::APZEventResult&gt;%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dmozilla::SVGObserverUtils::GetAndObserveMasks(nsIFrame*, nsTArray&lt;nsSVGMaskFrame*&gt;*)%0a%0dmozilla::SchedulerGroup::EventTargetFor(mozilla::TaskCategory)%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::tokenizer::Tokenizer::is_eof%0a%0dcssparser::tokenizer::Tokenizer::next_byte%0a%0dcssparser::parser::Parser::expect_exhausted%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcore::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dstyle::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3077" font-family="Helvetica, Arial, sans-serif" x="1085" y="92.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3078" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::ipc::ReadIPDLParam&lt;mozilla::layers::APZEventResult&gt;</tspan></text></a><a id="SvgjsA3082" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3080" font-family="Helvetica, Arial, sans-serif" x="1085" y="95.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3081" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3085" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3083" font-family="Helvetica, Arial, sans-serif" x="1085" y="97.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3084" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3088" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3086" font-family="Helvetica, Arial, sans-serif" x="1085" y="100.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3087" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3091" href="data:text/plain,mozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::ipc::ReadIPDLParam&lt;mozilla::layers::APZEventResult&gt;%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dmozilla::SVGObserverUtils::GetAndObserveMasks(nsIFrame*, nsTArray&lt;nsSVGMaskFrame*&gt;*)%0a%0dmozilla::SchedulerGroup::EventTargetFor(mozilla::TaskCategory)%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::tokenizer::Tokenizer::is_eof%0a%0dcssparser::tokenizer::Tokenizer::next_byte%0a%0dcssparser::parser::Parser::expect_exhausted%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcore::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dstyle::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3089" font-family="Helvetica, Arial, sans-serif" x="1085" y="102.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3090" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)</tspan></text></a><a id="SvgjsA3094" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3092" font-family="Helvetica, Arial, sans-serif" x="1085" y="105.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3093" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3097" href="data:text/plain,NtUserFindExistingCursorIcon%0a%0dstruct HICON__* FindExistingCursorIcon(unsigned short *,unsigned short const *,struct tagCURSORFIND *)%0a%0dstruct HICON__* LoadIcoCur(struct HINSTANCE__*,unsigned short const *,unsigned short *,unsigned long,unsigned long,unsigned int)%0a%0dLoadCursorW%0a%0dnsWindow::SetCursor(nsCursor, imgIContainer*, unsigned int, unsigned int)%0a%0dmozilla::EventStateManager::SetCursor(mozilla::StyleCursorKind, imgIContainer*, mozilla::Maybe&lt;mozilla::gfx::IntPointTyped&lt;mozilla::gfx::UnknownUnits&gt; &gt; const&amp;, nsIWidget*, bool)%0a%0dmozilla::EventStateManager::UpdateCursor(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsEventStatus*)%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithTarget(mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, bool, nsIContent**, nsIContent*)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::PresShell::EventHandler::DispatchPrecedingPointerEvent(nsIFrame*, mozilla::WidgetGUIEvent*, nsIContent*, bool, mozilla::PresShell::EventHandler::EventTargetData*, nsEventStatus*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::ScrollFrameHelper::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0dmozilla::ViewportFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0dViewportFrame::BuildDisplayList%0a%0dnsSubDocumentFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0dmozilla::ScrollFrameHelper::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0dmozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dNtUserMessageCall%0a%0dint64_t RealDefWindowProcWorker(struct tagWND *,unsigned int,uint64_t,int64_t,unsigned long)%0a%0dDefWindowProcW%0a%0dCallWindowProcW%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dcore::slice::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::process_descendant_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dstyle::data::ElementData::invalidate_style_if_needed%0a%0dstyle::traversal::DomTraversal::pre_traverse%0a%0dgeckoservo::glue::traverse_subtree%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dmozilla::dom::ToJSValue&lt;mozilla::dom::EventTarget&gt;(JSContext*, mozilla::dom::EventTarget&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3095" font-family="Helvetica, Arial, sans-serif" x="1085" y="163.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3096" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserFindExistingCursorIcon</tspan></text></a><a id="SvgjsA3100" href="data:text/plain,NtUserGetKeyState%0a%0dGetKeyState%0a%0dmozilla::widget::ModifierKeyState::Update(void)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dnsWindow::DispatchMouseEvent(mozilla::EventMessage, uint64_t, int64_t, bool, short, unsigned short, WinPointerInfo*)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3098" font-family="Helvetica, Arial, sans-serif" x="1085" y="166.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3099" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetKeyState</tspan></text></a><a id="SvgjsA3103" href="data:text/plain,arena_t::DallocSmall(arena_chunk_t*, void*, arena_chunk_map_t*)%0a%0dnsTHashtable&lt;nsCStringHashKey&gt;::s_HashKey(void const*)%0a%0dPLDHashTable::Search(void const*)%0a%0d`anonymous namespace'::KeyedHistogram::GetHistogram%0a%0d`anonymous namespace'::KeyedHistogram::Add%0a%0d0x2c887ac7276%0a%0dnsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, mozilla::ReflowOutput&amp;, mozilla::ReflowInput const&amp;, mozilla::WritingMode const&amp;, mozilla::LogicalPoint const&amp;, nsSize const&amp;, nsIFrame::ReflowChildFlags, nsReflowStatus&amp;, nsOverflowContinuationTracker*)%0a%0dnsHTMLScrollFrame::ReflowScrolledFrame(mozilla::ScrollReflowInput*, bool, bool, mozilla::ReflowOutput*)%0a%0dnsHTMLScrollFrame::ReflowContents(mozilla::ScrollReflowInput*, mozilla::ReflowOutput const&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3101" font-family="Helvetica, Arial, sans-serif" x="1085" y="168.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3102" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">arena_t::DallocSmall(arena_chunk_t*, void*, arena_chunk_map_t*)</tspan></text></a><a id="SvgjsA3106" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mouseout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::ipc::ReadIPDLParam&lt;mozilla::layers::APZEventResult&gt;%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dmozilla::SVGObserverUtils::GetAndObserveMasks(nsIFrame*, nsTArray&lt;nsSVGMaskFrame*&gt;*)%0a%0dmozilla::SchedulerGroup::EventTargetFor(mozilla::TaskCategory)%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::tokenizer::Tokenizer::is_eof%0a%0dcssparser::tokenizer::Tokenizer::next_byte%0a%0dcssparser::parser::Parser::expect_exhausted%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcore::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dstyle::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3104" font-family="Helvetica, Arial, sans-serif" x="1085" y="171.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3105" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3109" href="data:text/plain,webrender::filterdata::SFilterDataComponent::to_int%0a%0dstyle::stylist::Rule::to_applicable_declaration_block%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate_dom_descendants_of%0a%0dnsContentUtils::ShouldResistFingerprinting(void)%0a%0dmozilla::WidgetEvent::IsBlockedForFingerprintingResistance(void)%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3107" font-family="Helvetica, Arial, sans-serif" x="1085" y="173.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3108" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">webrender::filterdata::SFilterDataComponent::to_int</tspan></text></a><a id="SvgjsA3112" href="data:text/plain,cssparser::parser::Parser::parse_nested_block&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dwebrender::filterdata::SFilterDataComponent::to_int%0a%0dstyle::stylist::Rule::to_applicable_declaration_block%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate_dom_descendants_of%0a%0dnsContentUtils::ShouldResistFingerprinting(void)%0a%0dmozilla::WidgetEvent::IsBlockedForFingerprintingResistance(void)%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3110" font-family="Helvetica, Arial, sans-serif" x="1085" y="175.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3111" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">cssparser::parser::Parser::parse_nested_block&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;</tspan></text></a><a id="SvgjsA3115" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3113" font-family="Helvetica, Arial, sans-serif" x="1085" y="178.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3114" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3118" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3116" font-family="Helvetica, Arial, sans-serif" x="1085" y="180.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3117" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3121" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3119" font-family="Helvetica, Arial, sans-serif" x="1085" y="183.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3120" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3124" href="data:text/plain,mozilla::Dafsa::Lookup(nsTSubstring&lt;char&gt; const&amp;)%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dwebrender::filterdata::SFilterDataComponent::to_int%0a%0dstyle::stylist::Rule::to_applicable_declaration_block%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate_dom_descendants_of%0a%0dnsContentUtils::ShouldResistFingerprinting(void)%0a%0dmozilla::WidgetEvent::IsBlockedForFingerprintingResistance(void)%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3122" font-family="Helvetica, Arial, sans-serif" x="1085" y="185.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3123" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::Dafsa::Lookup(nsTSubstring&lt;char&gt; const&amp;)</tspan></text></a><a id="SvgjsA3127" href="data:text/plain,RtlActivateActivationContextUnsafeFast%0a%0dmozilla::Dafsa::Lookup(nsTSubstring&lt;char&gt; const&amp;)%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dwebrender::filterdata::SFilterDataComponent::to_int%0a%0dstyle::stylist::Rule::to_applicable_declaration_block%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate_dom_descendants_of%0a%0dnsContentUtils::ShouldResistFingerprinting(void)%0a%0dmozilla::WidgetEvent::IsBlockedForFingerprintingResistance(void)%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3125" font-family="Helvetica, Arial, sans-serif" x="1085" y="188.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3126" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">RtlActivateActivationContextUnsafeFast</tspan></text></a><a id="SvgjsA3130" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3128" font-family="Helvetica, Arial, sans-serif" x="1085" y="190.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3129" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3133" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3131" font-family="Helvetica, Arial, sans-serif" x="1085" y="193.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3132" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3136" href="data:text/plain,memset()%0a%0dmozilla::net::nsHttpChannel::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsHttpChannel::~nsHttpChannel(void)%0a%0dmozilla::net::nsAsyncRedirectVerifyHelper::Release(void)%0a%0dmozilla::SegmentedVector&lt;nsCOMPtr&lt;nsISupports&gt;, 4096, mozilla::MallocAllocPolicy&gt;::PopLastN(unsigned int)%0a%0dmozilla::ContentPrincipal::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::LoadInfo::~LoadInfo(void)%0a%0darena_t::DallocSmall(arena_chunk_t*, void*, arena_chunk_map_t*)%0a%0dnsPermission::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::HttpBaseChannel::~HttpBaseChannel(void)%0a%0dmozilla::dom::ReferrerInfo::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::ReferrerInfo::Release(void)%0a%0dmozilla::net::HttpBaseChannel::~HttpBaseChannel(void)%0a%0dmozilla::SegmentedVector&lt;nsCOMPtr&lt;nsISupports&gt;, 4096, mozilla::MallocAllocPolicy&gt;::PopLastN(unsigned int)%0a%0dmozilla::dom::DeferredFinalizerImpl&lt;nsISupports&gt;::DeferredFinalize(unsigned int, void*)%0a%0dmozilla::IncrementalFinalizeRunnable::ReleaseNow(bool)%0a%0dmozilla::IncrementalFinalizeRunnable::Run(void)%0a%0dIncrementalFinalizeRunnable::Run%0a%0d0x2c887ac9525%0a%0d[js] InsertionSort%0a%0d[js] MergeSort%0a%0d[js] sort%0a%0d[js] limitSize%0a%0dPLDHashTable::Search(void const*)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3134" font-family="Helvetica, Arial, sans-serif" x="1085" y="195.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3135" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3139" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3137" font-family="Helvetica, Arial, sans-serif" x="1085" y="197.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3138" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3142" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3140" font-family="Helvetica, Arial, sans-serif" x="1085" y="200.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3141" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3145" href="data:text/plain,NtFindAtom%0a%0dInternalFindAtom%0a%0dGetPropW%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dCallWindowProcCrashProtected%0a%0dnsWindow::WindowProc(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dint64_t UserCallWinProcCheckWow(struct _ACTIVATION_CONTEXT *,int64_t ( *)(struct tagWND *,unsigned int,uint64_t,int64_t),struct HWND__*,enum _WM_VALUE,uint64_t,int64_t,void *,int)%0a%0dDispatchMessageWorker%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dInitOnceExecuteOnce%0a%0dtimeGetTime%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dmozilla::ipc::MessagePump::Run(base::MessagePump::Delegate*)%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dmozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3143" font-family="Helvetica, Arial, sans-serif" x="1085" y="202.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3144" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtFindAtom</tspan></text></a><a id="SvgjsA3148" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3146" font-family="Helvetica, Arial, sans-serif" x="1085" y="205.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3147" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3151" href="data:text/plain,&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold%0a%0dRtlActivateActivationContextUnsafeFast%0a%0dmozilla::Dafsa::Lookup(nsTSubstring&lt;char&gt; const&amp;)%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dwebrender::filterdata::SFilterDataComponent::to_int%0a%0dstyle::stylist::Rule::to_applicable_declaration_block%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate_dom_descendants_of%0a%0dnsContentUtils::ShouldResistFingerprinting(void)%0a%0dmozilla::WidgetEvent::IsBlockedForFingerprintingResistance(void)%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3149" font-family="Helvetica, Arial, sans-serif" x="1085" y="207.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3150" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold</tspan></text></a><a id="SvgjsA3154" href="data:text/plain,[js] preActions%0a%0d&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold%0a%0dRtlActivateActivationContextUnsafeFast%0a%0dmozilla::Dafsa::Lookup(nsTSubstring&lt;char&gt; const&amp;)%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dwebrender::filterdata::SFilterDataComponent::to_int%0a%0dstyle::stylist::Rule::to_applicable_declaration_block%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate_dom_descendants_of%0a%0dnsContentUtils::ShouldResistFingerprinting(void)%0a%0dmozilla::WidgetEvent::IsBlockedForFingerprintingResistance(void)%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3152" font-family="Helvetica, Arial, sans-serif" x="1085" y="210.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3153" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">[js] preActions</tspan></text></a><a id="SvgjsA3157" href="data:text/plain,NtUserMessageCall%0a%0dint64_t RealDefWindowProcWorker(struct tagWND *,unsigned int,uint64_t,int64_t,unsigned long)%0a%0dDefWindowProcW%0a%0dCallWindowProcW%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dcore::slice::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::process_descendant_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dstyle::data::ElementData::invalidate_style_if_needed%0a%0dstyle::traversal::DomTraversal::pre_traverse%0a%0dgeckoservo::glue::traverse_subtree%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dmozilla::dom::ToJSValue&lt;mozilla::dom::EventTarget&gt;(JSContext*, mozilla::dom::EventTarget&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3155" font-family="Helvetica, Arial, sans-serif" x="1085" y="212.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3156" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserMessageCall</tspan></text></a><a id="SvgjsA3160" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3158" font-family="Helvetica, Arial, sans-serif" x="1085" y="215.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3159" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3163" href="data:text/plain,NtUserGetProp%0a%0dGetPropW%0a%0dDispatchClientMessage%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3161" font-family="Helvetica, Arial, sans-serif" x="1085" y="217.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3162" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetProp</tspan></text></a><a id="SvgjsA3166" href="data:text/plain,TlsGetValue%0a%0dnsThread::IsOnCurrentThread(bool*)%0a%0ddetail::ProxyRelease&lt;nsISupports&gt;(char const*, nsIEventTarget*, already_AddRefed&lt;nsISupports&gt;, bool)%0a%0dnsInterfaceRequestorAgg::Release(void)%0a%0djs::gc::AtomMarkingRuntime::markAtom&lt;JSAtom&gt;(JSContext*, JSAtom*)%0a%0d[js] handleEvent%0a%0dmozilla::ApplyClip%0a%0djs::NativeObject::initializeSlotRange(unsigned int, unsigned int)%0a%0d[js] getWrapper%0a%0dRefPtr&lt;mozilla::net::(anonymous namespace)::URIData&gt;::ConstRemovingRefPtrTraits&lt;mozilla::net::(anonymous namespace)::URIData&gt;::Release%0a%0d[js] handleEvent%0a%0dmozilla::net::nsStandardURL::Mutator::QueryInterface(nsID const&amp;, void**)%0a%0dnsstring::conversions::&lt;impl nsstring::nsAString&gt;::fallible_append_latin1_impl%0a%0dnsTextToSubURI::convertURItoUnicode(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsTextToSubURI::UnEscapeURIForUI(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(nsIFrame*, nsDisplayList*, bool)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::net::HttpChannelParent::~HttpChannelParent(void)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3164" font-family="Helvetica, Arial, sans-serif" x="1085" y="220.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3165" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">TlsGetValue</tspan></text></a><a id="SvgjsA3169" href="data:text/plain,RtlQueryPerformanceCounter%0a%0dmozilla::dom::PBrowserParent::SendAsyncMessage(nsTString&lt;char16_t&gt; const&amp;, nsTArray&lt;mozilla::jsipc::CpowEntry&gt; const&amp;, nsIPrincipal*, mozilla::dom::ClonedMessageData const&amp;)%0a%0d[js] unselectedTabHover%0a%0d[js] _mouseenter%0a%0d[js] preActions%0a%0d&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold%0a%0dRtlActivateActivationContextUnsafeFast%0a%0dmozilla::Dafsa::Lookup(nsTSubstring&lt;char&gt; const&amp;)%0a%0dcssparser::parser::Parser::parse_nested_block&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dwebrender::filterdata::SFilterDataComponent::to_int%0a%0dstyle::stylist::Rule::to_applicable_declaration_block%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate_dom_descendants_of%0a%0dnsContentUtils::ShouldResistFingerprinting(void)%0a%0dmozilla::WidgetEvent::IsBlockedForFingerprintingResistance(void)%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3167" font-family="Helvetica, Arial, sans-serif" x="1085" y="222.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3168" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">RtlQueryPerformanceCounter</tspan></text></a><a id="SvgjsA3172" href="data:text/plain,&lt;core::iter::sources::Once&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::iter::sources::Once&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;,(),mut closure-0*,core::iter::LoopState&lt;(), ()&gt;&gt;%0a%0dmozilla::net::nsHttpChannel::ProcessResponse(void)%0a%0dmozilla::ipc::PrincipalInfo::MaybeDestroy(mozilla::ipc::PrincipalInfo::Type)%0a%0dmozilla::ipc::IPDLParamTraits&lt;nsIPrincipal*&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, RefPtr&lt;nsIPrincipal&gt;*)%0a%0dToLowerCase(nsTSubstring&lt;char&gt;&amp;)%0a%0dnet_ExtractURLScheme(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::BufferList&lt;js::SystemAllocPolicy&gt;::IterImpl::Advance(mozilla::BufferList&lt;js::SystemAllocPolicy&gt; const&amp;, uint64_t)%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::ipc::ReadIPDLParam&lt;mozilla::Maybe&lt;mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; &gt; &gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::Tuple&lt;mozilla::Maybe&lt;nsTString&lt;char16_t&gt; &gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;nsILoadInfo::CrossOriginEmbedderPolicy&gt;, mozilla::Maybe&lt;nsILoadInfo::CrossOriginOpenerPolicy&gt;, mozilla::Maybe&lt;uint64_t&gt;, mozilla::Maybe&lt;uint64_t&gt;, mozilla::Maybe&lt;uint64_t&gt;, mozilla::Maybe&lt;uint64_t&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;mozilla::dom::UserActivation::State&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;RefPtr&lt;mozilla::dom::FeaturePolicy&gt; &gt;, mozilla::Maybe&lt;unsigned int&gt;, mozilla::Maybe&lt;nsID&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;mozilla::dom::GVAutoplayRequestStatus&gt;, mozilla::Maybe&lt;mozilla::dom::GVAutoplayRequestStatus&gt;, mozilla::Maybe&lt;float&gt;, mozilla::Maybe&lt;mozilla::dom::OrientationType&gt; &gt; &gt;::ReadInternal&lt;0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22&gt;(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::Tuple&lt;mozilla::Maybe&lt;nsTString&lt;char16_t&gt; &gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;nsILoadInfo::CrossOriginEmbedderPolicy&gt;, mozilla::Maybe&lt;nsILoadInfo::CrossOriginOpenerPolicy&gt;, mozilla::Maybe&lt;uint64_t&gt;, mozilla::Maybe&lt;uint64_t&gt;, mozilla::Maybe&lt;uint64_t&gt;, mozilla::Maybe&lt;uint64_t&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;mozilla::dom::UserActivation::State&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;RefPtr&lt;mozilla::dom::FeaturePolicy&gt; &gt;, mozilla::Maybe&lt;unsigned int&gt;, mozilla::Maybe&lt;nsID&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;bool&gt;, mozilla::Maybe&lt;mozilla::dom::GVAutoplayRequestStatus&gt;, mozilla::Maybe&lt;mozilla::dom::GVAutoplayRequestStatus&gt;, mozilla::Maybe&lt;float&gt;, mozilla::Maybe&lt;mozilla::dom::OrientationType&gt; &gt;&amp;, std::integer_sequence&lt;uint64_t, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22&gt;)%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::properties::declaration_block::PropertyDeclarationBlock&gt;&gt;::new&lt;style::shared_lock::Locked&lt;style::properties::declaration_block::PropertyDeclarationBlock&gt;&gt;%0a%0dstyle::gecko::wrapper::get_animation_rule%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0d[js] postActions%0a%0dstd::push_heap&lt;mozilla::ArrayIterator&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, nsTArray&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt; &gt; &gt;, bool (*)(mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, mozilla::ArrayIterator&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, nsTArray&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt; &gt; &gt;)&gt;(mozilla::ArrayIterator&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, nsTArray&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt; &gt; &gt;, mozilla::ArrayIterator&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, nsTArray&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt; &gt; &gt;, bool (*)(mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;))%0a%0dmozilla::net::RequestContext::IsContextTailBlocked(nsIRequestTailUnblockCallback*, bool*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3170" font-family="Helvetica, Arial, sans-serif" x="1085" y="224.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3171" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">&lt;core::iter::sources::Once&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next</tspan></text></a><a id="SvgjsA3175" href="data:text/plain,core::ptr::real_drop_in_place&lt;cssparser::parser::BasicParseErrorKind&gt;%0a%0dstyle::values::specified::easing::&lt;impl style::parser::Parse for style::values::generics::easing::TimingFunction&lt;style::values::specified::Integer,style::values::specified::Number&gt;&gt;::parse%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3173" font-family="Helvetica, Arial, sans-serif" x="1085" y="227.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3174" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">core::ptr::real_drop_in_place&lt;cssparser::parser::BasicParseErrorKind&gt;</tspan></text></a><a id="SvgjsA3178" href="data:text/plain,arena_t::MallocSmall(uint64_t, bool)%0a%0dPickle::Pickle(unsigned int, uint64_t)%0a%0dIPC::Message::Message(int, unsigned int, unsigned int, IPC::Message::HeaderFlags, bool)%0a%0dmozilla::dom::PBrowserParent::SendRealMouseMoveEvent(mozilla::WidgetMouseEvent const&amp;, mozilla::layers::ScrollableLayerGuid const&amp;, uint64_t const&amp;)%0a%0dnsThreadPool::PutEvent(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dnsThreadPool::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dmozilla::net::nsStreamTransportService::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dmozilla::TaskQueue::DispatchLocked(nsCOMPtr&lt;nsIRunnable&gt;&amp;, unsigned int, mozilla::AbstractThread::DispatchReason)%0a%0dmozilla::TaskQueue::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, mozilla::AbstractThread::DispatchReason)%0a%0dmozilla::AbstractThread::Dispatch(already_AddRefed&lt;nsIRunnable&gt;, unsigned int)%0a%0dnsFileChannel::ListenerBlockingPromise(mozilla::MozPromise&lt;nsresult, nsresult, 1&gt;**)%0a%0dnsBaseChannel::BeginPumpingData(void)%0a%0dnsBaseChannel::AsyncOpen(nsIStreamListener*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dXREMain::XRE_main"><text id="SvgjsText3176" font-family="Helvetica, Arial, sans-serif" x="1085" y="229.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3177" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">arena_t::MallocSmall(uint64_t, bool)</tspan></text></a><a id="SvgjsA3181" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3179" font-family="Helvetica, Arial, sans-serif" x="1085" y="232.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3180" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3184" href="data:text/plain,nsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)%0a%0dmozilla::WidgetMouseEvent::Duplicate(void)%0a%0dcore::ptr::real_drop_in_place&lt;cssparser::parser::BasicParseErrorKind&gt;%0a%0dstyle::values::specified::easing::&lt;impl style::parser::Parse for style::values::generics::easing::TimingFunction&lt;style::values::specified::Integer,style::values::specified::Number&gt;&gt;::parse%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3182" font-family="Helvetica, Arial, sans-serif" x="1085" y="234.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3183" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)</tspan></text></a><a id="SvgjsA3187" href="data:text/plain,NtUserSetCursor%0a%0dnsWindow::SetCursor(nsCursor, imgIContainer*, unsigned int, unsigned int)%0a%0dmozilla::dom::BrowserParent::RecvSetCursor(nsCursor const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, unsigned int const&amp;, unsigned int const&amp;, mozilla::gfx::SurfaceFormat const&amp;, unsigned int const&amp;, unsigned int const&amp;, bool const&amp;)%0a%0dmozilla::dom::PBrowserParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dPBrowser::Msg_SetCursor%0a%0dnsWindow::InitEvent(mozilla::WidgetGUIEvent&amp;, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt;*)%0a%0dnsWindow::DispatchMouseEvent(mozilla::EventMessage, uint64_t, int64_t, bool, short, unsigned short, WinPointerInfo*)%0a%0djs::SavedFrame::Lookup::Lookup(js::SavedFrame&amp;)%0a%0djs::SavedStacks::adoptAsyncStack(JSContext*, JS::MutableHandle&lt;js::SavedFrame*&gt;, JS::Handle&lt;JSAtom*&gt;, mozilla::Maybe&lt;uint64_t&gt; const&amp;)%0a%0dJS::Rooted&lt;js::SavedStacks::LocationValue&gt;::ctor&lt;JSContext*&gt;(JSContext* const&amp;, JS::Rooted&lt;js::SavedStacks::LocationValue&gt;::CtorDispatcher, JS::detail::FallbackOverload)%0a%0djs::SavedStacks::insertFrames(JSContext*, JS::MutableHandle&lt;js::SavedFrame*&gt;, mozilla::Variant&lt;JS::AllFrames, JS::MaxFrames, JS::FirstSubsumedFrame&gt;&amp;&amp;)%0a%0dWindow.setTimeout%0a%0dNtUserGetThreadState%0a%0dWinPointerEvents::GetCachedPointerInfo(unsigned int, uint64_t)%0a%0dnsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)%0a%0d[js] handleEvent%0a%0dNtSetIoCompletion%0a%0dPostQueuedCompletionStatus%0a%0dMessageLoop::PostTask_Helper(already_AddRefed&lt;nsIRunnable&gt;, int)%0a%0dMessageLoop::PostTask(already_AddRefed&lt;nsIRunnable&gt;)%0a%0dmozilla::ipc::ProcessLink::SendMessage(IPC::Message*)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*)%0a%0dmozilla::ipc::IProtocol::ChannelSend(IPC::Message*)%0a%0dmozilla::dom::PBrowserParent::SendRealMouseMoveEvent(mozilla::WidgetMouseEvent const&amp;, mozilla::layers::ScrollableLayerGuid const&amp;, uint64_t const&amp;)%0a%0dPBrowser::Msg_RealMouseMoveEvent%0a%0dnsstring::nsACStringBulkWriteHandle::as_mut_slice%0a%0dnsstring::conversions::&lt;impl nsstring::nsAString&gt;::fallible_append_latin1_impl%0a%0dnsstring_fallible_append_latin1_impl%0a%0dmozilla::dom::Event::GetWidgetEventType(mozilla::WidgetEvent*, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsXULTooltipListener::HandleEvent(mozilla::dom::Event*)%0a%0dmozilla::ipc::MessageChannel::AddProfilerMarker(IPC::Message const*, mozilla::ipc::MessageDirection)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dnsXPConnect::GetRuntimeInstance(void)%0a%0dXPCNativeInterface::GetNewOrUsed(JSContext*, nsID const*)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dmozilla::dom::XPCOMObjectToJsval(JSContext*, JS::Handle&lt;JSObject*&gt;, xpcObjectHelper&amp;, nsID const*, bool, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::Window_Binding::get_windowUtils%0a%0dget Window.windowUtils%0a%0dmozilla::dom::binding_detail::GenericGetter&lt;mozilla::dom::binding_detail::MaybeCrossOriginObjectThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::jit::CallNativeGetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d0x2c887ac2060%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3185" font-family="Helvetica, Arial, sans-serif" x="1085" y="237.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3186" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserSetCursor</tspan></text></a><a id="SvgjsA3190" href="data:text/plain,nsCSSRendering::PrepareImageLayer(nsPresContext*, nsIFrame*, unsigned int, nsRect const&amp;, nsRect const&amp;, nsStyleImageLayers::Layer const&amp;, bool*)%0a%0dnsDisplayMasksAndClipPaths::nsDisplayMasksAndClipPaths(nsDisplayListBuilder*, nsIFrame*, nsDisplayList*, mozilla::ActiveScrolledRoot const*)%0a%0dnsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)%0a%0dmozilla::WidgetMouseEvent::Duplicate(void)%0a%0dcore::ptr::real_drop_in_place&lt;cssparser::parser::BasicParseErrorKind&gt;%0a%0dstyle::values::specified::easing::&lt;impl style::parser::Parse for style::values::generics::easing::TimingFunction&lt;style::values::specified::Integer,style::values::specified::Number&gt;&gt;::parse%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3188" font-family="Helvetica, Arial, sans-serif" x="1085" y="239.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3189" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsCSSRendering::PrepareImageLayer(nsPresContext*, nsIFrame*, unsigned int, nsRect const&amp;, nsRect const&amp;, nsStyleImageLayers::Layer const&amp;, bool*)</tspan></text></a><a id="SvgjsA3193" href="data:text/plain,core::cmp::impls::{{impl}}::cmp%0a%0dpeek_poke::poke_into_vec%0a%0dwebrender_api::display_list::DisplayListBuilder::push_filters%0a%0dnsCSSRendering::PrepareImageLayer(nsPresContext*, nsIFrame*, unsigned int, nsRect const&amp;, nsRect const&amp;, nsStyleImageLayers::Layer const&amp;, bool*)%0a%0dnsDisplayMasksAndClipPaths::nsDisplayMasksAndClipPaths(nsDisplayListBuilder*, nsIFrame*, nsDisplayList*, mozilla::ActiveScrolledRoot const*)%0a%0dnsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)%0a%0dmozilla::WidgetMouseEvent::Duplicate(void)%0a%0dcore::ptr::real_drop_in_place&lt;cssparser::parser::BasicParseErrorKind&gt;%0a%0dstyle::values::specified::easing::&lt;impl style::parser::Parse for style::values::generics::easing::TimingFunction&lt;style::values::specified::Integer,style::values::specified::Number&gt;&gt;::parse%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3191" font-family="Helvetica, Arial, sans-serif" x="1085" y="241.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3192" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">core::cmp::impls::{{impl}}::cmp</tspan></text></a><a id="SvgjsA3196" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3194" font-family="Helvetica, Arial, sans-serif" x="1085" y="244.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3195" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3199" href="data:text/plain,nsStyleDisplay::IsAbsPosContainingBlock(nsIFrame const*)%0a%0dnsCSSFrameConstructor::GetAbsoluteContainingBlock(nsIFrame*, nsCSSFrameConstructor::ContainingBlockType)%0a%0dnsCSSFrameConstructor::ContentAppended(nsIContent*, nsCSSFrameConstructor::InsertionKind)%0a%0dSnowWhiteKiller::Visit(nsPurpleBuffer&amp;, nsPurpleBufferEntry*)%0a%0dintrinsic_UnsafeGetReservedSlot%0a%0djs::GCMarker::processMarkStackTop(js::SliceBudget&amp;)%0a%0djs::GCMarker::eagerlyMarkChildren(js::Shape*)%0a%0djs::GCMarker::processMarkStackTop(js::SliceBudget&amp;)%0a%0djs::GCMarker::processMarkStackTop(js::SliceBudget&amp;)%0a%0djs::TraceManuallyBarrieredGenericPointerEdge(JSTracer*, js::gc::Cell**, char const*)%0a%0dMessageLoop::PostTask_Helper(already_AddRefed&lt;nsIRunnable&gt;, int)%0a%0dmozilla::layers::PCompositorManagerChild::SendRemoveSharedSurface(mozilla::wr::ExternalImageId const&amp;)%0a%0dnsBlockReflowContext::ReflowBlock(mozilla::LogicalRect const&amp;, bool, nsCollapsingMargin&amp;, int, bool, nsLineBox*, mozilla::ReflowInput&amp;, nsReflowStatus&amp;, mozilla::BlockReflowInput&amp;)%0a%0dnsBlockFrame::ReflowBlockFrame(mozilla::BlockReflowInput&amp;, nsLineList_iterator, bool*)%0a%0dXREMain::XRE_main"><text id="SvgjsText3197" font-family="Helvetica, Arial, sans-serif" x="1085" y="246.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3198" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsStyleDisplay::IsAbsPosContainingBlock(nsIFrame const*)</tspan></text></a><a id="SvgjsA3202" href="data:text/plain,DispatchMessageW%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dcore::cmp::impls::{{impl}}::cmp%0a%0dpeek_poke::poke_into_vec%0a%0dwebrender_api::display_list::DisplayListBuilder::push_filters%0a%0dnsCSSRendering::PrepareImageLayer(nsPresContext*, nsIFrame*, unsigned int, nsRect const&amp;, nsRect const&amp;, nsStyleImageLayers::Layer const&amp;, bool*)%0a%0dnsDisplayMasksAndClipPaths::nsDisplayMasksAndClipPaths(nsDisplayListBuilder*, nsIFrame*, nsDisplayList*, mozilla::ActiveScrolledRoot const*)%0a%0dnsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)%0a%0dmozilla::WidgetMouseEvent::Duplicate(void)%0a%0dcore::ptr::real_drop_in_place&lt;cssparser::parser::BasicParseErrorKind&gt;%0a%0dstyle::values::specified::easing::&lt;impl style::parser::Parse for style::values::generics::easing::TimingFunction&lt;style::values::specified::Integer,style::values::specified::Number&gt;&gt;::parse%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3200" font-family="Helvetica, Arial, sans-serif" x="1085" y="249.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3201" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">DispatchMessageW</tspan></text></a><a id="SvgjsA3205" href="data:text/plain,nsDisplayListBuilder::WeakFrameRegion::RemoveModifiedFramesAndRects(void)%0a%0dRetainedDisplayListBuilder::AttemptPartialUpdate(unsigned int, mozilla::DisplayListChecker*)%0a%0dDispatchMessageW%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dcore::cmp::impls::{{impl}}::cmp%0a%0dpeek_poke::poke_into_vec%0a%0dwebrender_api::display_list::DisplayListBuilder::push_filters%0a%0dnsCSSRendering::PrepareImageLayer(nsPresContext*, nsIFrame*, unsigned int, nsRect const&amp;, nsRect const&amp;, nsStyleImageLayers::Layer const&amp;, bool*)%0a%0dnsDisplayMasksAndClipPaths::nsDisplayMasksAndClipPaths(nsDisplayListBuilder*, nsIFrame*, nsDisplayList*, mozilla::ActiveScrolledRoot const*)%0a%0dnsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)%0a%0dmozilla::WidgetMouseEvent::Duplicate(void)%0a%0dcore::ptr::real_drop_in_place&lt;cssparser::parser::BasicParseErrorKind&gt;%0a%0dstyle::values::specified::easing::&lt;impl style::parser::Parse for style::values::generics::easing::TimingFunction&lt;style::values::specified::Integer,style::values::specified::Number&gt;&gt;::parse%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3203" font-family="Helvetica, Arial, sans-serif" x="1085" y="251.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3204" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsDisplayListBuilder::WeakFrameRegion::RemoveModifiedFramesAndRects(void)</tspan></text></a><a id="SvgjsA3208" href="data:text/plain,hb_script_get_horizontal_direction%0a%0dhb_ot_shape%0a%0dgfxFont::ShapeFragmentWithoutWordCache&lt;char16_t&gt;(mozilla::gfx::DrawTarget*, char16_t const*, unsigned int, unsigned int, mozilla::unicode::Script, bool, gfxFontShaper::RoundingFlags, gfxTextRun*)%0a%0dgfxFont::SplitAndInitTextRun&lt;char16_t&gt;(mozilla::gfx::DrawTarget*, gfxTextRun*, char16_t const*, unsigned int, unsigned int, mozilla::unicode::Script, mozilla::gfx::ShapedTextFlags)%0a%0dnsFontMetrics::DrawString(char16_t const*, unsigned int, int, int, gfxContext*, mozilla::gfx::DrawTarget*)%0a%0dnsDisplayXULTextBox::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::WeakFrameRegion::RemoveModifiedFramesAndRects(void)%0a%0dRetainedDisplayListBuilder::AttemptPartialUpdate(unsigned int, mozilla::DisplayListChecker*)%0a%0dDispatchMessageW%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dcore::cmp::impls::{{impl}}::cmp%0a%0dpeek_poke::poke_into_vec%0a%0dwebrender_api::display_list::DisplayListBuilder::push_filters%0a%0dnsCSSRendering::PrepareImageLayer(nsPresContext*, nsIFrame*, unsigned int, nsRect const&amp;, nsRect const&amp;, nsStyleImageLayers::Layer const&amp;, bool*)%0a%0dnsDisplayMasksAndClipPaths::nsDisplayMasksAndClipPaths(nsDisplayListBuilder*, nsIFrame*, nsDisplayList*, mozilla::ActiveScrolledRoot const*)%0a%0dnsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)%0a%0dmozilla::WidgetMouseEvent::Duplicate(void)%0a%0dcore::ptr::real_drop_in_place&lt;cssparser::parser::BasicParseErrorKind&gt;%0a%0dstyle::values::specified::easing::&lt;impl style::parser::Parse for style::values::generics::easing::TimingFunction&lt;style::values::specified::Integer,style::values::specified::Number&gt;&gt;::parse%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3206" font-family="Helvetica, Arial, sans-serif" x="1085" y="254.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3207" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">hb_script_get_horizontal_direction</tspan></text></a><a id="SvgjsA3211" href="data:text/plain,RtlAcquireSRWLockExclusive%0a%0dencoding_rs::utf_8::convert_utf8_to_utf16_up_to_invalid%0a%0dencoding_rs::utf_8::Utf8Decoder::decode_to_utf16_raw%0a%0dhb_ot_shape%0a%0dnsHTMLScrollFrame::GetMinISize(gfxContext*)%0a%0dstyle::properties::LonghandId::to_physical%0a%0dstyle::properties::cascade::Cascade::apply_properties%0a%0dmozilla::ServoStyleSet::ResolveInheritingAnonymousBoxStyle(mozilla::PseudoStyleType, mozilla::ComputedStyle*)%0a%0d[js] _updateResults%0a%0dnsAutoMutationBatch::~nsAutoMutationBatch(void)%0a%0dnsContentUtils::SetNodeTextContent(nsIContent*, nsTSubstring&lt;char16_t&gt; const&amp;, bool)%0a%0d[js] _updateRow%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] _rowCanUpdateToResult%0a%0d[js] _updateResults%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3209" font-family="Helvetica, Arial, sans-serif" x="1085" y="256.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3210" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">RtlAcquireSRWLockExclusive</tspan></text></a><a id="SvgjsA3214" href="data:text/plain,js::jit::GetNativeDataPropertyPure&lt;0&gt;(JSContext*, JSObject*, js::PropertyName*, JS::Value*)%0a%0d0x2c887e43cf9%0a%0dhb_script_get_horizontal_direction%0a%0dhb_ot_shape%0a%0dgfxFont::ShapeFragmentWithoutWordCache&lt;char16_t&gt;(mozilla::gfx::DrawTarget*, char16_t const*, unsigned int, unsigned int, mozilla::unicode::Script, bool, gfxFontShaper::RoundingFlags, gfxTextRun*)%0a%0dgfxFont::SplitAndInitTextRun&lt;char16_t&gt;(mozilla::gfx::DrawTarget*, gfxTextRun*, char16_t const*, unsigned int, unsigned int, mozilla::unicode::Script, mozilla::gfx::ShapedTextFlags)%0a%0dnsFontMetrics::DrawString(char16_t const*, unsigned int, int, int, gfxContext*, mozilla::gfx::DrawTarget*)%0a%0dnsDisplayXULTextBox::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::WeakFrameRegion::RemoveModifiedFramesAndRects(void)%0a%0dRetainedDisplayListBuilder::AttemptPartialUpdate(unsigned int, mozilla::DisplayListChecker*)%0a%0dDispatchMessageW%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dcore::cmp::impls::{{impl}}::cmp%0a%0dpeek_poke::poke_into_vec%0a%0dwebrender_api::display_list::DisplayListBuilder::push_filters%0a%0dnsCSSRendering::PrepareImageLayer(nsPresContext*, nsIFrame*, unsigned int, nsRect const&amp;, nsRect const&amp;, nsStyleImageLayers::Layer const&amp;, bool*)%0a%0dnsDisplayMasksAndClipPaths::nsDisplayMasksAndClipPaths(nsDisplayListBuilder*, nsIFrame*, nsDisplayList*, mozilla::ActiveScrolledRoot const*)%0a%0dnsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)%0a%0dmozilla::WidgetMouseEvent::Duplicate(void)%0a%0dcore::ptr::real_drop_in_place&lt;cssparser::parser::BasicParseErrorKind&gt;%0a%0dstyle::values::specified::easing::&lt;impl style::parser::Parse for style::values::generics::easing::TimingFunction&lt;style::values::specified::Integer,style::values::specified::Number&gt;&gt;::parse%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3212" font-family="Helvetica, Arial, sans-serif" x="1085" y="259.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3213" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::GetNativeDataPropertyPure&lt;0&gt;(JSContext*, JSObject*, js::PropertyName*, JS::Value*)</tspan></text></a><a id="SvgjsA3217" href="data:text/plain,nsTSubstring&lt;char&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dmozilla::ipc::IPDLParamTraits&lt;nsTArray&lt;mozilla::layers::RenderRootDisplayListData&gt; &gt;::WriteValues(IPC::Message*, mozilla::ipc::IProtocol*, nsTArray&lt;mozilla::layers::RenderRootDisplayListData&gt;&amp;&amp;)%0a%0dnsIFrame::AddDisplayItem(nsDisplayItemBase*)%0a%0dstd::_Func_impl_no_alloc&lt;`lambda at c:/mozilla-source/mozilla-central/netwerk/protocol/http/nsHttp.cpp:786:19',void,const char *,unsigned int&gt;::_Do_call%0a%0dmozilla::net::Tokenize%0a%0dmozilla::net::ParsedHeaderValueListList::ParsedHeaderValueListList(nsTString&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::AltSvcMapping::ProcessHeader(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, int, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, nsIInterfaceRequestor*, mozilla::net::nsProxyInfo*, unsigned int, mozilla::OriginAttributes const&amp;)%0a%0dmozilla::net::nsHttpChannel::ProcessAltService(void)%0a%0dmozilla::net::nsHttpChannel::ContinueProcessResponse1(void)%0a%0dPrepareAndDispatch%0a%0dmozilla::layers::WebRenderCommandBuilder::PushImage(nsDisplayItem*, mozilla::layers::ImageContainer*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::SizeComputationInput::InitOffsets(mozilla::WritingMode, int, mozilla::LayoutFrameType, mozilla::SizeComputationInput::ReflowInputFlags, nsMargin const*, nsMargin const*, nsStyleDisplay const*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3215" font-family="Helvetica, Arial, sans-serif" x="1085" y="261.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3216" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsTSubstring&lt;char&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)</tspan></text></a><a id="SvgjsA3220" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3218" font-family="Helvetica, Arial, sans-serif" x="1085" y="263.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3219" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3223" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3221" font-family="Helvetica, Arial, sans-serif" x="1085" y="272.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3222" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3226" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3224" font-family="Helvetica, Arial, sans-serif" x="1085" y="276.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3225" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3229" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3227" font-family="Helvetica, Arial, sans-serif" x="1085" y="294.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3228" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3232" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3230" font-family="Helvetica, Arial, sans-serif" x="1085" y="296.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3231" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3235" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3233" font-family="Helvetica, Arial, sans-serif" x="1085" y="299.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3234" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3238" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3236" font-family="Helvetica, Arial, sans-serif" x="1085" y="301.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3237" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3241" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3239" font-family="Helvetica, Arial, sans-serif" x="1085" y="304.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3240" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3244" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3242" font-family="Helvetica, Arial, sans-serif" x="1085" y="306.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3243" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3247" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3245" font-family="Helvetica, Arial, sans-serif" x="1085" y="309.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3246" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3250" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3248" font-family="Helvetica, Arial, sans-serif" x="1085" y="311.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3249" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3253" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::RemoveInput(mozilla::net::CacheFileInputStream*, nsresult)%0a%0dmozilla::net::CacheFileInputStream::Release(void)%0a%0dmozilla::net::nsStreamLoader::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::dom::Element::UnsetAttr(int, nsAtom*, bool)%0a%0dcore::slice::{{impl}}::get_unchecked&lt;u8&gt;%0a%0dnsstring::conversions::&lt;impl nsstring::nsACString&gt;::fallible_append_utf16_to_latin1_lossy_impl%0a%0dnscstring_fallible_append_utf16_to_latin1_lossy_impl%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::dom::CustomElementRegistry::CallGetCustomInterface(mozilla::dom::Element*, nsID const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3251" font-family="Helvetica, Arial, sans-serif" x="1085" y="314.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3252" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3256" href="data:text/plain,`anonymous namespace'::internal_HistogramAdd%0a%0dmozilla::net::nsHttpChannel::ReportNetVSCacheTelemetry(void)%0a%0dmozilla::net::nsHttpChannel::OnStopRequest(nsIRequest*, nsresult)%0a%0djs::jit::GetNativeDataPropertyPure&lt;0&gt;(JSContext*, JSObject*, js::PropertyName*, JS::Value*)%0a%0d0x2c887e43cf9%0a%0dhb_script_get_horizontal_direction%0a%0dhb_ot_shape%0a%0dgfxFont::ShapeFragmentWithoutWordCache&lt;char16_t&gt;(mozilla::gfx::DrawTarget*, char16_t const*, unsigned int, unsigned int, mozilla::unicode::Script, bool, gfxFontShaper::RoundingFlags, gfxTextRun*)%0a%0dgfxFont::SplitAndInitTextRun&lt;char16_t&gt;(mozilla::gfx::DrawTarget*, gfxTextRun*, char16_t const*, unsigned int, unsigned int, mozilla::unicode::Script, mozilla::gfx::ShapedTextFlags)%0a%0dnsFontMetrics::DrawString(char16_t const*, unsigned int, int, int, gfxContext*, mozilla::gfx::DrawTarget*)%0a%0dnsDisplayXULTextBox::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::WeakFrameRegion::RemoveModifiedFramesAndRects(void)%0a%0dRetainedDisplayListBuilder::AttemptPartialUpdate(unsigned int, mozilla::DisplayListChecker*)%0a%0dDispatchMessageW%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dcore::cmp::impls::{{impl}}::cmp%0a%0dpeek_poke::poke_into_vec%0a%0dwebrender_api::display_list::DisplayListBuilder::push_filters%0a%0dnsCSSRendering::PrepareImageLayer(nsPresContext*, nsIFrame*, unsigned int, nsRect const&amp;, nsRect const&amp;, nsStyleImageLayers::Layer const&amp;, bool*)%0a%0dnsDisplayMasksAndClipPaths::nsDisplayMasksAndClipPaths(nsDisplayListBuilder*, nsIFrame*, nsDisplayList*, mozilla::ActiveScrolledRoot const*)%0a%0dnsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)%0a%0dmozilla::WidgetMouseEvent::Duplicate(void)%0a%0dcore::ptr::real_drop_in_place&lt;cssparser::parser::BasicParseErrorKind&gt;%0a%0dstyle::values::specified::easing::&lt;impl style::parser::Parse for style::values::generics::easing::TimingFunction&lt;style::values::specified::Integer,style::values::specified::Number&gt;&gt;::parse%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3254" font-family="Helvetica, Arial, sans-serif" x="1085" y="316.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3255" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">`anonymous namespace'::internal_HistogramAdd</tspan></text></a><a id="SvgjsA3259" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3257" font-family="Helvetica, Arial, sans-serif" x="1085" y="369.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3258" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3262" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3260" font-family="Helvetica, Arial, sans-serif" x="1085" y="372.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3261" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3265" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3263" font-family="Helvetica, Arial, sans-serif" x="1085" y="375.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3264" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3268" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3266" font-family="Helvetica, Arial, sans-serif" x="1085" y="377.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3267" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3271" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3269" font-family="Helvetica, Arial, sans-serif" x="1085" y="380.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3270" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3274" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3272" font-family="Helvetica, Arial, sans-serif" x="1085" y="382.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3273" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3277" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3275" font-family="Helvetica, Arial, sans-serif" x="1085" y="384.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3276" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3280" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3278" font-family="Helvetica, Arial, sans-serif" x="1085" y="387.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3279" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3283" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3281" font-family="Helvetica, Arial, sans-serif" x="1085" y="389.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3282" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3286" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3284" font-family="Helvetica, Arial, sans-serif" x="1085" y="392.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3285" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3289" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3287" font-family="Helvetica, Arial, sans-serif" x="1085" y="394.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3288" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3292" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3290" font-family="Helvetica, Arial, sans-serif" x="1085" y="397.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3291" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3295" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3293" font-family="Helvetica, Arial, sans-serif" x="1085" y="399.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3294" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3298" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3296" font-family="Helvetica, Arial, sans-serif" x="1085" y="402.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3297" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3301" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3299" font-family="Helvetica, Arial, sans-serif" x="1085" y="404.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3300" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3304" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3302" font-family="Helvetica, Arial, sans-serif" x="1085" y="407.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3303" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3307" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3305" font-family="Helvetica, Arial, sans-serif" x="1085" y="409.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3306" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3310" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3308" font-family="Helvetica, Arial, sans-serif" x="1085" y="411.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3309" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3313" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3311" font-family="Helvetica, Arial, sans-serif" x="1085" y="414.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3312" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3316" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3314" font-family="Helvetica, Arial, sans-serif" x="1085" y="416.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3315" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3319" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3317" font-family="Helvetica, Arial, sans-serif" x="1085" y="419.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3318" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3322" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3320" font-family="Helvetica, Arial, sans-serif" x="1085" y="421.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3321" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3325" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3323" font-family="Helvetica, Arial, sans-serif" x="1085" y="424.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3324" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3328" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3326" font-family="Helvetica, Arial, sans-serif" x="1085" y="426.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3327" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3331" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3329" font-family="Helvetica, Arial, sans-serif" x="1085" y="428.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3330" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3334" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3332" font-family="Helvetica, Arial, sans-serif" x="1085" y="431.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3333" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3337" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3335" font-family="Helvetica, Arial, sans-serif" x="1085" y="433.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3336" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3340" href="data:text/plain,hashglobe::table::Bucket&lt;K,V,M&gt;::peek%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;,hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dhashglobe::hash_map::HashMap&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;::search&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::StateDependency; 1]&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;,style::gecko_string_cache::WeakAtom&gt;%0a%0dhashglobe::hash_map::HashMap&lt;K,V,S&gt;::get%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::StateDependency&gt;::lookup&lt;style::invalidation::element::invalidation_map::StateDependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::StateDependency&gt;::lookup_with_additional&lt;style::invalidation::element::invalidation_map::StateDependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_state_dependencies%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0dHTMLInputElement.select%0a%0dnsContentUtils::GetExistingListenerManagerForNode(nsINode const*)%0a%0dmozilla::EventTargetChainItem::HandleEvent(mozilla::EventChainPostVisitor&amp;, mozilla::ELMCreationDetector&amp;)%0a%0dEventDispatcher::Dispatch commandupdate%0a%0dmozilla::dom::Element::Blur(mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::XULElement_Binding::blur%0a%0dXULElement.blur%0a%0d[js] _adjustFocusBeforeTabSwitch%0a%0d[js] updateDisplay%0a%0d[js] set selectedIndex%0a%0djs::jit::Assembler::movq(js::jit::ImmWord, js::jit::Register)%0a%0djs::jit::MacroAssemblerX64::profilerEnterFrame(js::jit::Register, js::jit::Register)%0a%0djs::jit::BaselineCodeGen&lt;js::jit::BaselineCompilerHandler&gt;::emitProfilerEnterFrame(void)%0a%0djs::jit::BaselineCodeGen&lt;js::jit::BaselineCompilerHandler&gt;::emitPrologue(void)%0a%0djs::jit::BaselineCompiler::compile(void)%0a%0d[js] from%0a%0d[js] get allTabs%0a%0d[js] getItemAtIndex%0a%0d[js] set selectedIndex%0a%0djs::jit::IonSetPropertyIC::update(JSContext*, JS::Handle&lt;JSScript*&gt;, js::jit::IonSetPropertyIC*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;)%0a%0d0x2c887ac46c4%0a%0dJS::Zone::getOrCreateUniqueId(js::gc::Cell*, uint64_t*)%0a%0djs::MovableCellHasher&lt;js::LazyScript*&gt;::match(js::LazyScript* const&amp;, js::LazyScript* const&amp;)%0a%0dJS::WeakCache&lt;JS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt; &gt;::lookupForAdd(js::ObjectGroupRealm::AllocationSiteKey const&amp;)%0a%0dPromiseReactionJob%0a%0dmozilla::PromiseJobRunnable::Run(mozilla::AutoSlowOperation&amp;)%0a%0dpromise callback%0a%0dmozilla::CycleCollectedJSContext::PerformMicroTaskCheckPoint(bool)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3338" font-family="Helvetica, Arial, sans-serif" x="1085" y="436.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3339" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">hashglobe::table::Bucket&lt;K,V,M&gt;::peek</tspan></text></a><a id="SvgjsA3343" href="data:text/plain,mozilla::dom::AnimationEffect::GetComputedTimingAt(mozilla::dom::Nullable&lt;mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; &gt; const&amp;, mozilla::TimingParams const&amp;, double)%0a%0dmozilla::dom::Animation::Cancel(mozilla::PostRestyleMode)%0a%0dnsTransitionManager::ConsiderInitiatingTransition(nsCSSPropertyID, nsStyleDisplay const&amp;, unsigned int, mozilla::dom::Element*, mozilla::PseudoStyleType, mozilla::AnimationCollection&lt;mozilla::dom::CSSTransition&gt;*&amp;, mozilla::ComputedStyle const&amp;, mozilla::ComputedStyle const&amp;, nsCSSPropertyIDSet&amp;)%0a%0dPLDHashTable::Iterator::Remove(void)%0a%0dmozilla::net::CacheFile::CleanUpCachedChunks(void)%0a%0dIonCompileScriptForBaseline%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3341" font-family="Helvetica, Arial, sans-serif" x="1085" y="438.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3342" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::AnimationEffect::GetComputedTimingAt(mozilla::dom::Nullable&lt;mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; &gt; const&amp;, mozilla::TimingParams const&amp;, double)</tspan></text></a><a id="SvgjsA3346" href="data:text/plain,js::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTimingAt(mozilla::dom::Nullable&lt;mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; &gt; const&amp;, mozilla::TimingParams const&amp;, double)%0a%0dmozilla::dom::Animation::Cancel(mozilla::PostRestyleMode)%0a%0dnsTransitionManager::ConsiderInitiatingTransition(nsCSSPropertyID, nsStyleDisplay const&amp;, unsigned int, mozilla::dom::Element*, mozilla::PseudoStyleType, mozilla::AnimationCollection&lt;mozilla::dom::CSSTransition&gt;*&amp;, mozilla::ComputedStyle const&amp;, mozilla::ComputedStyle const&amp;, nsCSSPropertyIDSet&amp;)%0a%0dPLDHashTable::Iterator::Remove(void)%0a%0dmozilla::net::CacheFile::CleanUpCachedChunks(void)%0a%0dIonCompileScriptForBaseline%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3344" font-family="Helvetica, Arial, sans-serif" x="1085" y="441.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3345" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)</tspan></text></a><a id="SvgjsA3349" href="data:text/plain,nsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTimingAt(mozilla::dom::Nullable&lt;mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; &gt; const&amp;, mozilla::TimingParams const&amp;, double)%0a%0dmozilla::dom::Animation::Cancel(mozilla::PostRestyleMode)%0a%0dnsTransitionManager::ConsiderInitiatingTransition(nsCSSPropertyID, nsStyleDisplay const&amp;, unsigned int, mozilla::dom::Element*, mozilla::PseudoStyleType, mozilla::AnimationCollection&lt;mozilla::dom::CSSTransition&gt;*&amp;, mozilla::ComputedStyle const&amp;, mozilla::ComputedStyle const&amp;, nsCSSPropertyIDSet&amp;)%0a%0dPLDHashTable::Iterator::Remove(void)%0a%0dmozilla::net::CacheFile::CleanUpCachedChunks(void)%0a%0dIonCompileScriptForBaseline%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3347" font-family="Helvetica, Arial, sans-serif" x="1085" y="443.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3348" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)</tspan></text></a><a id="SvgjsA3352" href="data:text/plain,memcpy()%0a%0dmozilla::net::CacheFile::Unlock(void)%0a%0dnsComponentManagerImpl::LookupByContractID%0a%0dnsCreateInstanceByContractID::operator()(nsID const&amp;, void**)%0a%0dNS_NewLocalFileInputStream(nsIInputStream**, nsIFile*, int, int, int)%0a%0dnsFileInputStream::Clone(nsIInputStream**)%0a%0dNS_CloneInputStream(nsIInputStream*, nsIInputStream**, nsIInputStream**)%0a%0dmozilla::dom::IPCBlobInputStreamStorage::GetStream(nsID const&amp;, uint64_t, uint64_t, nsIInputStream**)%0a%0dmozilla::ipc::InputStreamHelper::DeserializeInputStream(mozilla::ipc::InputStreamParams const&amp;, nsTArray&lt;mozilla::ipc::FileDescriptor&gt; const&amp;)%0a%0dmozilla::ipc::DeserializeIPCStream(mozilla::ipc::IPCStream const&amp;)%0a%0dmozilla::dom::IPCBlobUtils::Deserialize(mozilla::dom::IPCBlob const&amp;)%0a%0dmozilla::dom::ContentParent::RecvStoreAndBroadcastBlobURLRegistration(nsTString&lt;char&gt; const&amp;, mozilla::dom::IPCBlob const&amp;, IPC::Principal const&amp;)%0a%0dmozilla::dom::PContentParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dnsHashPropertyBag::Release(void)%0a%0dmozilla::net::HttpChannelParent::OnDataAvailable(nsIRequest*, nsIInputStream*, uint64_t, unsigned int)%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::net::HttpBaseChannel::NotifySetCookie(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::HttpBaseChannel::SetCookie(nsTSubstring&lt;char&gt; const&amp;)%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] 94/e.prototype.eval%0a%0d[js] 95/b.BinaryExpression%0a%0dJS::Zone::getOrCreateUniqueId(js::gc::Cell*, uint64_t*)%0a%0djs::MovableCellHasher&lt;js::WasmInstanceObject*&gt;::hash(js::WasmInstanceObject* const&amp;)%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::ObjectGroupRealm::NewEntry, js::MovableCellHasher&lt;js::ObjectGroupRealm::NewEntry&gt;, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::ObjectGroupRealm::NewEntry::Lookup const&amp;)%0a%0djs::jit::CallIRGenerator::getTemplateObjectForScripted(JS::Handle&lt;JSFunction*&gt;, JS::MutableHandle&lt;JSObject*&gt;, bool*)%0a%0djs::jit::CallIRGenerator::tryAttachCallScripted(JS::Handle&lt;JSFunction*&gt;)%0a%0djs::jit::CallIRGenerator::tryAttachStub(void)%0a%0d[js] 97/d.prototype._startSubExpression%0a%0d[js] 97/d.prototype.addToken%0a%0dInterpret%0a%0d[js] 97/d.prototype.addToken%0a%0d[js] forEach%0a%0dcore::ptr::{{impl}}::add&lt;u8&gt;%0a%0dencoding_rs::mem::convert_latin1_to_utf8_partial%0a%0dencoding_mem_convert_latin1_to_utf8_partial%0a%0dJS::CharsToNewUTF8CharsZ&lt;unsigned char&gt;(JSContext*, mozilla::Range&lt;unsigned char&gt;)%0a%0djs::GeckoProfilerRuntime::allocProfileString(JSContext*, JSScript*)%0a%0djs::jit::JitcodeIonTable::makeIonEntry(JSContext*, js::jit::JitCode*, unsigned int, JSScript**, js::jit::JitcodeGlobalEntry::IonEntry&amp;)%0a%0djs::jit::CodeGenerator::link(JSContext*, js::CompilerConstraintList*)%0a%0dIonCompileScriptForBaseline%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dResolvePromiseInternal%0a%0dRunFulfillFunction%0a%0dCommonPromiseCombinator%0a%0d[js] 94/e.prototype.evalArray%0a%0d[js] 95/b.Transform%0a%0d[js] 94/e.prototype.eval/&lt;%0a%0dmozilla::dom::CallbackObject::CallSetup::~CallSetup(void)%0a%0dnsFrameMessageManager::ReceiveMessage(nsISupports*, nsFrameLoader*, bool, nsTSubstring&lt;char16_t&gt; const&amp;, bool, mozilla::dom::ipc::StructuredCloneData*, mozilla::jsipc::CpowHolder*, nsIPrincipal*, nsTArray&lt;mozilla::dom::ipc::StructuredCloneData&gt;*, mozilla::ErrorResult&amp;)%0a%0djs::AtomizeString(JSContext*, JSString*, js::PinningBehavior)%0a%0djs::ValueToId&lt;1&gt;(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::PropertyKey&gt;)%0a%0dJSStructuredCloneReader::read(JS::MutableHandle&lt;JS::Value&gt;)%0a%0dPCookieService::Msg_AddCookie%0a%0dmozilla::net::CookieServiceParent::AddCookie(nsICookie*)%0a%0dmozilla::dom::ContentParent::Observe(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers cookie-changed%0a%0dmozilla::detail::RunnableFunction&lt;`lambda at c:/mozilla-source/mozilla-central/netwerk/protocol/http/nsHttpActivityDistributor.cpp:74:15'&gt;::Run%0a%0dnsDisplayHitTestInfoBase::SetHitTestInfo(nsRect const&amp;, mozilla::EnumSet&lt;mozilla::gfx::CompositorHitTestFlags, unsigned int&gt; const&amp;)%0a%0dnsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(nsIFrame*, nsDisplayList*, bool)%0a%0dmozilla::ContentPrincipal::GenerateOriginNoSuffixFromURI(nsIURI*, nsTSubstring&lt;char&gt;&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3350" font-family="Helvetica, Arial, sans-serif" x="1085" y="446.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3351" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3355" href="data:text/plain,js::jit::MaybeEnterJit(JSContext*, js::RunState&amp;)%0a%0dmozilla::net::Predictor::ParseMetaDataEntry(char const*, char const*, nsTString&lt;char&gt;&amp;, unsigned int&amp;, unsigned int&amp;, unsigned int&amp;)%0a%0dmozilla::profiler::AllocCallback%0a%0dmozilla::net::`anonymous namespace'::FeatureData::InitializeList%0a%0dJS::Compartment::getNonWrapperObjectForCurrentCompartment(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::net::Predictor::CacheabilityAction::OnCacheEntryAvailable(nsICacheEntry*, bool, nsIApplicationCache*, nsresult)%0a%0dnsIFrame::IsStackingContext(void)%0a%0dRetainedDisplayListBuilder::PreProcessDisplayList(RetainedDisplayList*, AnimatedGeometryRoot*, PartialUpdateResult&amp;, nsIFrame*, unsigned int, unsigned int, bool)%0a%0dFlsGetValue%0a%0d__crt_strtox::parse_integer&lt;unsigned long,__crt_strtox::c_string_character_source&lt;char&gt; &gt;(__crt_locale_pointers * const,__crt_strtox::c_string_character_source&lt;char&gt;,int,bool)%0a%0dmozilla::net::Predictor::ParseMetaDataEntry(char const*, char const*, nsTString&lt;char&gt;&amp;, unsigned int&amp;, unsigned int&amp;, unsigned int&amp;)%0a%0djs::SavedStacks::insertFrames(JSContext*, JS::MutableHandle&lt;js::SavedFrame*&gt;, mozilla::Variant&lt;JS::AllFrames, JS::MaxFrames, JS::FirstSubsumedFrame&gt;&amp;&amp;)%0a%0dnsTextFrame::WebRenderBounds(void)%0a%0dnsDisplayText::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::image::VectorImage::GetIntrinsicRatio(void)%0a%0dnsLayoutUtils::ComputeSizeForDrawing(imgIContainer*, mozilla::gfx::IntSizeTyped&lt;mozilla::CSSPixel&gt;&amp;, mozilla::AspectRatio&amp;, bool&amp;, bool&amp;)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dmozilla::dom::HTMLSummaryElement::WrapNode(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::Document_Binding::createElementNS%0a%0djs::intl_CompareStrings(JSContext*, unsigned int, JS::Value*)%0a%0d[js] makeUrlbarResult%0a%0d[js] bound%0a%0dNewArrayTryUseGroup&lt;2046&gt;%0a%0dArrayConstructorImpl%0a%0dnsBaseHashtable&lt;nsPtrHashKey&lt;mozilla::image::IProgressObserver&gt;, mozilla::WeakPtr&lt;mozilla::image::IProgressObserver&gt;, mozilla::WeakPtr&lt;mozilla::image::IProgressObserver&gt;, nsDefaultConverter&lt;mozilla::WeakPtr&lt;mozilla::image::IProgressObserver&gt;, mozilla::WeakPtr&lt;mozilla::image::IProgressObserver&gt; &gt; &gt;::Put(mozilla::image::IProgressObserver*, mozilla::WeakPtr&lt;mozilla::image::IProgressObserver&gt; const&amp;)%0a%0dPLDHashTable::Search(void const*)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3353" font-family="Helvetica, Arial, sans-serif" x="1085" y="448.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3354" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::MaybeEnterJit(JSContext*, js::RunState&amp;)</tspan></text></a><a id="SvgjsA3358" href="data:text/plain,nsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::CacheFileInputStream::ReadSegments(enum nsresult (__cdecl*)(class nsIInputStream * __ptr64,void * __ptr64,char const * __ptr64,unsigned int,unsigned int,unsigned int * __ptr64),void * __ptr64,unsigned int,unsigned int * __ptr64) __ptr64%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTimingAt(mozilla::dom::Nullable&lt;mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; &gt; const&amp;, mozilla::TimingParams const&amp;, double)%0a%0dmozilla::dom::Animation::Cancel(mozilla::PostRestyleMode)%0a%0dnsTransitionManager::ConsiderInitiatingTransition(nsCSSPropertyID, nsStyleDisplay const&amp;, unsigned int, mozilla::dom::Element*, mozilla::PseudoStyleType, mozilla::AnimationCollection&lt;mozilla::dom::CSSTransition&gt;*&amp;, mozilla::ComputedStyle const&amp;, mozilla::ComputedStyle const&amp;, nsCSSPropertyIDSet&amp;)%0a%0dPLDHashTable::Iterator::Remove(void)%0a%0dmozilla::net::CacheFile::CleanUpCachedChunks(void)%0a%0dIonCompileScriptForBaseline%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3356" font-family="Helvetica, Arial, sans-serif" x="1085" y="450.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3357" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)</tspan></text></a><a id="SvgjsA3361" href="data:text/plain,[js] preActions%0a%0dEventDispatcher::Dispatch MozLayerTreeReady%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::CacheFileInputStream::ReadSegments(enum nsresult (__cdecl*)(class nsIInputStream * __ptr64,void * __ptr64,char const * __ptr64,unsigned int,unsigned int,unsigned int * __ptr64),void * __ptr64,unsigned int,unsigned int * __ptr64) __ptr64%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTimingAt(mozilla::dom::Nullable&lt;mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; &gt; const&amp;, mozilla::TimingParams const&amp;, double)%0a%0dmozilla::dom::Animation::Cancel(mozilla::PostRestyleMode)%0a%0dnsTransitionManager::ConsiderInitiatingTransition(nsCSSPropertyID, nsStyleDisplay const&amp;, unsigned int, mozilla::dom::Element*, mozilla::PseudoStyleType, mozilla::AnimationCollection&lt;mozilla::dom::CSSTransition&gt;*&amp;, mozilla::ComputedStyle const&amp;, mozilla::ComputedStyle const&amp;, nsCSSPropertyIDSet&amp;)%0a%0dPLDHashTable::Iterator::Remove(void)%0a%0dmozilla::net::CacheFile::CleanUpCachedChunks(void)%0a%0dIonCompileScriptForBaseline%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3359" font-family="Helvetica, Arial, sans-serif" x="1085" y="453.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3360" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">[js] preActions</tspan></text></a><a id="SvgjsA3364" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3362" font-family="Helvetica, Arial, sans-serif" x="1085" y="455.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3363" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3367" href="data:text/plain,RtlVirtualUnwind%0a%0dWalkStackMain64%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, int64_t*)%0a%0dmozilla::net::CacheEntry::Load(bool, bool)%0a%0dmozilla::net::Predictor::PredictNative(nsIURI*, nsIURI*, unsigned int, mozilla::OriginAttributes const&amp;, nsINetworkPredictorVerifier*)%0a%0dmozilla::net::NeckoParent::RecvPredPredict(nsIURI*, nsIURI*, unsigned int const&amp;, mozilla::OriginAttributes const&amp;, bool const&amp;)%0a%0dmozilla::net::PNeckoParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dmozilla::EventStateManager::GenerateMouseEnterExit(mozilla::WidgetMouseEvent*)%0a%0dPLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateOrRecycleWebRenderUserData&lt;mozilla::layers::WebRenderImageData&gt;(nsDisplayItem*, mozilla::wr::RenderRoot, bool*)%0a%0dnsBaseWidget::ProcessUntransformedAPZEvent(mozilla::WidgetInputEvent*, mozilla::layers::APZEventResult const&amp;)%0a%0dcore::slice::{{impl}}::iter&lt;nsstring::nsCString&gt;%0a%0dstyle::properties::cascade::apply_declarations%0a%0dPLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dnsDisplayListBuilder::WeakFrameRegion::Add&lt;nsRect&gt;(nsIFrame*, nsRect const&amp;)%0a%0dcore::cell::Cell&lt;isize&gt;::get&lt;isize&gt;%0a%0dmozilla::net::nsStandardURL::BuildNormalizedSpec(char const*, mozilla::Encoding const*)%0a%0djs::LiveSavedFrameCache::find(JSContext*, js::LiveSavedFrameCache::FramePtr&amp;, unsigned char const*, JS::MutableHandle&lt;js::SavedFrame*&gt;)%0a%0djs::SavedStacks::insertFrames(JSContext*, JS::MutableHandle&lt;js::SavedFrame*&gt;, mozilla::Variant&lt;JS::AllFrames, JS::MaxFrames, JS::FirstSubsumedFrame&gt;&amp;&amp;)%0a%0dnsTArray_Impl&lt;mozilla::net::(anonymous namespace)::FeatureData,nsTArrayInfallibleAllocator&gt;::~nsTArray_Impl%0a%0dXREMain::XRE_main"><text id="SvgjsText3365" font-family="Helvetica, Arial, sans-serif" x="1085" y="458.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3366" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">RtlVirtualUnwind</tspan></text></a><a id="SvgjsA3370" href="data:text/plain,NtUserMessageCall%0a%0dint64_t RealDefWindowProcWorker(struct tagWND *,unsigned int,uint64_t,int64_t,unsigned long)%0a%0dDefWindowProcW%0a%0dCallWindowProcW%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dcore::slice::&lt;impl core::iter::traits::collect::IntoIterator for &amp;mut [T]&gt;::into_iter%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::process_descendant_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dstyle::data::ElementData::invalidate_style_if_needed%0a%0dstyle::traversal::DomTraversal::pre_traverse%0a%0dgeckoservo::glue::traverse_subtree%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dmozilla::dom::ToJSValue&lt;mozilla::dom::EventTarget&gt;(JSContext*, mozilla::dom::EventTarget&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3368" font-family="Helvetica, Arial, sans-serif" x="1085" y="460.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3369" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserMessageCall</tspan></text></a><a id="SvgjsA3373" href="data:text/plain,smallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;::spilled&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;::push&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::stylist::Rule&gt;::get_matching_rules%0a%0d[js] preActions%0a%0dEventDispatcher::Dispatch MozLayerTreeReady%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::CacheFileInputStream::ReadSegments(enum nsresult (__cdecl*)(class nsIInputStream * __ptr64,void * __ptr64,char const * __ptr64,unsigned int,unsigned int,unsigned int * __ptr64),void * __ptr64,unsigned int,unsigned int * __ptr64) __ptr64%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTimingAt(mozilla::dom::Nullable&lt;mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; &gt; const&amp;, mozilla::TimingParams const&amp;, double)%0a%0dmozilla::dom::Animation::Cancel(mozilla::PostRestyleMode)%0a%0dnsTransitionManager::ConsiderInitiatingTransition(nsCSSPropertyID, nsStyleDisplay const&amp;, unsigned int, mozilla::dom::Element*, mozilla::PseudoStyleType, mozilla::AnimationCollection&lt;mozilla::dom::CSSTransition&gt;*&amp;, mozilla::ComputedStyle const&amp;, mozilla::ComputedStyle const&amp;, nsCSSPropertyIDSet&amp;)%0a%0dPLDHashTable::Iterator::Remove(void)%0a%0dmozilla::net::CacheFile::CleanUpCachedChunks(void)%0a%0dIonCompileScriptForBaseline%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3371" font-family="Helvetica, Arial, sans-serif" x="1085" y="463.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3372" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">smallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;::spilled&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;</tspan></text></a><a id="SvgjsA3376" href="data:text/plain,nsStylePadding::GetPadding(nsMargin&amp;)%0a%0dnsBox::GetXULPadding(nsMargin&amp;)%0a%0dnsIFrame::GetXULBorderAndPadding(nsMargin&amp;)%0a%0dnsLeafBoxFrame::GetXULMaxSize(nsBoxLayoutState&amp;)%0a%0dnsSprocketLayout::XULLayout(nsIFrame*, nsBoxLayoutState&amp;)%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;::spilled&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;::triple_mut&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;%0a%0dsmallvec::SmallVec&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;::push&lt;[style::applicable_declarations::ApplicableDeclarationBlock; 16]&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::stylist::Rule&gt;::get_matching_rules%0a%0d[js] preActions%0a%0dEventDispatcher::Dispatch MozLayerTreeReady%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::CacheFileInputStream::ReadSegments(enum nsresult (__cdecl*)(class nsIInputStream * __ptr64,void * __ptr64,char const * __ptr64,unsigned int,unsigned int,unsigned int * __ptr64),void * __ptr64,unsigned int,unsigned int * __ptr64) __ptr64%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTimingAt(mozilla::dom::Nullable&lt;mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; &gt; const&amp;, mozilla::TimingParams const&amp;, double)%0a%0dmozilla::dom::Animation::Cancel(mozilla::PostRestyleMode)%0a%0dnsTransitionManager::ConsiderInitiatingTransition(nsCSSPropertyID, nsStyleDisplay const&amp;, unsigned int, mozilla::dom::Element*, mozilla::PseudoStyleType, mozilla::AnimationCollection&lt;mozilla::dom::CSSTransition&gt;*&amp;, mozilla::ComputedStyle const&amp;, mozilla::ComputedStyle const&amp;, nsCSSPropertyIDSet&amp;)%0a%0dPLDHashTable::Iterator::Remove(void)%0a%0dmozilla::net::CacheFile::CleanUpCachedChunks(void)%0a%0dIonCompileScriptForBaseline%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3374" font-family="Helvetica, Arial, sans-serif" x="1085" y="465.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3375" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsStylePadding::GetPadding(nsMargin&amp;)</tspan></text></a><a id="SvgjsA3379" href="data:text/plain,mozilla::TokenizerBase&lt;char&gt;::Token::Whitespace(void)%0a%0dnet_ExtractURLScheme(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dPickle::ReadBool(PickleIterator*, bool*)%0a%0dmozilla::ipc::ReadIPDLParam&lt;mozilla::TimeStamp&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::net::HttpChannelOpenArgs&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::net::HttpChannelOpenArgs*)%0a%0dmozilla::net::HttpChannelParent::RecvDocumentChannelCleanup(bool const&amp;)%0a%0dnsCSPParser::keywordSource(void)%0a%0dnsCSPParser::sourceExpression(void)%0a%0dmozilla::EditorBase::NotifyEditorObservers(mozilla::EditorBase::NotificationForEditorObservers)%0a%0dmozilla::TextEditor::OnInputText(nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0d[js] _startRemoveStaleRowsTimer%0a%0d[js] onQueryStarted%0a%0d[js] startQuery%0a%0dmozilla::TextInputListener::HandleEvent(mozilla::dom::Event*)%0a%0dmozilla::net::nsStandardURL::BuildNormalizedSpec(char const*, mozilla::Encoding const*)%0a%0dInterpret%0a%0d[js] _removeCookie%0a%0d[js] observe%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3377" font-family="Helvetica, Arial, sans-serif" x="1085" y="468.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3378" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::TokenizerBase&lt;char&gt;::Token::Whitespace(void)</tspan></text></a><a id="SvgjsA3382" href="data:text/plain,DefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3380" font-family="Helvetica, Arial, sans-serif" x="1085" y="470.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3381" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">DefinePropertyIfFound</tspan></text></a><a id="SvgjsA3385" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3383" font-family="Helvetica, Arial, sans-serif" x="1085" y="472.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3384" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3388" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3386" font-family="Helvetica, Arial, sans-serif" x="1085" y="475.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3387" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3391" href="data:text/plain,mozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3389" font-family="Helvetica, Arial, sans-serif" x="1085" y="477.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3390" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::profiler::AllocCallback</tspan></text></a><a id="SvgjsA3394" href="data:text/plain,nsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3392" font-family="Helvetica, Arial, sans-serif" x="1085" y="480.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3393" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsSystemInfo::AddRef(void)</tspan></text></a><a id="SvgjsA3397" href="data:text/plain,mozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3395" font-family="Helvetica, Arial, sans-serif" x="1085" y="483.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3396" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::net::nsHttpChannel::BeginConnect(void)</tspan></text></a><a id="SvgjsA3400" href="data:text/plain,CompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3398" font-family="Helvetica, Arial, sans-serif" x="1085" y="486.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3399" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">CompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)</tspan></text></a><a id="SvgjsA3403" href="data:text/plain,mozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3401" font-family="Helvetica, Arial, sans-serif" x="1085" y="488.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3402" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)</tspan></text></a><a id="SvgjsA3406" href="data:text/plain,nsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3404" font-family="Helvetica, Arial, sans-serif" x="1085" y="494.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3405" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)</tspan></text></a><a id="SvgjsA3409" href="data:text/plain,gr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3407" font-family="Helvetica, Arial, sans-serif" x="1085" y="499.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3408" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">gr_cinfo_base</tspan></text></a><a id="SvgjsA3412" href="data:text/plain,gr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3410" font-family="Helvetica, Arial, sans-serif" x="1085" y="502.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3411" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">gr_cinfo_base</tspan></text></a><a id="SvgjsA3415" href="data:text/plain,nsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3413" font-family="Helvetica, Arial, sans-serif" x="1085" y="504.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3414" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsCOMArray_base::InsertObjectAt(nsISupports*, int)</tspan></text></a><a id="SvgjsA3418" href="data:text/plain,nsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3416" font-family="Helvetica, Arial, sans-serif" x="1085" y="507.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3417" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsCOMArray_base::InsertObjectAt(nsISupports*, int)</tspan></text></a><a id="SvgjsA3421" href="data:text/plain,xpc::NativeGlobal(JSObject*)%0a%0dmozilla::dom::GetIncumbentGlobal(void)%0a%0dmozilla::net::PHttpChannelParent::SendOnStartRequest(nsresult const&amp;, mozilla::net::nsHttpResponseHead const&amp;, bool const&amp;, mozilla::net::nsHttpHeaderArray const&amp;, mozilla::net::ParentLoadInfoForwarderArgs const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, uint64_t const&amp;, int const&amp;, unsigned int const&amp;, nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, mozilla::net::NetAddr const&amp;, mozilla::net::NetAddr const&amp;, short const&amp;, unsigned int const&amp;, nsTString&lt;char&gt; const&amp;, int64_t const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, mozilla::net::ResourceTimingStructArgs const&amp;, bool const&amp;, mozilla::Maybe&lt;unsigned int&gt; const&amp;, bool const&amp;, nsILoadInfo::CrossOriginOpenerPolicy const&amp;)%0a%0dPHttpChannel::Msg_OnStartRequest%0a%0dnsTArray_base&lt;nsTArrayInfallibleAllocator, nsTArray_CopyWithMemutils&gt;::ShrinkCapacity(uint64_t, uint64_t)%0a%0dnsDisplayCompositorHitTestInfo::`scalar deleting destructor'(unsigned int)%0a%0dnsFont::CalcDifference(nsFont const&amp;)%0a%0dnsLayoutUtils::GetInflatedFontMetricsForFrame(nsIFrame const*)%0a%0dnsTSubstring&lt;char16_t&gt;::Truncate(void)%0a%0dxpc::InnerCleanupValue(nsXPTType const&amp;, void*, unsigned int)%0a%0dxpc::InnerCleanupValue(nsXPTType const&amp;, void*, unsigned int)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3419" font-family="Helvetica, Arial, sans-serif" x="1085" y="509.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3420" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">xpc::NativeGlobal(JSObject*)</tspan></text></a><a id="SvgjsA3424" href="data:text/plain,xpcTestObjectReadWrite::AddRef(void)%0a%0dnsJARChannel::GetNotificationCallbacks(nsIInterfaceRequestor**)%0a%0dmozilla::net::HttpChannelParent::OnStartRequest(nsIRequest*)%0a%0d`anonymous namespace'::GetContentBlockingAllowListCache%0a%0d`anonymous namespace'::CheckContentBlockingAllowList%0a%0dmozilla::AntiTrackingCommon::IsFirstPartyStorageAccessGrantedFor(nsIChannel*, nsIURI*, unsigned int*)%0a%0dnsUrlClassifierStreamUpdater::AddRef(void)%0a%0dNS_NewObjectInputStream(nsIInputStream*)%0a%0dNS_DeserializeObject(nsTSubstring&lt;char&gt; const&amp;, nsISupports**)%0a%0dstd::push_heap&lt;mozilla::ArrayIterator&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, nsTArray&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt; &gt; &gt;, bool (*)(mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, mozilla::ArrayIterator&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, nsTArray&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt; &gt; &gt;)&gt;(mozilla::ArrayIterator&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, nsTArray&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt; &gt; &gt;, mozilla::ArrayIterator&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, nsTArray&lt;mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt; &gt; &gt;, bool (*)(mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;, mozilla::UniquePtr&lt;TimerThread::Entry, mozilla::DefaultDelete&lt;TimerThread::Entry&gt; &gt;&amp;))%0a%0dmozilla::net::RequestContext::IsContextTailBlocked(nsIRequestTailUnblockCallback*, bool*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3422" font-family="Helvetica, Arial, sans-serif" x="1085" y="512.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3423" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">xpcTestObjectReadWrite::AddRef(void)</tspan></text></a><a id="SvgjsA3427" href="data:text/plain,js::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3425" font-family="Helvetica, Arial, sans-serif" x="1085" y="516.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3426" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::ContextChecks::check(JS::Value const&amp;, int)</tspan></text></a><a id="SvgjsA3430" href="data:text/plain,JS::WeakCache&lt;JS::GCHashSet&lt;js::InitialShapeEntry, js::InitialShapeEntry, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::InitialShapeEntry::Lookup const&amp;)%0a%0dPromiseCombinatorDataHolder::New(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;PromiseCombinatorElements&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dCommonPromiseCombinator%0a%0dPromise_static_all%0a%0d[js] fetch%0a%0d[js] SuggestionsFetch%0a%0djs::NewDenseFullyAllocatedArray(JSContext*, unsigned int, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0dresource://gre/modules/SearchSuggestionController.jsm%0a%0d[js] SuggestionsFetch%0a%0d[js] newSuggestionsFetch%0a%0d[js] _matchSearchSuggestions%0a%0dnsDisplayList::PaintRoot(nsDisplayListBuilder*, gfxContext*, unsigned int)%0a%0dstyle::properties::longhands::animation_play_state::cascade_property%0a%0dmozilla::extensions::ChannelWrapper::Get(mozilla::dom::GlobalObject const&amp;, nsIChannel*)%0a%0dChannelWrapper.get%0a%0darena_t::DallocSmall(arena_chunk_t*, void*, arena_chunk_map_t*)%0a%0dmozilla::net::nsHttpHeaderArray::Flatten(nsTSubstring&lt;char&gt;&amp;, bool, bool)%0a%0dmozilla::net::nsHttpRequestHead::Flatten(nsTSubstring&lt;char&gt;&amp;, bool)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::nsHttpTransaction::Init(unsigned int,class mozilla::net::nsHttpConnectionInfo * __ptr64,class mozilla::net::nsHttpRequestHead * __ptr64,class nsIInputStream * __ptr64,unsigned __int64,bool,class nsIEventTarget * __ptr64,class nsIInterfaceRequestor * __ptr64,class nsITransportEventSink * __ptr64,unsigned __int64,enum mozilla::net::HttpTrafficCategory,class nsIRequestContext * __ptr64,unsigned int,unsigned int,bool,unsigned __int64,class std::function&lt;void __cdecl(void)&gt; &amp;&amp; __ptr64,class std::function&lt;enum nsresult __cdecl(unsigned int,class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; const &amp; __ptr64)&gt; &amp;&amp; __ptr64,class mozilla::net::HttpTransactionShell * __ptr64,unsigned int) __ptr64%0a%0dnet_IsValidHostName(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsHttpChannel::ContinueOnBeforeConnect(bool, nsresult)%0a%0dmozilla::Dafsa::Lookup(nsTSubstring&lt;char&gt; const&amp;)%0a%0dnsDNSPrefetch::Release(void)%0a%0dnsMainThreadPtrHolder&lt;nsPIDOMWindowInner&gt;::~nsMainThreadPtrHolder&lt;nsPIDOMWindowInner&gt;(void)%0a%0dmozilla::net::DNSListenerProxy::OnLookupCompleteRunnable::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsStandardURL::BuildNormalizedSpec(char const*, mozilla::Encoding const*)%0a%0djs::LiveSavedFrameCache::find(JSContext*, js::LiveSavedFrameCache::FramePtr&amp;, unsigned char const*, JS::MutableHandle&lt;js::SavedFrame*&gt;)%0a%0djs::SavedStacks::insertFrames(JSContext*, JS::MutableHandle&lt;js::SavedFrame*&gt;, mozilla::Variant&lt;JS::AllFrames, JS::MaxFrames, JS::FirstSubsumedFrame&gt;&amp;&amp;)%0a%0dnsTArray_Impl&lt;mozilla::net::(anonymous namespace)::FeatureData,nsTArrayInfallibleAllocator&gt;::~nsTArray_Impl%0a%0dXREMain::XRE_main"><text id="SvgjsText3428" font-family="Helvetica, Arial, sans-serif" x="1085" y="519.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3429" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">JS::WeakCache&lt;JS::GCHashSet&lt;js::InitialShapeEntry, js::InitialShapeEntry, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::InitialShapeEntry::Lookup const&amp;)</tspan></text></a><a id="SvgjsA3433" href="data:text/plain,mozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3431" font-family="Helvetica, Arial, sans-serif" x="1085" y="521.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3432" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)</tspan></text></a><a id="SvgjsA3436" href="data:text/plain,nsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3434" font-family="Helvetica, Arial, sans-serif" x="1085" y="524.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3435" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)</tspan></text></a><a id="SvgjsA3439" href="data:text/plain,NtDeviceIoControlFile%0a%0dWSPSend%0a%0dsend%0a%0dPR_MD_SEND%0a%0dSocketSend%0a%0dSocketWrite%0a%0dmozilla::net::PollableEvent::Signal(void)%0a%0dmozilla::net::nsSocketTransportService::OnDispatchedEvent(void)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dcore::slice::{{impl}}::next&lt;wgpu_core::id::Id&lt;wgpu_core::instance::Adapter&lt;gfx_backend_empty::Backend&gt;&gt;&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;webrender_bindings::bindings::WrClipId&gt;,mut u8*,closure-0,core::iter::LoopState&lt;mut u8*, core::result::Result&lt;mut u8*, !&gt;&gt;&gt;%0a%0dcore::iter::adapters::{{impl}}::try_fold&lt;core::iter::adapters::Map&lt;core::slice::Iter&lt;webrender_bindings::bindings::WrClipId&gt;, closure-1&gt;,mut u8*,closure-0,core::result::Result&lt;mut u8*, !&gt;&gt;%0a%0dcore::iter::traits::iterator::Iterator::fold&lt;core::iter::adapters::Take&lt;core::iter::adapters::Map&lt;core::slice::Iter&lt;webrender_bindings::bindings::WrClipId&gt;, closure-1&gt;&gt;,mut u8*,closure-0&gt;%0a%0dpeek_poke::poke_extend_vec%0a%0dwebrender_api::display_list::DisplayListBuilder::push_iter_impl%0a%0dwebrender_api::display_list::DisplayListBuilder::push_iter%0a%0dwebrender_api::display_list::DisplayListBuilder::define_clip_chain%0a%0dwr_dp_define_clipchain%0a%0dmozilla::wr::DisplayListBuilder::DefineClipChain(nsTArray&lt;mozilla::wr::WrClipId&gt; const&amp;, bool)%0a%0dmozilla::layers::ClipManager::DefineClipChain(mozilla::DisplayItemClipChain const*, int)%0a%0dmozilla::layers::ClipManager::SwitchItem(nsDisplayItem*)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0d&lt;smallvec::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::rule_tree::RuleTree::insert_ordered_rules_from%0a%0dstyle::rule_tree::RuleTree::update_rule_at_level%0a%0dstyle::matching::PrivateMatchMethods::replace_rules_internal%0a%0d&lt;regex_syntax::ast::Position as core::cmp::Ord&gt;::cmp%0a%0dcore::cmp::max_by&lt;usize,fn(usize*, usize*) -&gt; core::cmp::Ordering&gt;%0a%0dpeek_poke::poke_into_vec%0a%0dwebrender_api::display_list::DisplayListBuilder::push_border%0a%0dwr_dp_push_border%0a%0dmozilla::wr::DisplayListBuilder::PushBorder(mozilla::wr::Rect&lt;float, mozilla::wr::LayoutPixel&gt; const&amp;, mozilla::wr::Rect&lt;float, mozilla::wr::LayoutPixel&gt; const&amp;, bool, mozilla::wr::SideOffsets2D&lt;float, mozilla::wr::LayoutPixel&gt; const&amp;, mozilla::Range&lt;mozilla::wr::BorderSide const&gt; const&amp;, mozilla::wr::BorderRadius const&amp;, mozilla::wr::AntialiasBorder)%0a%0dnsCSSBorderRenderer::CreateWebRenderCommands(nsDisplayItem*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;)%0a%0dnsCSSRendering::CreateWebRenderCommandsForNullBorder(nsDisplayItem*, nsIFrame*, nsRect const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, nsStyleBorder const&amp;)%0a%0dnsCSSRendering::CreateWebRenderCommandsForBorderWithStyleBorder(nsDisplayItem*, nsIFrame*, nsRect const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*, nsStyleBorder const&amp;)%0a%0dnsDisplayBorder::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dRtlWakeAllConditionVariable%0a%0dmozilla::BackgroundHangThread::NotifyActivity(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dmozilla::ipc::ProcessLink::SendMessage(IPC::Message*)%0a%0dPBrowser::Msg_RealMouseMoveEvent%0a%0dmozilla::detail::nsTStringRepr&lt;char16_t&gt;::EqualsLatin1(char const*, unsigned int)%0a%0dnsXULTooltipListener::HandleEvent(mozilla::dom::Event*)%0a%0dmozilla::EventListenerManager::HandleEventSubType(mozilla::EventListenerManager::Listener*, mozilla::dom::Event*, mozilla::dom::EventTarget*)%0a%0d[thunk]: virtual unsigned long CThreadInputMgr::Release%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dKiUserCallbackDispatch%0a%0dmozilla::net::CacheEntry::SetSecurityInfo(nsISupports*)%0a%0dmozilla::net::DoAddCacheEntryHeaders(mozilla::net::nsHttpChannel*, nsICacheEntry*, mozilla::net::nsHttpRequestHead*, mozilla::net::nsHttpResponseHead*, nsISupports*)%0a%0dmozilla::net::nsHttpChannel::InitCacheEntry(void)%0a%0dmozilla::net::nsHttpChannel::ContinueProcessNormal(nsresult)%0a%0dmozilla::net::AltSvcMapping::MakeHashKey(nsTString&lt;char&gt;&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, int, bool, bool, nsTSubstring&lt;char&gt; const&amp;, mozilla::OriginAttributes const&amp;)%0a%0dmozilla::net::AltSvcCache::GetAltServiceMapping(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, int, bool, bool, nsTSubstring&lt;char&gt; const&amp;, mozilla::OriginAttributes const&amp;)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsDisplayList::PaintRoot(nsDisplayListBuilder*, gfxContext*, unsigned int)%0a%0dSVG Image drawing 16x16 chrome://browser/skin/stop.svg%0a%0dgfxUtils::DrawPixelSnapped%0a%0dalloc::alloc::exchange_malloc%0a%0dservo_arc::Arc&lt;style::gecko_bindings::structs::root::mozilla::GeckoEffects&gt;::new&lt;style::gecko_bindings::structs::root::mozilla::GeckoEffects&gt;%0a%0dservo_arc::UniqueArc&lt;style::gecko_bindings::structs::root::mozilla::GeckoEffects&gt;::new&lt;style::gecko_bindings::structs::root::mozilla::GeckoEffects&gt;%0a%0dstyle::properties::StyleStructRef&lt;T&gt;::mutate%0a%0dstyle::properties::StyleBuilder::set_padding_left%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dmozilla::net::nsHttpChannel::QueryInterface(nsID const&amp;, void**)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dnsObserverService::NotifyObservers http-on-examine-response%0a%0dmozilla::net::nsHttpChannel::ProcessResponse(void)%0a%0dSTAN_GetNSSCertificate%0a%0d0x2c887ac7276%0a%0dnsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, mozilla::ReflowOutput&amp;, mozilla::ReflowInput const&amp;, mozilla::WritingMode const&amp;, mozilla::LogicalPoint const&amp;, nsSize const&amp;, nsIFrame::ReflowChildFlags, nsReflowStatus&amp;, nsOverflowContinuationTracker*)%0a%0dnsHTMLScrollFrame::ReflowScrolledFrame(mozilla::ScrollReflowInput*, bool, bool, mozilla::ReflowOutput*)%0a%0dnsHTMLScrollFrame::ReflowContents(mozilla::ScrollReflowInput*, mozilla::ReflowOutput const&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3437" font-family="Helvetica, Arial, sans-serif" x="1085" y="530.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3438" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtDeviceIoControlFile</tspan></text></a><a id="SvgjsA3442" href="data:text/plain,mozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3440" font-family="Helvetica, Arial, sans-serif" x="1085" y="534.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3441" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::net::GetLoadContextInfo(nsIChannel*)</tspan></text></a><a id="SvgjsA3445" href="data:text/plain,mozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3443" font-family="Helvetica, Arial, sans-serif" x="1085" y="537.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3444" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)</tspan></text></a><a id="SvgjsA3448" href="data:text/plain,mozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3446" font-family="Helvetica, Arial, sans-serif" x="1085" y="540.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3447" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)</tspan></text></a><a id="SvgjsA3451" href="data:text/plain,std::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3449" font-family="Helvetica, Arial, sans-serif" x="1085" y="545.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3450" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">std::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)</tspan></text></a><a id="SvgjsA3454" href="data:text/plain,mozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3452" font-family="Helvetica, Arial, sans-serif" x="1085" y="547.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3453" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)</tspan></text></a><a id="SvgjsA3457" href="data:text/plain,mozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3455" font-family="Helvetica, Arial, sans-serif" x="1085" y="552.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3456" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)</tspan></text></a><a id="SvgjsA3460" href="data:text/plain,mozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3458" font-family="Helvetica, Arial, sans-serif" x="1085" y="558.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3459" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)</tspan></text></a><a id="SvgjsA3463" href="data:text/plain,NS_TableDrivenQI(void*, nsID const&amp;, void**, QITableEntry const*)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dmozilla::net::CacheFileMetadata::GetElement(char const*)%0a%0dProxyListener::OnStartRequest(nsIRequest*)%0a%0dvirtual long CACPWrap::OnLockGranted(unsigned long)%0a%0dmozilla::widget::TSFTextStore::RequestLock(unsigned long, long*)%0a%0dvirtual long CACPWrap::OnTextChange(unsigned long,struct TS_TEXTCHANGE const *)%0a%0dmozilla::widget::TSFTextStore::NotifyTSFOfTextChange(void)%0a%0dmozilla::widget::TSFTextStore::MaybeFlushPendingNotifications(void)%0a%0dmozilla::widget::TSFTextStore::OnTextChangeInternal(mozilla::widget::IMENotification const&amp;)%0a%0dmozilla::widget::IMEHandler::NotifyIME(nsWindow*, mozilla::widget::IMENotification const&amp;)%0a%0dmozilla::IMEContentObserver::IMENotificationSender::SendTextChange(void)%0a%0dmozilla::IMEContentObserver::IMENotificationSender::Run(void)%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dprofiler_tracing_marker(char const*, char const*, JS::ProfilingCategoryPair, TracingKind, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;, mozilla::Maybe&lt;uint64_t&gt; const&amp;)%0a%0dmozilla::PresShell::DoReflow(nsIFrame*, bool, mozilla::OverflowChangedTracker*)%0a%0dReflow chrome://browser/content/browser.xhtml%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3461" font-family="Helvetica, Arial, sans-serif" x="1085" y="564.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3462" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NS_TableDrivenQI(void*, nsID const&amp;, void**, QITableEntry const*)</tspan></text></a><a id="SvgjsA3466" href="data:text/plain,nsUrlClassifierStreamUpdater::AddRef(void)%0a%0dXPCWrappedNative::GetNewOrUsed(JSContext*, xpcObjectHelper&amp;, XPCWrappedNativeScope*, XPCNativeInterface*, XPCWrappedNative**)%0a%0dimgLoader::LoadImage moz-extension://c56d346a-bdd6-461f-9c44-3c462aa7513b/favicon.ico%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3464" font-family="Helvetica, Arial, sans-serif" x="1085" y="584.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3465" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsUrlClassifierStreamUpdater::AddRef(void)</tspan></text></a><a id="SvgjsA3469" href="data:text/plain,mozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3467" font-family="Helvetica, Arial, sans-serif" x="1085" y="606.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3468" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::net::HttpBaseChannel::GetURI(nsIURI**)</tspan></text></a><a id="SvgjsA3472" href="data:text/plain,mozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3470" font-family="Helvetica, Arial, sans-serif" x="1085" y="613.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3471" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)</tspan></text></a><a id="SvgjsA3475" href="data:text/plain,mozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3473" font-family="Helvetica, Arial, sans-serif" x="1085" y="651.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3474" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)</tspan></text></a><a id="SvgjsA3478" href="data:text/plain,std::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3476" font-family="Helvetica, Arial, sans-serif" x="1085" y="673.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3477" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">std::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)</tspan></text></a><a id="SvgjsA3481" href="data:text/plain,std::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3479" font-family="Helvetica, Arial, sans-serif" x="1085" y="2014.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3480" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">std::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)</tspan></text></a><a id="SvgjsA3484" href="data:text/plain,JS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3482" font-family="Helvetica, Arial, sans-serif" x="1085" y="2016.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3483" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">JS::ClearKeptObjects(JSContext*)</tspan></text></a><a id="SvgjsA3487" href="data:text/plain,mozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3485" font-family="Helvetica, Arial, sans-serif" x="1085" y="2019.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3486" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)</tspan></text></a><a id="SvgjsA3490" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3488" font-family="Helvetica, Arial, sans-serif" x="1085" y="2021.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3489" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3493" href="data:text/plain,nsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3491" font-family="Helvetica, Arial, sans-serif" x="1085" y="2025.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3492" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)</tspan></text></a><a id="SvgjsA3496" href="data:text/plain,mozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3494" font-family="Helvetica, Arial, sans-serif" x="1085" y="2027.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3495" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)</tspan></text></a><a id="SvgjsA3499" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dfloorf%0a%0dmozilla::gfx::AlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dgfxAlphaBoxBlur::CalculateBlurRadius(mozilla::gfx::PointTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;)%0a%0dnsContextBoxBlur::GetBlurRadiusMargin(int, int)%0a%0dnsLayoutUtils::GetBoxShadowRectForFrame(nsIFrame*, nsSize const&amp;)%0a%0dnsDisplayBoxShadowOuter::GetBoundsInternal(void)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayBoxShadowOuter, nsTableCellFrame&gt;(nsDisplayListBuilder*, nsTableCellFrame*)%0a%0dStyle computation%0a%0dPresShell::DoFlushPendingNotifications InterruptibleLayout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(mozilla::WidgetEvent*, nsEventStatus*, bool, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3497" font-family="Helvetica, Arial, sans-serif" x="1085" y="2030.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3498" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3502" href="data:text/plain,mozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3500" font-family="Helvetica, Arial, sans-serif" x="1085" y="2032.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3501" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::widget::ModifierKeyState::ModifierKeyState(void)</tspan></text></a><a id="SvgjsA3505" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3503" font-family="Helvetica, Arial, sans-serif" x="1085" y="2035.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3504" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3508" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3506" font-family="Helvetica, Arial, sans-serif" x="1085" y="2041.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3507" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3511" href="data:text/plain,mozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3509" font-family="Helvetica, Arial, sans-serif" x="1085" y="2043.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3510" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::WidgetEvent::IsUsingCoordinates(void)</tspan></text></a><a id="SvgjsA3514" href="data:text/plain,mozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3512" font-family="Helvetica, Arial, sans-serif" x="1085" y="2046.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3513" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)</tspan></text></a><a id="SvgjsA3517" href="data:text/plain,mozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3515" font-family="Helvetica, Arial, sans-serif" x="1085" y="2048.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3516" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::StaticPrefs::MaybeInitOncePrefs(void)</tspan></text></a><a id="SvgjsA3520" href="data:text/plain,nsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3518" font-family="Helvetica, Arial, sans-serif" x="1085" y="2051.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3519" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)</tspan></text></a><a id="SvgjsA3523" href="data:text/plain,DescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3521" font-family="Helvetica, Arial, sans-serif" x="1085" y="2053.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3522" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">DescendIntoChild</tspan></text></a><a id="SvgjsA3526" href="data:text/plain,mozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3524" font-family="Helvetica, Arial, sans-serif" x="1085" y="2055.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3525" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::nsImageRenderer::ComputeIntrinsicSize(void)</tspan></text></a><a id="SvgjsA3529" href="data:text/plain,mozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3527" font-family="Helvetica, Arial, sans-serif" x="1085" y="2058.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3528" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)</tspan></text></a><a id="SvgjsA3532" href="data:text/plain,uhash_hashLong_65%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dmozilla::PresShell::EventHandler::DispatchEventToDOM(mozilla::WidgetEvent*, nsEventStatus*, nsPresShellEventCB*)%0a%0dmozilla::PresShell::EventHandler::DispatchEvent(mozilla::EventStateManager*, mozilla::WidgetEvent*, bool, nsEventStatus*, nsIContent*)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3530" font-family="Helvetica, Arial, sans-serif" x="1085" y="2062.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3531" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">uhash_hashLong_65</tspan></text></a><a id="SvgjsA3535" href="data:text/plain,NS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3533" font-family="Helvetica, Arial, sans-serif" x="1085" y="2064.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3534" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NS_GetDataType</tspan></text></a><a id="SvgjsA3538" href="data:text/plain,JS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3536" font-family="Helvetica, Arial, sans-serif" x="1085" y="2066.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3537" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">JS::GetObjectRealmOrNull(JSObject*)</tspan></text></a><a id="SvgjsA3541" href="data:text/plain,js::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3539" font-family="Helvetica, Arial, sans-serif" x="1085" y="2069.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3540" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)</tspan></text></a><a id="SvgjsA3544" href="data:text/plain,mozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3542" font-family="Helvetica, Arial, sans-serif" x="1085" y="2071.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3543" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)</tspan></text></a><a id="SvgjsA3547" href="data:text/plain,memcpy()%0a%0djs::NewObjectCache::newObjectFromHit(JSContext*, int, js::gc::InitialHeap)%0a%0dcore::sync::atomic::atomic_compare_exchange&lt;usize&gt;%0a%0datomic_refcell::AtomicBorrowRefMut::new%0a%0datomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;::borrow_mut&lt;style::data::ElementData&gt;%0a%0dcore::option::Option&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;*&gt;::map&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;*,atomic_refcell::AtomicRefMut&lt;style::data::ElementData&gt;,closure-0&gt;%0a%0dstyle::gecko::wrapper::GeckoElement::note_explicit_hints%0a%0dServo_NoteExplicitHints%0a%0dmozilla::RestyleManager::RestyleForEmptyChange(mozilla::dom::Element*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0djs::intl::GetInternalsObject(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0djs::intl_CompareStrings(JSContext*, unsigned int, JS::Value*)%0a%0d0x2c887da1c60%0a%0dmozilla::PrioritizedEventQueue::DidRunEvent(mozilla::BaseAutoLock&lt;mozilla::Mutex&amp;&gt; const&amp;)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::DidRunEvent(void)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dmozilla::BackgroundHangThread::NotifyWait(void)%0a%0dnsThread::DoMainThreadSpecificProcessing(bool)%0a%0dnsThread::ProcessNextEvent(bool, bool*)%0a%0dAssertUniqueItem(nsDisplayItem*)%0a%0dnsDisplayList::AppendNewToTop&lt;nsDisplayXULImage, nsImageBoxFrame&gt;(nsDisplayListBuilder*, nsImageBoxFrame*)%0a%0d0x2c887c1c280%0a%0d[js] _checkWorkerHealth%0a%0d[js] write/&lt;%0a%0dEventDispatcher::Dispatch message%0a%0dnsIFrame::UpdateStyleOfChildAnonBox(nsIFrame*, mozilla::ServoRestyleState&amp;)%0a%0dnsTString&lt;char16_t&gt;::Find&lt;char16_t, void&gt;(nsTString&lt;char16_t&gt; const&amp;, int, int)%0a%0dnsXULCommandDispatcher::Matches(nsTString&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dnsXULCommandDispatcher::UpdateCommands(nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dBaseAllocator::malloc(uint64_t)%0a%0dNS_ReadInputStreamToString(nsIInputStream*, nsTSubstring&lt;char&gt;&amp;, int64_t, uint64_t*)%0a%0dmozilla::net::HttpChannelParent::OnDataAvailable(nsIRequest*, nsIInputStream*, uint64_t, unsigned int)%0a%0dmozilla::net::nsStreamListenerTee::OnDataAvailable(nsIRequest*, nsIInputStream*, uint64_t, unsigned int)%0a%0dmozilla::net::nsHttpChannel::OnDataAvailable(nsIRequest*, nsIInputStream*, uint64_t, unsigned int)%0a%0d0x2c887ac7276%0a%0dnsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, mozilla::ReflowOutput&amp;, mozilla::ReflowInput const&amp;, mozilla::WritingMode const&amp;, mozilla::LogicalPoint const&amp;, nsSize const&amp;, nsIFrame::ReflowChildFlags, nsReflowStatus&amp;, nsOverflowContinuationTracker*)%0a%0dnsHTMLScrollFrame::ReflowScrolledFrame(mozilla::ScrollReflowInput*, bool, bool, mozilla::ReflowOutput*)%0a%0dnsHTMLScrollFrame::ReflowContents(mozilla::ScrollReflowInput*, mozilla::ReflowOutput const&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3545" font-family="Helvetica, Arial, sans-serif" x="1085" y="2074.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3546" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3550" href="data:text/plain,JS_InitializePropertiesFromCompatibleNativeObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3548" font-family="Helvetica, Arial, sans-serif" x="1085" y="2076.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3549" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">JS_InitializePropertiesFromCompatibleNativeObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;)</tspan></text></a><a id="SvgjsA3553" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dJS_InitializePropertiesFromCompatibleNativeObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3551" font-family="Helvetica, Arial, sans-serif" x="1085" y="2079.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3552" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3556" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dJS_InitializePropertiesFromCompatibleNativeObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3554" font-family="Helvetica, Arial, sans-serif" x="1085" y="2081.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3555" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3559" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dJS_InitializePropertiesFromCompatibleNativeObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3557" font-family="Helvetica, Arial, sans-serif" x="1085" y="2084.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3558" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3562" href="data:text/plain,js::jit::ObjectIsCallable(JSObject*)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dJS_InitializePropertiesFromCompatibleNativeObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3560" font-family="Helvetica, Arial, sans-serif" x="1085" y="2086.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3561" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::ObjectIsCallable(JSObject*)</tspan></text></a><a id="SvgjsA3565" href="data:text/plain,js::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0d[js] getUrlFromResult%0a%0d[js] speculativeConnect%0a%0djs::jit::GetNativeDataPropertyByValuePure&lt;0&gt;(JSContext*, JSObject*, JS::Value*)%0a%0d[js] _matchUnknownUrl%0a%0d[js] _matchFirstHeuristicResult%0a%0dmozilla::net::nsHttpResponseHead::HasHeader(mozilla::net::nsHttpAtom)%0a%0dmozilla::net::HttpChannelParent::OnStartRequest(nsIRequest*)%0a%0dRtlpTimeToTimeFields%0a%0d[js] ResolveLocale%0a%0d[js] InitializeCollator%0a%0d&lt;smallvec::Drain&lt;T&gt; as core::ops::drop::Drop&gt;::drop%0a%0dstyle::bloom::StyleBloom&lt;E&gt;::rebuild%0a%0dstyle::traversal::compute_style%0a%0d[js] newChannel%0a%0dimgLoader::LoadImage page-icon:https://www.washingtonpost.com/politics/2020/02/24/campaign-live-updates/ ?? hpid=hp_hp-top-table-low_campaignupdates-1035am%3Aprime-time%2Fpromo#link-M4OG6NRJ2RDS7LPORTIBVRU7QA%0a%0dmozilla::dom::binding_detail::GenericGetter&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0dJS::Zone::getOrCreateUniqueId(js::gc::Cell*, uint64_t*)%0a%0djs::ObjectGroup::lazySingletonGroup(JSContext*, js::ObjectGroup*, JSClass const*, js::TaggedProto)%0a%0dNewObject%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dimgLoader::LoadImage page-icon:https://www.washingtonpost.com/national-security/acting-navy-secretary-resigns-after-insulting-aircraft-carriers-ousted-captain/2020/04/07/263ba574-78f7-11ea-b6ff-597f170df8f8_story.html ?? hpid=hp_hp-top-table-high_modlyout-355pm%3Ahomepage%2Fstory-ans%0a%0dnsBaseChannel::AddRef(void)%0a%0dmozilla::PrioritizableRunnable::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::PutEventInternal(already_AddRefed&lt;nsIRunnable&gt;&amp;&amp;, mozilla::EventQueuePriority, mozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::NestedSink*)%0a%0dmozilla::image::ProgressTracker::Notify(mozilla::image::IProgressObserver*)%0a%0dimgRequestProxy::NotifyListener(void)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dnsContentUtils::ContentIsFlattenedTreeDescendantOf(nsINode const*, nsINode const*)%0a%0dmozilla::EventStateManager::ContentRemoved(mozilla::dom::Document*, nsIContent*)%0a%0djs::CheckedUnwrapDynamic(JSObject*, JSContext*, bool)%0a%0d[js] notifyResult%0a%0dcert_storage::{{impl}}::allocate::QueryInterface%0a%0dnet_EnsurePSMInit(void)%0a%0dmozilla::net::nsHttpConnectionMgr::SpeculativeConnect(mozilla::net::nsHttpConnectionInfo*, nsIInterfaceRequestor*, unsigned int, mozilla::net::NullHttpTransaction*)%0a%0d[js] get iconURI%0a%0d[js] startQuery%0a%0djs::CopyInitializerObject%0a%0dInterpret%0a%0d[js] _fetchRemote%0a%0d[js] fetch%0a%0d[js] execute%0a%0dmozilla::image::RasterImage::OptimalImageSizeForDest(mozilla::gfx::SizeTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;, unsigned int, mozilla::gfx::SamplingFilter, unsigned int)%0a%0dnsLayoutUtils::ComputeImageContainerDrawingParameters(imgIContainer*, nsIFrame*, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;, mozilla::layers::StackingContextHelper const&amp;, unsigned int, mozilla::Maybe&lt;mozilla::SVGImageContext&gt;&amp;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::ActiveLayerTracker::IsStyleAnimated(nsDisplayListBuilder*, nsIFrame*, nsCSSPropertyIDSet const&amp;)%0a%0dnsDisplayOpacity::NeedsActiveLayer(nsDisplayListBuilder*, nsIFrame*, bool)%0a%0dnsIFrame::BuildDisplayListForStackingContext(nsDisplayListBuilder*, nsDisplayList*, bool*)%0a%0dhashglobe::table::round_up_to_next%0a%0dhashglobe::table::calculate_offsets%0a%0dhashglobe::table::RawTable&lt;K,V&gt;::raw_bucket_at%0a%0dhashglobe::table::Bucket&lt;K,V,M&gt;::at_index%0a%0dhashglobe::table::Bucket&lt;K,V,M&gt;::new%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dstyle::selector_map::{{impl}}::lookup::{{closure}}&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dnsTSubstring&lt;char&gt;::Assign(char const*, unsigned int, std::nothrow_t const&amp;)%0a%0dmozilla::net::CacheFileOutputStream::EnsureCorrectChunk(bool)%0a%0dmozilla::net::CacheFileOutputStream::Write(char const*, unsigned int, unsigned int*)%0a%0dmozilla::net::nsStreamLoader::OnDataAvailable(nsIRequest*, nsIInputStream*, uint64_t, unsigned int)%0a%0dmozilla::net::CookieSettings::Release(void)%0a%0dmozilla::AntiTrackingCommon::IsFirstPartyStorageAccessGrantedFor(nsIChannel*, nsIURI*, unsigned int*)%0a%0d[js] _ensureInitialized%0a%0dCanAttachNativeGetProp%0a%0djs::jit::GetPropIRGenerator::tryAttachNative(JS::Handle&lt;JSObject*&gt;, js::jit::ObjOperandId, JS::Handle&lt;JS::PropertyKey&gt;)%0a%0d[js] _on_keyup%0a%0dEventDispatcher::Dispatch keyup%0a%0dNS_NewCStringInputStream(nsIInputStream**, nsTString&lt;char&gt;&amp;&amp;)%0a%0dNS_DeserializeObject(nsTSubstring&lt;char&gt; const&amp;, nsISupports**)%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dRequestBehaviour::GetProgressTracker(void)%0a%0dimgRequestProxy::GetImageStatus(unsigned int*)%0a%0dnsImageBoxFrame::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayItem*, nsPoint, unsigned int)%0a%0dstyle::values::generics::grid::{{impl}}::clone&lt;style::values::generics::grid::GenericTrackSize&lt;style::values::computed::length_percentage::LengthPercentage&gt;&gt;%0a%0dstyle::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoPosition&gt;::copy_grid_auto_rows_from%0a%0dnsReflowStatus::UpdateTruncated(mozilla::ReflowInput const&amp;, mozilla::ReflowOutput const&amp;)%0a%0dmozilla::net::HttpChannelParent::DoAsyncOpen(mozilla::ipc::URIParams const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIReferrerInfo*, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIPrincipal*, unsigned int const&amp;, nsTArray&lt;mozilla::net::RequestHeaderTuple&gt; const&amp;, nsTString&lt;char&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::IPCStream&gt; const&amp;, bool const&amp;, short const&amp;, unsigned int const&amp;, unsigned char const&amp;, bool const&amp;, unsigned int const&amp;, bool const&amp;, uint64_t const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, unsigned int const&amp;, mozilla::Maybe&lt;mozilla::net::LoadInfoArgs&gt; const&amp;, mozilla::Maybe&lt;mozilla::net::nsHttpResponseHead&gt; const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, uint64_t const&amp;, mozilla::Maybe&lt;mozilla::net::CorsPreflightArgs&gt; const&amp;, unsigned int const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, unsigned int const&amp;, uint64_t const&amp;, nsTString&lt;char16_t&gt; const&amp;, uint64_t const&amp;, nsTArray&lt;mozilla::net::PreferredAlternativeDataTypeParams&gt; const&amp;, uint64_t const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;)%0a%0dmozilla::OriginAttributes::CreateSuffix(nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3563" font-family="Helvetica, Arial, sans-serif" x="1085" y="2088.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3564" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)</tspan></text></a><a id="SvgjsA3568" href="data:text/plain,js::jit::MaybeEnterJit(JSContext*, js::RunState&amp;)%0a%0djs::jit::ObjectIsCallable(JSObject*)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dJS_InitializePropertiesFromCompatibleNativeObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3566" font-family="Helvetica, Arial, sans-serif" x="1085" y="2091.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3567" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::MaybeEnterJit(JSContext*, js::RunState&amp;)</tspan></text></a><a id="SvgjsA3571" href="data:text/plain,js::jit::HasPropIRGenerator::tryAttachStub(void)%0a%0djs::jit::TryAttachStub&lt;js::jit::HasPropIRGenerator,js::jit::CacheKind,JS::Handle&lt;JS::Value&gt; &amp;,JS::Handle&lt;JS::Value&gt; &amp;&gt;%0a%0dXULTextElement constructor%0a%0darena_dalloc%0a%0dmozilla::ipc::PrincipalInfoToPrincipal(mozilla::ipc::PrincipalInfo const&amp;, nsresult*)%0a%0dmozilla::net::NeckoParent::AllocPHttpChannelParent(mozilla::dom::PBrowserOrId const&amp;, IPC::SerializedLoadContext const&amp;, mozilla::net::HttpChannelCreationArgs const&amp;)%0a%0dmozilla::net::PNeckoParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dTimerThread::RemoveTimer(nsTimerImpl*)%0a%0dmozilla::net::CacheEntry::NewHandle(void)%0a%0dT_EscapeURL&lt;nsTSubstring&lt;char&gt; &gt;%0a%0dNS_EscapeURLSpan(mozilla::Span&lt;char const, -1&gt;, unsigned int, nsTSubstring&lt;char&gt;&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3569" font-family="Helvetica, Arial, sans-serif" x="1085" y="2094.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3570" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::HasPropIRGenerator::tryAttachStub(void)</tspan></text></a><a id="SvgjsA3574" href="data:text/plain,CanAttachNativeGetProp%0a%0d[js] handleEvent%0a%0djs::jit::HasPropIRGenerator::tryAttachStub(void)%0a%0djs::jit::TryAttachStub&lt;js::jit::HasPropIRGenerator,js::jit::CacheKind,JS::Handle&lt;JS::Value&gt; &amp;,JS::Handle&lt;JS::Value&gt; &amp;&gt;%0a%0dXULTextElement constructor%0a%0darena_dalloc%0a%0dmozilla::ipc::PrincipalInfoToPrincipal(mozilla::ipc::PrincipalInfo const&amp;, nsresult*)%0a%0dmozilla::net::NeckoParent::AllocPHttpChannelParent(mozilla::dom::PBrowserOrId const&amp;, IPC::SerializedLoadContext const&amp;, mozilla::net::HttpChannelCreationArgs const&amp;)%0a%0dmozilla::net::PNeckoParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dTimerThread::RemoveTimer(nsTimerImpl*)%0a%0dmozilla::net::CacheEntry::NewHandle(void)%0a%0dT_EscapeURL&lt;nsTSubstring&lt;char&gt; &gt;%0a%0dNS_EscapeURLSpan(mozilla::Span&lt;char const, -1&gt;, unsigned int, nsTSubstring&lt;char&gt;&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3572" font-family="Helvetica, Arial, sans-serif" x="1085" y="2098.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3573" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">CanAttachNativeGetProp</tspan></text></a><a id="SvgjsA3577" href="data:text/plain,js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)%0a%0dmozilla::dom::HTMLCanvasElement_Binding::getContext%0a%0dHTMLCanvasElement.getContext%0a%0ditrp_InnerExecute%0a%0dnsDisplayBackgroundImage::AppendBackgroundItemsToTop(nsDisplayListBuilder*, nsIFrame*, nsRect const&amp;, nsDisplayList*, bool, mozilla::ComputedStyle*, nsRect const&amp;, nsIFrame*, mozilla::Maybe&lt;nsDisplayListBuilder::AutoBuildingDisplayList&gt;*)%0a%0dnsBaseWidget::ProcessUntransformedAPZEvent(mozilla::WidgetInputEvent*, mozilla::layers::APZEventResult const&amp;)%0a%0dnsBaseWidget::DispatchInputEvent(mozilla::WidgetInputEvent*)%0a%0dnsWindow::DispatchMouseEvent(mozilla::EventMessage, uint64_t, int64_t, bool, short, unsigned short, WinPointerInfo*)%0a%0dnsLayoutUtils::GetEventCoordinatesRelativeTo(mozilla::WidgetEvent const*, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt; const&amp;, nsIFrame*)%0a%0dmozilla::dom::Event::GetClientCoords(nsPresContext*, mozilla::WidgetEvent*, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt;, mozilla::gfx::IntPointTyped&lt;mozilla::CSSPixel&gt;)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3575" font-family="Helvetica, Arial, sans-serif" x="1085" y="2101.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3576" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)</tspan></text></a><a id="SvgjsA3580" href="data:text/plain,mozilla::dom::DOMTokenList_Binding::DOMProxyHandler::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dmozilla::BufferList&lt;js::SystemAllocPolicy&gt;::IterImpl::Advance(mozilla::BufferList&lt;js::SystemAllocPolicy&gt; const&amp;, uint64_t)%0a%0dmozilla::ipc::ReadIPDLParam&lt;mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt; &gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;nsTArray&lt;mozilla::Telemetry::HistogramAccumulation&gt; &gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, nsTArray&lt;mozilla::Telemetry::HistogramAccumulation&gt;*)%0a%0dmozilla::dom::PContentParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dNtUserWindowFromPoint%0a%0dmozilla::widget::MouseScrollHandler::ProcessNativeMouseWheelMessage(nsWindowBase*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::net::nsStandardURL::SchemeIs(char const*, bool*)%0a%0dstyle::properties::LonghandId::to_physical%0a%0dstyle::properties::cascade::Cascade::apply_properties%0a%0dmozilla::ServoStyleSet::ResolveInheritingAnonymousBoxStyle(mozilla::PseudoStyleType, mozilla::ComputedStyle*)%0a%0d[js] _updateResults%0a%0dnsAutoMutationBatch::~nsAutoMutationBatch(void)%0a%0dnsContentUtils::SetNodeTextContent(nsIContent*, nsTSubstring&lt;char16_t&gt; const&amp;, bool)%0a%0d[js] _updateRow%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] _rowCanUpdateToResult%0a%0d[js] _updateResults%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3578" font-family="Helvetica, Arial, sans-serif" x="1085" y="2103.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3579" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::DOMTokenList_Binding::DOMProxyHandler::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3583" href="data:text/plain,mozilla::dom::DOMTokenList_Binding::contains%0a%0d[js] on_mouseout%0a%0dmozilla::dom::DOMTokenList_Binding::DOMProxyHandler::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dmozilla::BufferList&lt;js::SystemAllocPolicy&gt;::IterImpl::Advance(mozilla::BufferList&lt;js::SystemAllocPolicy&gt; const&amp;, uint64_t)%0a%0dmozilla::ipc::ReadIPDLParam&lt;mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt; &gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;nsTArray&lt;mozilla::Telemetry::HistogramAccumulation&gt; &gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, nsTArray&lt;mozilla::Telemetry::HistogramAccumulation&gt;*)%0a%0dmozilla::dom::PContentParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dNtUserWindowFromPoint%0a%0dmozilla::widget::MouseScrollHandler::ProcessNativeMouseWheelMessage(nsWindowBase*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::net::nsStandardURL::SchemeIs(char const*, bool*)%0a%0dstyle::properties::LonghandId::to_physical%0a%0dstyle::properties::cascade::Cascade::apply_properties%0a%0dmozilla::ServoStyleSet::ResolveInheritingAnonymousBoxStyle(mozilla::PseudoStyleType, mozilla::ComputedStyle*)%0a%0d[js] _updateResults%0a%0dnsAutoMutationBatch::~nsAutoMutationBatch(void)%0a%0dnsContentUtils::SetNodeTextContent(nsIContent*, nsTSubstring&lt;char16_t&gt; const&amp;, bool)%0a%0d[js] _updateRow%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] _rowCanUpdateToResult%0a%0d[js] _updateResults%0a%0dmozilla::PresShell::EventHandler::HandleEventUsingCoordinates(nsIFrame*, mozilla::WidgetGUIEvent*, nsEventStatus*, bool)%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3581" font-family="Helvetica, Arial, sans-serif" x="1085" y="2105.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3582" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::DOMTokenList_Binding::contains</tspan></text></a><a id="SvgjsA3586" href="data:text/plain,0x2c887c1ceab%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3584" font-family="Helvetica, Arial, sans-serif" x="1085" y="2108.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3585" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">0x2c887c1ceab</tspan></text></a><a id="SvgjsA3589" href="data:text/plain,js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)%0a%0dmozilla::dom::HTMLCanvasElement_Binding::getContext%0a%0dHTMLCanvasElement.getContext%0a%0ditrp_InnerExecute%0a%0dnsDisplayBackgroundImage::AppendBackgroundItemsToTop(nsDisplayListBuilder*, nsIFrame*, nsRect const&amp;, nsDisplayList*, bool, mozilla::ComputedStyle*, nsRect const&amp;, nsIFrame*, mozilla::Maybe&lt;nsDisplayListBuilder::AutoBuildingDisplayList&gt;*)%0a%0dnsBaseWidget::ProcessUntransformedAPZEvent(mozilla::WidgetInputEvent*, mozilla::layers::APZEventResult const&amp;)%0a%0dnsBaseWidget::DispatchInputEvent(mozilla::WidgetInputEvent*)%0a%0dnsWindow::DispatchMouseEvent(mozilla::EventMessage, uint64_t, int64_t, bool, short, unsigned short, WinPointerInfo*)%0a%0dnsLayoutUtils::GetEventCoordinatesRelativeTo(mozilla::WidgetEvent const*, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt; const&amp;, nsIFrame*)%0a%0dmozilla::dom::Event::GetClientCoords(nsPresContext*, mozilla::WidgetEvent*, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt;, mozilla::gfx::IntPointTyped&lt;mozilla::CSSPixel&gt;)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3587" font-family="Helvetica, Arial, sans-serif" x="1085" y="2110.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3588" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)</tspan></text></a><a id="SvgjsA3592" href="data:text/plain,js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)%0a%0d[js] _mouseleave%0a%0d[js] _mouseleave%0a%0d0x2c887c1ceab%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3590" font-family="Helvetica, Arial, sans-serif" x="1085" y="2113.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3591" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)</tspan></text></a><a id="SvgjsA3595" href="data:text/plain,js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)%0a%0dmozilla::dom::HTMLCanvasElement_Binding::getContext%0a%0dHTMLCanvasElement.getContext%0a%0ditrp_InnerExecute%0a%0dnsDisplayBackgroundImage::AppendBackgroundItemsToTop(nsDisplayListBuilder*, nsIFrame*, nsRect const&amp;, nsDisplayList*, bool, mozilla::ComputedStyle*, nsRect const&amp;, nsIFrame*, mozilla::Maybe&lt;nsDisplayListBuilder::AutoBuildingDisplayList&gt;*)%0a%0dnsBaseWidget::ProcessUntransformedAPZEvent(mozilla::WidgetInputEvent*, mozilla::layers::APZEventResult const&amp;)%0a%0dnsBaseWidget::DispatchInputEvent(mozilla::WidgetInputEvent*)%0a%0dnsWindow::DispatchMouseEvent(mozilla::EventMessage, uint64_t, int64_t, bool, short, unsigned short, WinPointerInfo*)%0a%0dnsLayoutUtils::GetEventCoordinatesRelativeTo(mozilla::WidgetEvent const*, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt; const&amp;, nsIFrame*)%0a%0dmozilla::dom::Event::GetClientCoords(nsPresContext*, mozilla::WidgetEvent*, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt;, mozilla::gfx::IntPointTyped&lt;mozilla::CSSPixel&gt;)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3593" font-family="Helvetica, Arial, sans-serif" x="1085" y="2115.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3594" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)</tspan></text></a><a id="SvgjsA3598" href="data:text/plain,js::NativeObject::lookupPure(JS::PropertyKey)%0a%0d[js] _mouseleave%0a%0d[js] _mouseleave%0a%0djs::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)%0a%0d[js] _mouseleave%0a%0d[js] _mouseleave%0a%0d0x2c887c1ceab%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3596" font-family="Helvetica, Arial, sans-serif" x="1085" y="2118.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3597" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeObject::lookupPure(JS::PropertyKey)</tspan></text></a><a id="SvgjsA3601" href="data:text/plain,js::jit::ObjectHasGetterSetterPure(JSContext*, JSObject*, js::Shape*)%0a%0d0x2c887e6cfe4%0a%0d[js] get messageManager%0a%0d[js] unselectedTabHover%0a%0d[js] _mouseleave%0a%0djs::NativeObject::lookupPure(JS::PropertyKey)%0a%0d[js] _mouseleave%0a%0d[js] _mouseleave%0a%0djs::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)%0a%0d[js] _mouseleave%0a%0d[js] _mouseleave%0a%0d0x2c887c1ceab%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3599" font-family="Helvetica, Arial, sans-serif" x="1085" y="2121.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3600" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::ObjectHasGetterSetterPure(JSContext*, JSObject*, js::Shape*)</tspan></text></a><a id="SvgjsA3604" href="data:text/plain,XPCJSRuntime::Get(void)%0a%0dmozilla::dom::FrameLoader_Binding::get_remoteTab%0a%0dget FrameLoader.remoteTab%0a%0d[js] get isCrashed%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3602" font-family="Helvetica, Arial, sans-serif" x="1085" y="2124.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3603" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">XPCJSRuntime::Get(void)</tspan></text></a><a id="SvgjsA3607" href="data:text/plain,js::gc::GCRuntime::tryNewTenuredThing&lt;JS::Symbol, 1&gt;(JSContext*, js::gc::AllocKind, uint64_t)%0a%0dXPCJSRuntime::Get(void)%0a%0dmozilla::dom::FrameLoader_Binding::get_remoteTab%0a%0dget FrameLoader.remoteTab%0a%0d[js] get isCrashed%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3605" font-family="Helvetica, Arial, sans-serif" x="1085" y="2127.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3606" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::gc::GCRuntime::tryNewTenuredThing&lt;JS::Symbol, 1&gt;(JSContext*, js::gc::AllocKind, uint64_t)</tspan></text></a><a id="SvgjsA3610" href="data:text/plain,mozilla::dom::MessageSender_Binding::sendAsyncMessage%0a%0djs::gc::GCRuntime::tryNewTenuredThing&lt;JS::Symbol, 1&gt;(JSContext*, js::gc::AllocKind, uint64_t)%0a%0dXPCJSRuntime::Get(void)%0a%0dmozilla::dom::FrameLoader_Binding::get_remoteTab%0a%0dget FrameLoader.remoteTab%0a%0d[js] get isCrashed%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3608" font-family="Helvetica, Arial, sans-serif" x="1085" y="2130.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3609" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::MessageSender_Binding::sendAsyncMessage</tspan></text></a><a id="SvgjsA3613" href="data:text/plain,js::ContextChecks::check(js::AbstractFramePtr, int)%0a%0djs::CallObject::create(JSContext*, js::AbstractFramePtr)%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dmozilla::detail::RunnableFunction&lt;`lambda at c:/mozilla-source/mozilla-central/netwerk/url-classifier/AsyncUrlChannelClassifier.cpp:819:13'&gt;::Run%0a%0dmozilla::ipc::ProcessLink::SendMessage(IPC::Message*)%0a%0dIPC::Message::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*)%0a%0dmozilla::net::PHttpChannelParent::SendNotifyClassificationFlags(unsigned int const&amp;, bool const&amp;)%0a%0dPHttpChannel::Msg_NotifyClassificationFlags%0a%0dmozilla::net::HttpChannelParent::NotifyClassificationFlags(unsigned int, bool)%0a%0dmozilla::net::UrlClassifierCommon::AnnotateChannel(nsIChannel*, unsigned int, unsigned int)%0a%0dselectors::matching::matches_complex_selector_internal%0a%0dstyle::stylist::{{impl}}::match_revalidation_selectors::{{closure}}&lt;style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::stylist::RevalidationSelectorAndHashes&gt;::lookup&lt;style::stylist::RevalidationSelectorAndHashes,style::gecko::wrapper::GeckoElement,closure-1&gt;%0a%0dstyle::stylist::Stylist::match_revalidation_selectors%0a%0dstyle::sharing::{{impl}}::revalidation_match_results::{{closure}}&lt;style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dcore::option::Option&lt;smallbitvec::SmallBitVec&gt;::get_or_insert_with&lt;smallbitvec::SmallBitVec,closure-0&gt;%0a%0dstyle::sharing::ValidationData::revalidation_match_results&lt;style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dstyle::sharing::StyleSharingTarget&lt;E&gt;::revalidation_match_results%0a%0dstyle::sharing::checks::revalidate&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::sharing::StyleSharingCache&lt;E&gt;::test_candidate%0a%0dstyle::sharing::{{impl}}::share_style_if_possible::{{closure}}&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0duluru::LRUCache&lt;A&gt;::lookup%0a%0dstyle::sharing::StyleSharingCache&lt;E&gt;::share_style_if_possible%0a%0dstyle::sharing::StyleSharingTarget&lt;E&gt;::share_style_if_possible%0a%0dstyle::traversal::compute_style%0a%0djs::SetObject::clear(JSContext*, unsigned int, JS::Value*)%0a%0d[js] onPaint%0a%0d[js] onQueryResults%0a%0d[js] _updateResults%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3611" font-family="Helvetica, Arial, sans-serif" x="1085" y="2132.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3612" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::ContextChecks::check(js::AbstractFramePtr, int)</tspan></text></a><a id="SvgjsA3616" href="data:text/plain,js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] cancelUnselectedTabHoverTimer%0a%0dnsCSPNonceSrc::visit(nsCSPSrcVisitor*)%0a%0djs::irregexp::Analysis::VisitLoopChoice(js::irregexp::LoopChoiceNode*)%0a%0djs::irregexp::Analysis::VisitText(js::irregexp::TextNode*)%0a%0djs::irregexp::Analysis::VisitBackReference(js::irregexp::BackReferenceNode*)%0a%0djs::irregexp::Analysis::VisitAction(js::irregexp::ActionNode*)%0a%0djs::irregexp::CompilePattern(JSContext*, js::LifoAlloc&amp;, JS::Handle&lt;js::RegExpShared*&gt;, js::irregexp::RegExpCompileData*, JS::Handle&lt;JSLinearString*&gt;, bool, bool, bool, bool, bool, bool, bool, mozilla::Vector&lt;mozilla::UniquePtr&lt;unsigned char[0], JS::FreePolicy&gt;, 0, js::SystemAllocPolicy&gt;&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3614" font-family="Helvetica, Arial, sans-serif" x="1085" y="2135.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3615" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)</tspan></text></a><a id="SvgjsA3619" href="data:text/plain,JS::Rooted&lt;js::SavedStacks::LocationValue&gt;::~Rooted&lt;js::SavedStacks::LocationValue&gt;(void)%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] cancelUnselectedTabHoverTimer%0a%0dnsCSPNonceSrc::visit(nsCSPSrcVisitor*)%0a%0djs::irregexp::Analysis::VisitLoopChoice(js::irregexp::LoopChoiceNode*)%0a%0djs::irregexp::Analysis::VisitText(js::irregexp::TextNode*)%0a%0djs::irregexp::Analysis::VisitBackReference(js::irregexp::BackReferenceNode*)%0a%0djs::irregexp::Analysis::VisitAction(js::irregexp::ActionNode*)%0a%0djs::irregexp::CompilePattern(JSContext*, js::LifoAlloc&amp;, JS::Handle&lt;js::RegExpShared*&gt;, js::irregexp::RegExpCompileData*, JS::Handle&lt;JSLinearString*&gt;, bool, bool, bool, bool, bool, bool, bool, mozilla::Vector&lt;mozilla::UniquePtr&lt;unsigned char[0], JS::FreePolicy&gt;, 0, js::SystemAllocPolicy&gt;&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3617" font-family="Helvetica, Arial, sans-serif" x="1085" y="2137.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3618" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">JS::Rooted&lt;js::SavedStacks::LocationValue&gt;::~Rooted&lt;js::SavedStacks::LocationValue&gt;(void)</tspan></text></a><a id="SvgjsA3622" href="data:text/plain,[js] bound%0a%0dJS::Rooted&lt;js::SavedStacks::LocationValue&gt;::~Rooted&lt;js::SavedStacks::LocationValue&gt;(void)%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] cancelUnselectedTabHoverTimer%0a%0dnsCSPNonceSrc::visit(nsCSPSrcVisitor*)%0a%0djs::irregexp::Analysis::VisitLoopChoice(js::irregexp::LoopChoiceNode*)%0a%0djs::irregexp::Analysis::VisitText(js::irregexp::TextNode*)%0a%0djs::irregexp::Analysis::VisitBackReference(js::irregexp::BackReferenceNode*)%0a%0djs::irregexp::Analysis::VisitAction(js::irregexp::ActionNode*)%0a%0djs::irregexp::CompilePattern(JSContext*, js::LifoAlloc&amp;, JS::Handle&lt;js::RegExpShared*&gt;, js::irregexp::RegExpCompileData*, JS::Handle&lt;JSLinearString*&gt;, bool, bool, bool, bool, bool, bool, bool, mozilla::Vector&lt;mozilla::UniquePtr&lt;unsigned char[0], JS::FreePolicy&gt;, 0, js::SystemAllocPolicy&gt;&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3620" font-family="Helvetica, Arial, sans-serif" x="1085" y="2140.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3621" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">[js] bound</tspan></text></a><a id="SvgjsA3625" href="data:text/plain,mozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3623" font-family="Helvetica, Arial, sans-serif" x="1085" y="2142.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3624" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)</tspan></text></a><a id="SvgjsA3628" href="data:text/plain,js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)%0a%0djs::jit::TypeMonitorResult(JSContext*, js::jit::ICMonitoredFallbackStub*, js::jit::BaselineFrame*, JS::Handle&lt;JSScript*&gt;, unsigned char*, JS::Handle&lt;JS::Value&gt;)%0a%0djs::jit::DoGetNameFallback(JSContext*, js::jit::BaselineFrame*, js::jit::ICGetName_Fallback*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d0x2c887ac7206%0a%0d[js] getWrapper%0a%0d[js] observe%0a%0dint64_t CtfHookProcWorker(int,uint64_t,int64_t,uint64_t)%0a%0duint64_t CallHookWithSEH(struct _GENERICHOOKHEADER *,void *,unsigned long *,uint64_t)%0a%0dfnHkINLPMSG%0a%0dNS_DispatchToCurrentThread(nsIRunnable*)%0a%0dmozilla::net::CacheFile::RemoveOutput(mozilla::net::CacheFileOutputStream*, nsresult)%0a%0dmozilla::net::CacheFileOutputStream::Release(void)%0a%0dmozilla::net::nsStreamListenerTee::OnStopRequest(nsIRequest*, nsresult)%0a%0dmozilla::net::nsHttpChannel::ContinueOnStopRequest(nsresult, bool, bool)%0a%0darena_t::DallocSmall(arena_chunk_t*, void*, arena_chunk_map_t*)%0a%0dmemcpy()%0a%0dmozilla::BufferList&lt;InfallibleAllocPolicy&gt;::WriteBytes(char const*, uint64_t)%0a%0dmozilla::net::PHttpChannelParent::SendOnStartRequest(nsresult const&amp;, mozilla::net::nsHttpResponseHead const&amp;, bool const&amp;, mozilla::net::nsHttpHeaderArray const&amp;, mozilla::net::ParentLoadInfoForwarderArgs const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, uint64_t const&amp;, int const&amp;, unsigned int const&amp;, nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, mozilla::net::NetAddr const&amp;, mozilla::net::NetAddr const&amp;, short const&amp;, unsigned int const&amp;, nsTString&lt;char&gt; const&amp;, int64_t const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, mozilla::net::ResourceTimingStructArgs const&amp;, bool const&amp;, mozilla::Maybe&lt;unsigned int&gt; const&amp;, bool const&amp;, nsILoadInfo::CrossOriginOpenerPolicy const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText3626" font-family="Helvetica, Arial, sans-serif" x="1085" y="2145.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3627" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)</tspan></text></a><a id="SvgjsA3631" href="data:text/plain,js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)%0a%0d[js] _mouseleave%0a%0d[js] _mouseleave%0a%0d0x2c887c1ceab%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3629" font-family="Helvetica, Arial, sans-serif" x="1085" y="2147.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3630" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)</tspan></text></a><a id="SvgjsA3634" href="data:text/plain,Interpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3632" font-family="Helvetica, Arial, sans-serif" x="1085" y="2149.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3633" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a><a id="SvgjsA3637" href="data:text/plain,js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0dInterpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3635" font-family="Helvetica, Arial, sans-serif" x="1085" y="2152.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3636" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)</tspan></text></a><a id="SvgjsA3640" href="data:text/plain,[js] speculativeConnectOnTabHover%0a%0d[js] _mouseenter%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0dInterpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3638" font-family="Helvetica, Arial, sans-serif" x="1085" y="2154.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3639" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">[js] speculativeConnectOnTabHover</tspan></text></a><a id="SvgjsA3643" href="data:text/plain,js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] canWarmTab%0a%0d[js] shouldWarmTab%0a%0d[js] warmupTab%0a%0d[js] warmupTab%0a%0d[js] speculativeConnectOnTabHover%0a%0d[js] _mouseenter%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0dInterpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3641" font-family="Helvetica, Arial, sans-serif" x="1085" y="2157.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3642" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)</tspan></text></a><a id="SvgjsA3646" href="data:text/plain,0x2c887c1c2a1%0a%0d[js] lazyGetter%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] canWarmTab%0a%0d[js] shouldWarmTab%0a%0d[js] warmupTab%0a%0d[js] warmupTab%0a%0d[js] speculativeConnectOnTabHover%0a%0d[js] _mouseenter%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0dInterpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3644" font-family="Helvetica, Arial, sans-serif" x="1085" y="2159.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3645" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">0x2c887c1c2a1</tspan></text></a><a id="SvgjsA3649" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3647" font-family="Helvetica, Arial, sans-serif" x="1085" y="2162.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3648" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3652" href="data:text/plain,Interpret%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3650" font-family="Helvetica, Arial, sans-serif" x="1085" y="2164.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3651" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a><a id="SvgjsA3655" href="data:text/plain,alloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3653" font-family="Helvetica, Arial, sans-serif" x="1085" y="2167.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3654" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">alloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;</tspan></text></a><a id="SvgjsA3658" href="data:text/plain,&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3656" font-family="Helvetica, Arial, sans-serif" x="1085" y="2169.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3657" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">&lt;[T; _] as smallvec::Array&gt;::size</tspan></text></a><a id="SvgjsA3661" href="data:text/plain,Gecko_SnapshotHasAttr%0a%0dselectors::matching::matches_simple_selector%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3659" font-family="Helvetica, Arial, sans-serif" x="1085" y="2172.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3660" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Gecko_SnapshotHasAttr</tspan></text></a><a id="SvgjsA3664" href="data:text/plain,core::sync::atomic::AtomicUsize::load%0a%0dstyle::rule_tree::StrongRuleNode::maybe_gc%0a%0dGecko_SnapshotHasAttr%0a%0dselectors::matching::matches_simple_selector%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3662" font-family="Helvetica, Arial, sans-serif" x="1085" y="2174.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3663" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">core::sync::atomic::AtomicUsize::load</tspan></text></a><a id="SvgjsA3667" href="data:text/plain,mozilla::dom::MouseEvent_Binding::get_screenX%0a%0dcore::sync::atomic::AtomicUsize::load%0a%0dstyle::rule_tree::StrongRuleNode::maybe_gc%0a%0dGecko_SnapshotHasAttr%0a%0dselectors::matching::matches_simple_selector%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3665" font-family="Helvetica, Arial, sans-serif" x="1085" y="2176.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3666" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::MouseEvent_Binding::get_screenX</tspan></text></a><a id="SvgjsA3670" href="data:text/plain,NS_TableDrivenQI(void*, nsID const&amp;, void**, QITableEntry const*)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0dmozilla::net::CacheFileMetadata::GetElement(char const*)%0a%0dProxyListener::OnStartRequest(nsIRequest*)%0a%0dvirtual long CACPWrap::OnLockGranted(unsigned long)%0a%0dmozilla::widget::TSFTextStore::RequestLock(unsigned long, long*)%0a%0dvirtual long CACPWrap::OnTextChange(unsigned long,struct TS_TEXTCHANGE const *)%0a%0dmozilla::widget::TSFTextStore::NotifyTSFOfTextChange(void)%0a%0dmozilla::widget::TSFTextStore::MaybeFlushPendingNotifications(void)%0a%0dmozilla::widget::TSFTextStore::OnTextChangeInternal(mozilla::widget::IMENotification const&amp;)%0a%0dmozilla::widget::IMEHandler::NotifyIME(nsWindow*, mozilla::widget::IMENotification const&amp;)%0a%0dmozilla::IMEContentObserver::IMENotificationSender::SendTextChange(void)%0a%0dmozilla::IMEContentObserver::IMENotificationSender::Run(void)%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dprofiler_tracing_marker(char const*, char const*, JS::ProfilingCategoryPair, TracingKind, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;, mozilla::Maybe&lt;uint64_t&gt; const&amp;)%0a%0dmozilla::PresShell::DoReflow(nsIFrame*, bool, mozilla::OverflowChangedTracker*)%0a%0dReflow chrome://browser/content/browser.xhtml%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3668" font-family="Helvetica, Arial, sans-serif" x="1085" y="2179.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3669" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NS_TableDrivenQI(void*, nsID const&amp;, void**, QITableEntry const*)</tspan></text></a><a id="SvgjsA3673" href="data:text/plain,Gecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3671" font-family="Helvetica, Arial, sans-serif" x="1085" y="2181.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3672" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Gecko_FinalizeString</tspan></text></a><a id="SvgjsA3676" href="data:text/plain,&lt;rsdparsa_capi::attribute::RustSdpAttributeImageAttrSetList as core::convert::From&lt;&amp;webrtc_sdp::attribute_type::SdpAttributeImageAttrSetList&gt;&gt;::from%0a%0dstyle::rule_tree::{{impl}}::next::{{closure}}%0a%0dcore::option::Option&lt;style::rule_tree::StrongRuleNode*&gt;::map&lt;style::rule_tree::StrongRuleNode*,style::rule_tree::StrongRuleNode*,closure-0&gt;%0a%0d&lt;style::rule_tree::SelfAndAncestors as core::iter::traits::iterator::Iterator&gt;::next%0a%0dstyle::rule_tree::StrongRuleNode::has_author_specified_rules%0a%0dServo_HasAuthorSpecifiedRules%0a%0dnsPresContext::HasAuthorSpecifiedRules(nsIFrame const*, unsigned int)%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsDisplayBackgroundImage::AppendBackgroundItemsToTop(nsDisplayListBuilder*, nsIFrame*, nsRect const&amp;, nsDisplayList*, bool, mozilla::ComputedStyle*, nsRect const&amp;, nsIFrame*, mozilla::Maybe&lt;nsDisplayListBuilder::AutoBuildingDisplayList&gt;*)%0a%0dnsBaseWidget::ProcessUntransformedAPZEvent(mozilla::WidgetInputEvent*, mozilla::layers::APZEventResult const&amp;)%0a%0dnsBaseWidget::DispatchInputEvent(mozilla::WidgetInputEvent*)%0a%0dnsWindow::DispatchMouseEvent(mozilla::EventMessage, uint64_t, int64_t, bool, short, unsigned short, WinPointerInfo*)%0a%0dnsLayoutUtils::GetEventCoordinatesRelativeTo(mozilla::WidgetEvent const*, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt; const&amp;, nsIFrame*)%0a%0dmozilla::dom::Event::GetClientCoords(nsPresContext*, mozilla::WidgetEvent*, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt;, mozilla::gfx::IntPointTyped&lt;mozilla::CSSPixel&gt;)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3674" font-family="Helvetica, Arial, sans-serif" x="1085" y="2184.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3675" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">&lt;rsdparsa_capi::attribute::RustSdpAttributeImageAttrSetList as core::convert::From&lt;&amp;webrtc_sdp::attribute_type::SdpAttributeImageAttrSetList&gt;&gt;::from</tspan></text></a><a id="SvgjsA3679" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3677" font-family="Helvetica, Arial, sans-serif" x="1085" y="2186.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3678" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3682" href="data:text/plain,js::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0d[js] on_mousedown%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3680" font-family="Helvetica, Arial, sans-serif" x="1085" y="2189.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3681" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)</tspan></text></a><a id="SvgjsA3685" href="data:text/plain,mozilla::dom::Document_Binding::get_commandDispatcher%0a%0dmozilla::dom::GetPropertyOnPrototype(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::HTMLDocument_Binding::DOMProxyHandler::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0d[js] on_mousedown%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3683" font-family="Helvetica, Arial, sans-serif" x="1085" y="2191.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3684" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::Document_Binding::get_commandDispatcher</tspan></text></a><a id="SvgjsA3688" href="data:text/plain,nsWrapperCache::GetWrapper(void)%0a%0dWrapDOMObject&lt;mozilla::dom::Element&gt;%0a%0dmozilla::dom::Document_Binding::get_commandDispatcher%0a%0dmozilla::dom::GetPropertyOnPrototype(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::HTMLDocument_Binding::DOMProxyHandler::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0d[js] on_mousedown%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3686" font-family="Helvetica, Arial, sans-serif" x="1085" y="2194.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3687" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsWrapperCache::GetWrapper(void)</tspan></text></a><a id="SvgjsA3691" href="data:text/plain,intrinsic_UnsafeGetReservedSlot%0a%0d[js] from%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dWrapDOMObject&lt;mozilla::dom::Element&gt;%0a%0dmozilla::dom::Document_Binding::get_commandDispatcher%0a%0dmozilla::dom::GetPropertyOnPrototype(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::HTMLDocument_Binding::DOMProxyHandler::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0d[js] on_mousedown%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3689" font-family="Helvetica, Arial, sans-serif" x="1085" y="2196.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3690" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">intrinsic_UnsafeGetReservedSlot</tspan></text></a><a id="SvgjsA3694" href="data:text/plain,js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0dInterpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3692" font-family="Helvetica, Arial, sans-serif" x="1085" y="2198.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3693" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)</tspan></text></a><a id="SvgjsA3697" href="data:text/plain,js::Allocate&lt;js::jit::JitCode, 0&gt;(JSContext*)%0a%0djs::jit::JitCode::New&lt;0&gt;(JSContext*, unsigned char*, unsigned int, unsigned int, js::jit::ExecutablePool*, js::jit::CodeKind)%0a%0dintrinsic_UnsafeGetReservedSlot%0a%0d[js] from%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dWrapDOMObject&lt;mozilla::dom::Element&gt;%0a%0dmozilla::dom::Document_Binding::get_commandDispatcher%0a%0dmozilla::dom::GetPropertyOnPrototype(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::HTMLDocument_Binding::DOMProxyHandler::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0d[js] on_mousedown%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3695" font-family="Helvetica, Arial, sans-serif" x="1085" y="2201.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3696" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::Allocate&lt;js::jit::JitCode, 0&gt;(JSContext*)</tspan></text></a><a id="SvgjsA3700" href="data:text/plain,js::ValueToId&lt;1&gt;(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::PropertyKey&gt;)%0a%0d[js] set selectedIndex%0a%0djs::Allocate&lt;js::jit::JitCode, 0&gt;(JSContext*)%0a%0djs::jit::JitCode::New&lt;0&gt;(JSContext*, unsigned char*, unsigned int, unsigned int, js::jit::ExecutablePool*, js::jit::CodeKind)%0a%0dintrinsic_UnsafeGetReservedSlot%0a%0d[js] from%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dWrapDOMObject&lt;mozilla::dom::Element&gt;%0a%0dmozilla::dom::Document_Binding::get_commandDispatcher%0a%0dmozilla::dom::GetPropertyOnPrototype(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::HTMLDocument_Binding::DOMProxyHandler::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0d[js] on_mousedown%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3698" font-family="Helvetica, Arial, sans-serif" x="1085" y="2203.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3699" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::ValueToId&lt;1&gt;(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::PropertyKey&gt;)</tspan></text></a><a id="SvgjsA3703" href="data:text/plain,js::UncheckedUnwrap(JSObject*, bool, unsigned int*)%0a%0djs::ValueToId&lt;1&gt;(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::PropertyKey&gt;)%0a%0d[js] set selectedIndex%0a%0djs::Allocate&lt;js::jit::JitCode, 0&gt;(JSContext*)%0a%0djs::jit::JitCode::New&lt;0&gt;(JSContext*, unsigned char*, unsigned int, unsigned int, js::jit::ExecutablePool*, js::jit::CodeKind)%0a%0dintrinsic_UnsafeGetReservedSlot%0a%0d[js] from%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dWrapDOMObject&lt;mozilla::dom::Element&gt;%0a%0dmozilla::dom::Document_Binding::get_commandDispatcher%0a%0dmozilla::dom::GetPropertyOnPrototype(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::HTMLDocument_Binding::DOMProxyHandler::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0d[js] on_mousedown%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3701" font-family="Helvetica, Arial, sans-serif" x="1085" y="2206.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3702" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::UncheckedUnwrap(JSObject*, bool, unsigned int*)</tspan></text></a><a id="SvgjsA3706" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mouseout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::ipc::ReadIPDLParam&lt;mozilla::layers::APZEventResult&gt;%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dmozilla::SVGObserverUtils::GetAndObserveMasks(nsIFrame*, nsTArray&lt;nsSVGMaskFrame*&gt;*)%0a%0dmozilla::SchedulerGroup::EventTargetFor(mozilla::TaskCategory)%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::tokenizer::Tokenizer::is_eof%0a%0dcssparser::tokenizer::Tokenizer::next_byte%0a%0dcssparser::parser::Parser::expect_exhausted%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcore::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dstyle::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3704" font-family="Helvetica, Arial, sans-serif" x="1085" y="2208.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3705" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3709" href="data:text/plain,0x2c887c1f6b1%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3707" font-family="Helvetica, Arial, sans-serif" x="1085" y="2212.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3708" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">0x2c887c1f6b1</tspan></text></a><a id="SvgjsA3712" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3710" font-family="Helvetica, Arial, sans-serif" x="1085" y="2214.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3711" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3715" href="data:text/plain,[js] get currentURI%0a%0d[js] tinfo%0a%0d[js] requestTab%0a%0d0x2c887c1f6b1%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3713" font-family="Helvetica, Arial, sans-serif" x="1085" y="2217.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3714" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">[js] get currentURI</tspan></text></a><a id="SvgjsA3718" href="data:text/plain,XPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0d[js] addMarker%0a%0d[js] noteStartTabSwitch%0a%0d[js] get currentURI%0a%0d[js] tinfo%0a%0d[js] requestTab%0a%0d0x2c887c1f6b1%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3716" font-family="Helvetica, Arial, sans-serif" x="1085" y="2219.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3717" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">XPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)</tspan></text></a><a id="SvgjsA3721" href="data:text/plain,js::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3719" font-family="Helvetica, Arial, sans-serif" x="1085" y="2222.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3720" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)</tspan></text></a><a id="SvgjsA3724" href="data:text/plain,`anonymous namespace'::ParticularProcessPriorityManager::ScheduleResetPriority%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3722" font-family="Helvetica, Arial, sans-serif" x="1085" y="2224.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3723" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">`anonymous namespace'::ParticularProcessPriorityManager::ScheduleResetPriority</tspan></text></a><a id="SvgjsA3727" href="data:text/plain,0x2c887c1c417%0a%0d[js] next%0a%0d[js] preActions%0a%0d`anonymous namespace'::ParticularProcessPriorityManager::ScheduleResetPriority%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3725" font-family="Helvetica, Arial, sans-serif" x="1085" y="2227.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3726" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">0x2c887c1c417</tspan></text></a><a id="SvgjsA3730" href="data:text/plain,XPCRootSetElem::RemoveFromRootSet(void)%0a%0dnsTimerImpl::CancelImpl(bool)%0a%0d[js] clearTimer%0a%0d[js] onQueueUnload%0a%0d[js] handleEvent%0a%0d0x2c887c1c417%0a%0d[js] next%0a%0d[js] preActions%0a%0d`anonymous namespace'::ParticularProcessPriorityManager::ScheduleResetPriority%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3728" font-family="Helvetica, Arial, sans-serif" x="1085" y="2229.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3729" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">XPCRootSetElem::RemoveFromRootSet(void)</tspan></text></a><a id="SvgjsA3733" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3731" font-family="Helvetica, Arial, sans-serif" x="1085" y="2231.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3732" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3736" href="data:text/plain,0x2c887accae2%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3734" font-family="Helvetica, Arial, sans-serif" x="1085" y="2234.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3735" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">0x2c887accae2</tspan></text></a><a id="SvgjsA3739" href="data:text/plain,mozilla::EventListenerService::NotifyAboutMainThreadListenerChangeInternal(mozilla::dom::EventTarget*, nsAtom*)%0a%0dmozilla::EventListenerManager::AddEventListenerInternal(mozilla::dom::CallbackObjectHolder&lt;mozilla::dom::EventListener, nsIDOMEventListener&gt;, mozilla::EventMessage, nsAtom*, mozilla::EventListenerFlags const&amp;, bool, bool)%0a%0dmozilla::EventListenerManager::AddEventListenerByType(mozilla::dom::CallbackObjectHolder&lt;mozilla::dom::EventListener, nsIDOMEventListener&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::EventListenerFlags const&amp;, mozilla::dom::Optional&lt;bool&gt; const&amp;)%0a%0dmozilla::dom::EventTarget::AddEventListener(nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::dom::EventListener*, mozilla::dom::AddEventListenerOptionsOrBoolean const&amp;, mozilla::dom::Nullable&lt;bool&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::EventTarget_Binding::addEventListener%0a%0d[js] updateCurrentBrowser%0a%0d0x2c887accae2%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3737" font-family="Helvetica, Arial, sans-serif" x="1085" y="2236.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3738" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::EventListenerService::NotifyAboutMainThreadListenerChangeInternal(mozilla::dom::EventTarget*, nsAtom*)</tspan></text></a><a id="SvgjsA3742" href="data:text/plain,js::jit::RHypot::opcode(void)%0a%0dnsFrame::DestroyFrom(nsIFrame*, mozilla::layout::PostFrameDestroyData&amp;)%0a%0dnsFrameList::DestroyFrame(nsIFrame*)%0a%0dnsPlaceholderFrame::DestroyFrom(nsIFrame*, mozilla::layout::PostFrameDestroyData&amp;)%0a%0dmozilla::EventListenerService::NotifyAboutMainThreadListenerChangeInternal(mozilla::dom::EventTarget*, nsAtom*)%0a%0dmozilla::EventListenerManager::AddEventListenerInternal(mozilla::dom::CallbackObjectHolder&lt;mozilla::dom::EventListener, nsIDOMEventListener&gt;, mozilla::EventMessage, nsAtom*, mozilla::EventListenerFlags const&amp;, bool, bool)%0a%0dmozilla::EventListenerManager::AddEventListenerByType(mozilla::dom::CallbackObjectHolder&lt;mozilla::dom::EventListener, nsIDOMEventListener&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::EventListenerFlags const&amp;, mozilla::dom::Optional&lt;bool&gt; const&amp;)%0a%0dmozilla::dom::EventTarget::AddEventListener(nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::dom::EventListener*, mozilla::dom::AddEventListenerOptionsOrBoolean const&amp;, mozilla::dom::Nullable&lt;bool&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::EventTarget_Binding::addEventListener%0a%0d[js] updateCurrentBrowser%0a%0d0x2c887accae2%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3740" font-family="Helvetica, Arial, sans-serif" x="1085" y="2239.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3741" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::RHypot::opcode(void)</tspan></text></a><a id="SvgjsA3745" href="data:text/plain,core::f32::{{impl}}::max%0a%0dstyle::values::computed::length_percentage::&lt;impl style::values::specified::calc::CalcLengthPercentage&gt;::to_computed_value_with_zoom%0a%0dstyle::values::generics::length::{{impl}}::to_computed_value&lt;style::values::generics::NonNegative&lt;style::values::specified::length::LengthPercentage&gt;&gt;%0a%0dstyle::properties::longhands::max_width::cascade_property%0a%0djs::jit::RHypot::opcode(void)%0a%0dnsFrame::DestroyFrom(nsIFrame*, mozilla::layout::PostFrameDestroyData&amp;)%0a%0dnsFrameList::DestroyFrame(nsIFrame*)%0a%0dnsPlaceholderFrame::DestroyFrom(nsIFrame*, mozilla::layout::PostFrameDestroyData&amp;)%0a%0dmozilla::EventListenerService::NotifyAboutMainThreadListenerChangeInternal(mozilla::dom::EventTarget*, nsAtom*)%0a%0dmozilla::EventListenerManager::AddEventListenerInternal(mozilla::dom::CallbackObjectHolder&lt;mozilla::dom::EventListener, nsIDOMEventListener&gt;, mozilla::EventMessage, nsAtom*, mozilla::EventListenerFlags const&amp;, bool, bool)%0a%0dmozilla::EventListenerManager::AddEventListenerByType(mozilla::dom::CallbackObjectHolder&lt;mozilla::dom::EventListener, nsIDOMEventListener&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::EventListenerFlags const&amp;, mozilla::dom::Optional&lt;bool&gt; const&amp;)%0a%0dmozilla::dom::EventTarget::AddEventListener(nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::dom::EventListener*, mozilla::dom::AddEventListenerOptionsOrBoolean const&amp;, mozilla::dom::Nullable&lt;bool&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::EventTarget_Binding::addEventListener%0a%0d[js] updateCurrentBrowser%0a%0d0x2c887accae2%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3743" font-family="Helvetica, Arial, sans-serif" x="1085" y="2241.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3744" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">core::f32::{{impl}}::max</tspan></text></a><a id="SvgjsA3748" href="data:text/plain,&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3746" font-family="Helvetica, Arial, sans-serif" x="1085" y="2244.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3747" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop</tspan></text></a><a id="SvgjsA3751" href="data:text/plain,style::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoBackground&gt;::set_background_color%0a%0dstyle::properties::StyleBuilder::set_background_color%0a%0dstyle::properties::longhands::background_color::cascade_property%0a%0d0x2c887accae2%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3749" font-family="Helvetica, Arial, sans-serif" x="1085" y="2246.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3750" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">style::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoBackground&gt;::set_background_color</tspan></text></a><a id="SvgjsA3754" href="data:text/plain,style::properties::longhands::border_bottom_width::cascade_property%0a%0dstyle::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoBackground&gt;::set_background_color%0a%0dstyle::properties::StyleBuilder::set_background_color%0a%0dstyle::properties::longhands::background_color::cascade_property%0a%0d0x2c887accae2%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3752" font-family="Helvetica, Arial, sans-serif" x="1085" y="2249.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3753" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">style::properties::longhands::border_bottom_width::cascade_property</tspan></text></a><a id="SvgjsA3757" href="data:text/plain,0x2c887c1c417%0a%0d[js] next%0a%0d[js] preActions%0a%0d`anonymous namespace'::ParticularProcessPriorityManager::ScheduleResetPriority%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3755" font-family="Helvetica, Arial, sans-serif" x="1085" y="2251.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3756" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">0x2c887c1c417</tspan></text></a><a id="SvgjsA3760" href="data:text/plain,js::NewArrayOperationWithTemplate(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0d[js] getBlockedPopupCount%0a%0d[js] updateCurrentBrowser%0a%0dstyle::properties::longhands::border_bottom_width::cascade_property%0a%0dstyle::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoBackground&gt;::set_background_color%0a%0dstyle::properties::StyleBuilder::set_background_color%0a%0dstyle::properties::longhands::background_color::cascade_property%0a%0d0x2c887accae2%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3758" font-family="Helvetica, Arial, sans-serif" x="1085" y="2253.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3759" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NewArrayOperationWithTemplate(JSContext*, JS::Handle&lt;JSObject*&gt;)</tspan></text></a><a id="SvgjsA3763" href="data:text/plain,js::jit::IonBuilder::makeInliningDecision(JSObject*, js::jit::CallInfo&amp;)%0a%0djs::jit::IonBuilder::inlineCallsite(mozilla::Vector&lt;js::jit::InliningTarget, 4, js::jit::JitAllocPolicy&gt; const&amp;, js::jit::CallInfo&amp;)%0a%0d[js] getBlockedPopupCount%0a%0djs::NewArrayOperationWithTemplate(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0d[js] getBlockedPopupCount%0a%0d[js] updateCurrentBrowser%0a%0dstyle::properties::longhands::border_bottom_width::cascade_property%0a%0dstyle::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoBackground&gt;::set_background_color%0a%0dstyle::properties::StyleBuilder::set_background_color%0a%0dstyle::properties::longhands::background_color::cascade_property%0a%0d0x2c887accae2%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3761" font-family="Helvetica, Arial, sans-serif" x="1085" y="2256.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3762" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::IonBuilder::makeInliningDecision(JSObject*, js::jit::CallInfo&amp;)</tspan></text></a><a id="SvgjsA3766" href="data:text/plain,RtlpWakeConditionVariable%0a%0djs::StartOffThreadIonCompile(js::jit::IonBuilder*, js::AutoLockHelperThreadState const&amp;)%0a%0djs::jit::Compile%0a%0djs::jit::IonBuilder::makeInliningDecision(JSObject*, js::jit::CallInfo&amp;)%0a%0djs::jit::IonBuilder::inlineCallsite(mozilla::Vector&lt;js::jit::InliningTarget, 4, js::jit::JitAllocPolicy&gt; const&amp;, js::jit::CallInfo&amp;)%0a%0d[js] getBlockedPopupCount%0a%0djs::NewArrayOperationWithTemplate(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0d[js] getBlockedPopupCount%0a%0d[js] updateCurrentBrowser%0a%0dstyle::properties::longhands::border_bottom_width::cascade_property%0a%0dstyle::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoBackground&gt;::set_background_color%0a%0dstyle::properties::StyleBuilder::set_background_color%0a%0dstyle::properties::longhands::background_color::cascade_property%0a%0d0x2c887accae2%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3764" font-family="Helvetica, Arial, sans-serif" x="1085" y="2258.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3765" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">RtlpWakeConditionVariable</tspan></text></a><a id="SvgjsA3769" href="data:text/plain,js::NewDenseFullyAllocatedArray(JSContext*, unsigned int, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)%0a%0d[js] getBlockedPopupCount%0a%0dRtlpWakeConditionVariable%0a%0djs::StartOffThreadIonCompile(js::jit::IonBuilder*, js::AutoLockHelperThreadState const&amp;)%0a%0djs::jit::Compile%0a%0djs::jit::IonBuilder::makeInliningDecision(JSObject*, js::jit::CallInfo&amp;)%0a%0djs::jit::IonBuilder::inlineCallsite(mozilla::Vector&lt;js::jit::InliningTarget, 4, js::jit::JitAllocPolicy&gt; const&amp;, js::jit::CallInfo&amp;)%0a%0d[js] getBlockedPopupCount%0a%0djs::NewArrayOperationWithTemplate(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0d[js] getBlockedPopupCount%0a%0d[js] updateCurrentBrowser%0a%0dstyle::properties::longhands::border_bottom_width::cascade_property%0a%0dstyle::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoBackground&gt;::set_background_color%0a%0dstyle::properties::StyleBuilder::set_background_color%0a%0dstyle::properties::longhands::background_color::cascade_property%0a%0d0x2c887accae2%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3767" font-family="Helvetica, Arial, sans-serif" x="1085" y="2261.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3768" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NewDenseFullyAllocatedArray(JSContext*, unsigned int, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind)</tspan></text></a><a id="SvgjsA3772" href="data:text/plain,js::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)%0a%0dJS::WeakCache&lt;JS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt; &gt;::lookupForAdd(js::ObjectGroupRealm::AllocationSiteKey const&amp;)%0a%0d[js] getMouseTargetRect%0a%0d[js] forEach%0a%0dwebrender_api::display_list::DisplayListBuilder::push_image%0a%0dmozilla::layers::WebRenderCommandBuilder::PushItemAsImage(nsDisplayItem*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::WeakFrameRegion::RemoveModifiedFramesAndRects(void)%0a%0dcore::slice::{{impl}}::next&lt;webrender_bindings::bindings::WrTransformProperty&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;style::values::generics::transform::GenericTransformOperation&lt;style::values::computed::angle::Angle, f32, style::values::computed::length::CSSPixelLength, i32, style::values::computed::length_percentage::LengthPercentage&gt;&gt;,(),closure-0,core::result::Result&lt;(), !&gt;&gt;%0a%0dcore::iter::traits::iterator::Iterator::fold&lt;core::slice::Iter&lt;style::values::generics::transform::GenericTransformOperation&lt;style::values::computed::angle::Angle, f32, style::values::computed::length::CSSPixelLength, i32, style::values::computed::length_percentage::LengthPercentage&gt;&gt;,(),closure-0&gt;%0a%0d&lt;core::iter::adapters::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold%0a%0dcore::iter::traits::iterator::Iterator::for_each&lt;core::iter::adapters::Map&lt;core::slice::Iter&lt;style::values::generics::transform::GenericTransformOperation&lt;style::values::computed::angle::Angle, f32, style::values::computed::length::CSSPixelLength, i32, style::values::computed::length_percentage::LengthPercentage&gt;&gt;, fn(style::values::generics::transform::GenericTransformOperation&lt;style::values::computed::angle::Angle, f32, style::values::computed::length::CSSPixelLength, i32, style::values::computed::length_percentage::LengthPercentage&gt;*) -&gt; style::values::generics::transform::GenericTransformOperation&lt;style::values::specified::angle::Angle, style::values::specified::Number, style::values::specified::length::Length, style::values::specified::Integer, style::values::specified::length::LengthPercentage&gt;&gt;,closure-0&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dUnwrapDOMObject&lt;mozilla::dom::prototypes::id::Element,mozilla::dom::Element&gt;%0a%0dXPCConvert::JSData2Native(JSContext*, void*, JS::Handle&lt;JS::Value&gt;, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dservo_arc::thin_to_thick%0a%0dselectors::parser::Selector&lt;style::gecko::selector_parser::SelectorImpl&gt;::len&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dInterpret%0a%0dJS::Rooted&lt;js::SavedStacks::LocationValue&gt;::~Rooted&lt;js::SavedStacks::LocationValue&gt;(void)%0a%0djs::SavedStacks::insertFrames(JSContext*, JS::MutableHandle&lt;js::SavedFrame*&gt;, mozilla::Variant&lt;JS::AllFrames, JS::MaxFrames, JS::FirstSubsumedFrame&gt;&amp;&amp;)%0a%0dPR_StringToNetAddr%0a%0dmozilla::net::nsProtocolProxyService::CanUseProxy(nsIURI*, int)%0a%0dmozilla::net::nsProtocolProxyService::Resolve_Internal(nsIChannel*, mozilla::net::nsProtocolInfo const&amp;, unsigned int, bool*, nsIProxyInfo**)%0a%0dmozilla::net::nsProtocolProxyService::AsyncResolveInternal(nsIChannel*, unsigned int, nsIProtocolProxyCallback*, nsICancelable**, bool, nsIEventTarget*)%0a%0dmozilla::net::LoadInfo::GetForceInheritPrincipalOverruleOwner(bool*)%0a%0dnsScriptSecurityManager::GetChannelResultPrincipal(nsIChannel*, nsIPrincipal**, bool)%0a%0dnsScriptSecurityManager::GetChannelResultStoragePrincipal(nsIChannel*, nsIPrincipal**)%0a%0dnsCookieService::CountCookiesFromHostInternal(nsTSubstring&lt;char&gt; const&amp;, unsigned int, unsigned int*)%0a%0dracy_profiler_add_marker%0a%0dMaybePageAlloc%0a%0dmozilla::layers::PAPZInputBridgeChild::SendUpdateWheelTransaction(mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt; const&amp;, mozilla::EventMessage const&amp;)%0a%0dmozilla::net::PHttpChannelParent::SendDeleteSelf(void)%0a%0dPHttpChannel::Msg_DeleteSelf%0a%0dmozilla::net::HttpChannelParent::OnRedirectResult(bool)%0a%0dmozilla::net::InterceptedHttpChannel::OnRedirectVerifyCallback(nsresult)%0a%0dmozilla::dom::Element::SetAttr(int, nsAtom*, nsAtom*, nsTSubstring&lt;char16_t&gt; const&amp;, nsIPrincipal*, bool)%0a%0d[js] update%0a%0d[js] _hide%0a%0d[js] update%0a%0d[js] onLocationChange%0a%0djs::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] getWindowTitleForBrowser%0a%0d[js] updateTitlebar%0a%0djs::InternalBarrierMethods&lt;js::WasmFunctionScope*&gt;::readBarrier(js::WasmFunctionScope*)%0a%0djs::ObjectGroup::newArrayObject(JSContext*, JS::Value const*, uint64_t, js::NewObjectKind, js::ObjectGroup::NewArrayKind)%0a%0d0x2c887c22305%0a%0d[js] some%0a%0d[js] getCustomInterfaceCallback%0a%0dnsTSubstring&lt;char&gt;::StartBulkWriteImpl(unsigned int, unsigned int, bool, unsigned int, unsigned int, unsigned int)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3770" font-family="Helvetica, Arial, sans-serif" x="1085" y="2263.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3771" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::ObjectGroup::defaultNewGroup(JSContext*, JSClass const*, js::TaggedProto, JSObject*)</tspan></text></a><a id="SvgjsA3775" href="data:text/plain,js::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::BindingJSObjectCreator&lt;mozilla::dom::WindowGlobalParent&gt;::CreateObject(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::WindowGlobalParent*, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent_Binding::Wrap(JSContext*, mozilla::dom::WindowGlobalParent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent::WrapObject(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0d&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3773" font-family="Helvetica, Arial, sans-serif" x="1085" y="2266.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3774" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)</tspan></text></a><a id="SvgjsA3778" href="data:text/plain,js::jit::CallNativeGetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] update%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::BindingJSObjectCreator&lt;mozilla::dom::WindowGlobalParent&gt;::CreateObject(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::WindowGlobalParent*, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent_Binding::Wrap(JSContext*, mozilla::dom::WindowGlobalParent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent::WrapObject(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0d&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3776" font-family="Helvetica, Arial, sans-serif" x="1085" y="2268.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3777" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::CallNativeGetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3781" href="data:text/plain,js::jit::CallNativeSetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;)%0a%0djs::jit::CallNativeGetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] update%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::BindingJSObjectCreator&lt;mozilla::dom::WindowGlobalParent&gt;::CreateObject(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::WindowGlobalParent*, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent_Binding::Wrap(JSContext*, mozilla::dom::WindowGlobalParent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent::WrapObject(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0d&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3779" font-family="Helvetica, Arial, sans-serif" x="1085" y="2271.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3780" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::CallNativeSetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3784" href="data:text/plain,Interpret%0a%0djs::jit::CallNativeSetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;)%0a%0djs::jit::CallNativeGetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] update%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::BindingJSObjectCreator&lt;mozilla::dom::WindowGlobalParent&gt;::CreateObject(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::WindowGlobalParent*, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent_Binding::Wrap(JSContext*, mozilla::dom::WindowGlobalParent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent::WrapObject(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0d&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3782" font-family="Helvetica, Arial, sans-serif" x="1085" y="2273.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3783" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a><a id="SvgjsA3787" href="data:text/plain,js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0dInterpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3785" font-family="Helvetica, Arial, sans-serif" x="1085" y="2275.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3786" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)</tspan></text></a><a id="SvgjsA3790" href="data:text/plain,js::NewStringCopyNDontDeflate&lt;1, unsigned char&gt;(JSContext*, unsigned char const*, uint64_t)%0a%0d[js] get%0a%0dmozilla::net::ParsedHeaderValueList::ParseNameAndValue(char const*, bool)%0a%0dstd::_Func_impl_no_alloc&lt;`lambda at c:/mozilla-source/mozilla-central/netwerk/protocol/http/nsHttp.cpp:786:19',void,const char *,unsigned int&gt;::_Do_call%0a%0dmozilla::net::Tokenize%0a%0dmozilla::net::ParsedHeaderValueListList::ParsedHeaderValueListList(nsTString&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::AltSvcMapping::ProcessHeader(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, int, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, nsIInterfaceRequestor*, mozilla::net::nsProxyInfo*, unsigned int, mozilla::OriginAttributes const&amp;)%0a%0dmozilla::net::nsHttpChannel::ProcessAltService(void)%0a%0dmozilla::net::nsHttpChannel::ContinueProcessResponse1(void)%0a%0dPrepareAndDispatch%0a%0dmozilla::layers::WebRenderCommandBuilder::PushImage(nsDisplayItem*, mozilla::layers::ImageContainer*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::SizeComputationInput::InitOffsets(mozilla::WritingMode, int, mozilla::LayoutFrameType, mozilla::SizeComputationInput::ReflowInputFlags, nsMargin const*, nsMargin const*, nsStyleDisplay const*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3788" font-family="Helvetica, Arial, sans-serif" x="1085" y="2279.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3789" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NewStringCopyNDontDeflate&lt;1, unsigned char&gt;(JSContext*, unsigned char const*, uint64_t)</tspan></text></a><a id="SvgjsA3793" href="data:text/plain,0x2c887c1d588%0a%0d[js] GetBuiltinPrototype%0a%0d[js] IsRegExpMethodOptimizable%0a%0d[js] [Symbol.replace]%0a%0d[js] replace%0a%0d[js] losslessDecodeURI%0a%0djs::NewStringCopyNDontDeflate&lt;1, unsigned char&gt;(JSContext*, unsigned char const*, uint64_t)%0a%0d[js] get%0a%0dmozilla::net::ParsedHeaderValueList::ParseNameAndValue(char const*, bool)%0a%0dstd::_Func_impl_no_alloc&lt;`lambda at c:/mozilla-source/mozilla-central/netwerk/protocol/http/nsHttp.cpp:786:19',void,const char *,unsigned int&gt;::_Do_call%0a%0dmozilla::net::Tokenize%0a%0dmozilla::net::ParsedHeaderValueListList::ParsedHeaderValueListList(nsTString&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::AltSvcMapping::ProcessHeader(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, int, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, nsIInterfaceRequestor*, mozilla::net::nsProxyInfo*, unsigned int, mozilla::OriginAttributes const&amp;)%0a%0dmozilla::net::nsHttpChannel::ProcessAltService(void)%0a%0dmozilla::net::nsHttpChannel::ContinueProcessResponse1(void)%0a%0dPrepareAndDispatch%0a%0dmozilla::layers::WebRenderCommandBuilder::PushImage(nsDisplayItem*, mozilla::layers::ImageContainer*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::SizeComputationInput::InitOffsets(mozilla::WritingMode, int, mozilla::LayoutFrameType, mozilla::SizeComputationInput::ReflowInputFlags, nsMargin const*, nsMargin const*, nsStyleDisplay const*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3791" font-family="Helvetica, Arial, sans-serif" x="1085" y="2281.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3792" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">0x2c887c1d588</tspan></text></a><a id="SvgjsA3796" href="data:text/plain,mozilla::TextControlState::GetValue(nsTSubstring&lt;char16_t&gt;&amp;, bool)%0a%0dget HTMLInputElement.value%0a%0d[js] URLBarSetURI%0a%0d0x2c887c1d588%0a%0d[js] GetBuiltinPrototype%0a%0d[js] IsRegExpMethodOptimizable%0a%0d[js] [Symbol.replace]%0a%0d[js] replace%0a%0d[js] losslessDecodeURI%0a%0djs::NewStringCopyNDontDeflate&lt;1, unsigned char&gt;(JSContext*, unsigned char const*, uint64_t)%0a%0d[js] get%0a%0dmozilla::net::ParsedHeaderValueList::ParseNameAndValue(char const*, bool)%0a%0dstd::_Func_impl_no_alloc&lt;`lambda at c:/mozilla-source/mozilla-central/netwerk/protocol/http/nsHttp.cpp:786:19',void,const char *,unsigned int&gt;::_Do_call%0a%0dmozilla::net::Tokenize%0a%0dmozilla::net::ParsedHeaderValueListList::ParsedHeaderValueListList(nsTString&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::AltSvcMapping::ProcessHeader(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, int, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, nsIInterfaceRequestor*, mozilla::net::nsProxyInfo*, unsigned int, mozilla::OriginAttributes const&amp;)%0a%0dmozilla::net::nsHttpChannel::ProcessAltService(void)%0a%0dmozilla::net::nsHttpChannel::ContinueProcessResponse1(void)%0a%0dPrepareAndDispatch%0a%0dmozilla::layers::WebRenderCommandBuilder::PushImage(nsDisplayItem*, mozilla::layers::ImageContainer*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::SizeComputationInput::InitOffsets(mozilla::WritingMode, int, mozilla::LayoutFrameType, mozilla::SizeComputationInput::ReflowInputFlags, nsMargin const*, nsMargin const*, nsStyleDisplay const*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3794" font-family="Helvetica, Arial, sans-serif" x="1085" y="2284.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3795" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::TextControlState::GetValue(nsTSubstring&lt;char16_t&gt;&amp;, bool)</tspan></text></a><a id="SvgjsA3799" href="data:text/plain,Interpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3797" font-family="Helvetica, Arial, sans-serif" x="1085" y="2286.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3798" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a><a id="SvgjsA3802" href="data:text/plain,js::InternalBarrierMethods&lt;js::WasmFunctionScope*&gt;::readBarrier(js::WasmFunctionScope*)%0a%0djs::NewObjectWithGroupCommon(JSContext*, JS::Handle&lt;js::ObjectGroup*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0djs::CloneRegExpObject(JSContext*, JS::Handle&lt;js::RegExpObject*&gt;)%0a%0d0x2c887ac23aa%0a%0d[js] removeSingleTrailingSlashFromURL%0a%0d[js] _trimValue%0a%0d[js] _setValue%0a%0d[js] URLBarSetURI%0a%0dmozilla::TextControlState::GetValue(nsTSubstring&lt;char16_t&gt;&amp;, bool)%0a%0dget HTMLInputElement.value%0a%0d[js] URLBarSetURI%0a%0d0x2c887c1d588%0a%0d[js] GetBuiltinPrototype%0a%0d[js] IsRegExpMethodOptimizable%0a%0d[js] [Symbol.replace]%0a%0d[js] replace%0a%0d[js] losslessDecodeURI%0a%0djs::NewStringCopyNDontDeflate&lt;1, unsigned char&gt;(JSContext*, unsigned char const*, uint64_t)%0a%0d[js] get%0a%0dmozilla::net::ParsedHeaderValueList::ParseNameAndValue(char const*, bool)%0a%0dstd::_Func_impl_no_alloc&lt;`lambda at c:/mozilla-source/mozilla-central/netwerk/protocol/http/nsHttp.cpp:786:19',void,const char *,unsigned int&gt;::_Do_call%0a%0dmozilla::net::Tokenize%0a%0dmozilla::net::ParsedHeaderValueListList::ParsedHeaderValueListList(nsTString&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::AltSvcMapping::ProcessHeader(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, int, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, nsIInterfaceRequestor*, mozilla::net::nsProxyInfo*, unsigned int, mozilla::OriginAttributes const&amp;)%0a%0dmozilla::net::nsHttpChannel::ProcessAltService(void)%0a%0dmozilla::net::nsHttpChannel::ContinueProcessResponse1(void)%0a%0dPrepareAndDispatch%0a%0dmozilla::layers::WebRenderCommandBuilder::PushImage(nsDisplayItem*, mozilla::layers::ImageContainer*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::SizeComputationInput::InitOffsets(mozilla::WritingMode, int, mozilla::LayoutFrameType, mozilla::SizeComputationInput::ReflowInputFlags, nsMargin const*, nsMargin const*, nsStyleDisplay const*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3800" font-family="Helvetica, Arial, sans-serif" x="1085" y="2289.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3801" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::InternalBarrierMethods&lt;js::WasmFunctionScope*&gt;::readBarrier(js::WasmFunctionScope*)</tspan></text></a><a id="SvgjsA3805" href="data:text/plain,Interpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3803" font-family="Helvetica, Arial, sans-serif" x="1085" y="2291.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3804" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a><a id="SvgjsA3808" href="data:text/plain,mozilla::EditorBase::SetFlags(unsigned int)%0a%0dmozilla::TextControlState::SetValueWithTextEditor(mozilla::AutoTextControlHandlingState&amp;)%0a%0d[js] Substring%0a%0d[js] RegExpLocalReplaceOptSubst%0a%0djs::InternalBarrierMethods&lt;js::WasmFunctionScope*&gt;::readBarrier(js::WasmFunctionScope*)%0a%0djs::NewObjectWithGroupCommon(JSContext*, JS::Handle&lt;js::ObjectGroup*&gt;, js::gc::AllocKind, js::NewObjectKind)%0a%0djs::CloneRegExpObject(JSContext*, JS::Handle&lt;js::RegExpObject*&gt;)%0a%0d0x2c887ac23aa%0a%0d[js] removeSingleTrailingSlashFromURL%0a%0d[js] _trimValue%0a%0d[js] _setValue%0a%0d[js] URLBarSetURI%0a%0dmozilla::TextControlState::GetValue(nsTSubstring&lt;char16_t&gt;&amp;, bool)%0a%0dget HTMLInputElement.value%0a%0d[js] URLBarSetURI%0a%0d0x2c887c1d588%0a%0d[js] GetBuiltinPrototype%0a%0d[js] IsRegExpMethodOptimizable%0a%0d[js] [Symbol.replace]%0a%0d[js] replace%0a%0d[js] losslessDecodeURI%0a%0djs::NewStringCopyNDontDeflate&lt;1, unsigned char&gt;(JSContext*, unsigned char const*, uint64_t)%0a%0d[js] get%0a%0dmozilla::net::ParsedHeaderValueList::ParseNameAndValue(char const*, bool)%0a%0dstd::_Func_impl_no_alloc&lt;`lambda at c:/mozilla-source/mozilla-central/netwerk/protocol/http/nsHttp.cpp:786:19',void,const char *,unsigned int&gt;::_Do_call%0a%0dmozilla::net::Tokenize%0a%0dmozilla::net::ParsedHeaderValueListList::ParsedHeaderValueListList(nsTString&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::AltSvcMapping::ProcessHeader(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, int, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, nsIInterfaceRequestor*, mozilla::net::nsProxyInfo*, unsigned int, mozilla::OriginAttributes const&amp;)%0a%0dmozilla::net::nsHttpChannel::ProcessAltService(void)%0a%0dmozilla::net::nsHttpChannel::ContinueProcessResponse1(void)%0a%0dPrepareAndDispatch%0a%0dmozilla::layers::WebRenderCommandBuilder::PushImage(nsDisplayItem*, mozilla::layers::ImageContainer*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::SizeComputationInput::InitOffsets(mozilla::WritingMode, int, mozilla::LayoutFrameType, mozilla::SizeComputationInput::ReflowInputFlags, nsMargin const*, nsMargin const*, nsStyleDisplay const*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3806" font-family="Helvetica, Arial, sans-serif" x="1085" y="2294.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3807" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::EditorBase::SetFlags(unsigned int)</tspan></text></a><a id="SvgjsA3811" href="data:text/plain,nsFrameSelection::InvalidateDesiredPos(void)%0a%0dmozilla::dom::Selection::Collapse(mozilla::RangeBoundaryBase&lt;nsINode*, nsIContent*&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::Selection::Collapse(nsINode*, int)%0a%0d_security_check_cookie%0a%0dvirtual long CACPWrap::GetSelection(unsigned long,unsigned long,struct TS_SELECTION_ANCHOR *,unsigned long *)%0a%0dmozilla::StyleShapeSource::operator==(mozilla::StyleShapeSource const&amp;)%0a%0dnsStyleDisplay::CalcDifference(nsStyleDisplay const&amp;, nsStylePosition const&amp;)%0a%0dmozilla::ComputedStyle::CalcStyleDifference(mozilla::ComputedStyle const&amp;, unsigned int*)%0a%0dcore::intrinsics::copy_nonoverlapping&lt;u8&gt;%0a%0dcore::ptr::read&lt;u8&gt;%0a%0dcore::ptr::swap_nonoverlapping_one&lt;u8&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;selectors::parser::Combinator&gt;&gt;%0a%0dselectors::matching::matches_complex_selector_internal%0a%0dJS::GetWarningReporter(JSContext*))(JSContext*, JSErrorReport*)%0a%0dmozilla::dom::AutoJSAPI::InitInternal(nsIGlobalObject*, JSObject*, JSContext*, bool)%0a%0dnsXPCWrappedJS::DelegatedQueryInterface(nsID const&amp;, void**)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dmozilla::dom::TimeoutManager::ClearTimeoutInternal(int, mozilla::dom::Timeout::Reason, bool)%0a%0dmozilla::dom::TimeoutManager::ClearTimeout(int, mozilla::dom::Timeout::Reason)%0a%0dmozilla::dom::Window_Binding::clearTimeout%0a%0dWindow.clearTimeout%0a%0d[js] _cancelRemoveStaleRowsTimer%0a%0d[js] onQueryCancelled%0a%0d[js] cancelQuery%0a%0dmozilla::layers::WebRenderImageData::UpdateImageKey(mozilla::layers::ImageContainer*, mozilla::wr::IpcResourceUpdateQueue&amp;, bool)%0a%0dmozilla::layers::WebRenderCommandBuilder::PushImage(nsDisplayItem*, mozilla::layers::ImageContainer*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::SizeComputationInput::InitOffsets(mozilla::WritingMode, int, mozilla::LayoutFrameType, mozilla::SizeComputationInput::ReflowInputFlags, nsMargin const*, nsMargin const*, nsStyleDisplay const*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3809" font-family="Helvetica, Arial, sans-serif" x="1085" y="2296.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3810" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsFrameSelection::InvalidateDesiredPos(void)</tspan></text></a><a id="SvgjsA3814" href="data:text/plain,mozilla::SelectionState::SelectionState(void)%0a%0dimgLoader::LoadImage page-icon:https://www.nextadvisor.com/discover-it-review/ ?? kw=pocket_firefox_discover_impcrd_pni21_cffeebill&amp;utm_source=pocket_firefox&amp;utm_medium=cpc&amp;utm_ntwk=n&amp;utm_campaign=pocket_firefox_discover_impcrd_pni21_cffeebill%0a%0d[js] notify%0a%0dicu_65::Collator::createInstance(icu_65::Locale const&amp;, UErrorCode&amp;)%0a%0d[js] reduce%0a%0d[js] convertLegacyAutocompleteResult%0a%0dNtUserCallOneParam%0a%0dmemcpy()%0a%0djs::jit::CompilerFrameInfo::popValue(js::jit::ValueOperand)%0a%0djs::jit::CompilerFrameInfo::popRegsAndSync(unsigned int)%0a%0dstyle::sharing::StyleSharingCache&lt;E&gt;::insert_if_possible%0a%0dstyle::traversal::compute_style%0a%0d[js] parseActionUrl%0a%0dreplace_malloc_usable_size%0a%0dnsPropertyTable::SetPropertyInternal(nsPropertyOwner, nsAtom*, void*, void (*)(void*, nsAtom*, void*, void*), void*, bool)%0a%0dcore::slice::{{impl}}::index&lt;str*&gt;%0a%0dstyle::rule_collector::sort_rules_from%0a%0dstyle::rule_collector::RuleCollector&lt;style::gecko::wrapper::GeckoElement, closure-0&gt;::collect_rules_internal&lt;style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] setTimeout%0a%0djs::jit::GetPropIRGenerator::GetPropIRGenerator(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, js::jit::ICState::Mode, js::jit::CacheKind, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::jit::GetPropertyResultFlags)%0a%0djs::jit::TryAttachGetPropStub%0a%0d[js] _matchUnknownUrl%0a%0dmozilla::widget::WinTextEventDispatcherListener::NotifyIME(mozilla::widget::TextEventDispatcher*, mozilla::widget::IMENotification const&amp;)%0a%0d[js] [Symbol.split]%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::gfx::RectTyped&lt;mozilla::CSSPixel,float&gt; &amp;&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::layers::RenderRootDisplayListData&gt;::Write(IPC::Message*, mozilla::ipc::IProtocol*, mozilla::layers::RenderRootDisplayListData&amp;&amp;)%0a%0dnsDocLoader::QueryInterface(nsID const&amp;, void**)%0a%0dnsLayoutUtils::PaintFrame(gfxContext*, nsIFrame*, nsRegion const&amp;, unsigned int, nsDisplayListBuilderMode, nsLayoutUtils::PaintFrameFlags)%0a%0dnsBlockFrame::UpdatePseudoElementStyles(mozilla::ServoRestyleState&amp;)%0a%0dnsIFrame::UpdateStyleOfChildAnonBox(nsIFrame*, mozilla::ServoRestyleState&amp;)%0a%0dNtOpenEvent%0a%0dOpenEventW%0a%0dlong CTabTipEventBase::Open%0a%0dXPCConvert::JSData2Native(JSContext*, void*, JS::Handle&lt;JS::Value&gt;, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dFlattenedDisplayListIterator::ShouldFlattenNextItem(void)%0a%0dFlattenedDisplayListIterator::ResolveFlattening(void)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTiming(mozilla::TimingParams const*)%0a%0d[js] split%0a%0d[js] splitString%0a%0djs::NativeObject::copyDenseElements(unsigned int, JS::Value const*, unsigned int)%0a%0djs::NativeObject::setOrExtendDenseElements(JSContext*, unsigned int, JS::Value const*, unsigned int, js::ShouldUpdateTypes)%0a%0djs::NewCopiedArrayTryUseGroup(JSContext*, JS::Handle&lt;js::ObjectGroup*&gt;, JS::Value const*, uint64_t, js::NewObjectKind, js::ShouldUpdateTypes)%0a%0djs::ObjectGroup::newArrayObject(JSContext*, JS::Value const*, uint64_t, js::NewObjectKind, js::ObjectGroup::NewArrayKind)%0a%0dmozilla::image::SurfaceCacheImpl::DoUnlockSurfaces(mozilla::NotNull&lt;mozilla::image::ImageSurfaceCache*&gt;, bool, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::SurfaceCacheImpl::UnlockImage(mozilla::image::Image* const, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::RasterImage::UnlockImage(void)%0a%0dimgRequestProxy::UnlockImage(void)%0a%0dnsImageLoadingContent::MakePendingRequestCurrent(void)%0a%0dmozilla::net::nsSimpleURI::SetPathQueryRefEscaped(nsTSubstring&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::nsSimpleURI::SetSpecInternal(nsTSubstring&lt;char&gt; const&amp;)%0a%0d[js] _updateResults%0a%0dnsXULPrototypeElement::TraceAllScripts(JSTracer*)%0a%0dmozilla::dom::TraceBlackJS(JSTracer*, bool)%0a%0dXPCJSRuntime::TraceNativeBlackRoots(JSTracer*)%0a%0djs::gc::GCRuntime::traceRuntimeCommon(JSTracer*, js::gc::GCRuntime::TraceOrMarkRuntime)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::AtomsTable::tracePinnedAtoms(JSTracer*, js::AutoAccessAtomsZone const&amp;)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::changeTableSize(unsigned int, mozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::FailureBehavior)%0a%0dJSScript::releaseScriptCounts(js::ScriptCounts*)%0a%0dJSScript::destroyScriptCounts(void)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::LifoAlloc::transferFrom(js::LifoAlloc*)%0a%0djs::jit::JitScript::Destroy(JS::Zone*, js::jit::JitScript*)%0a%0dJSScript::releaseJitScript(JSFreeOp*)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::gc::GCRuntime::discardJITCodeForGC(void)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::incrementalSlice(js::SliceBudget&amp;, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::GCRuntime::collect%0a%0djs::TenuringTracer::moveSlotsToTenured(js::NativeObject*, js::NativeObject*)%0a%0djs::Nursery::collect%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0dmozilla::net::nsHttpTransaction::`vector deleting destructor'(unsigned int)%0a%0dPL_strncasestr%0a%0dmozilla::net::nsStandardURL::CheckIfHostIsAscii(void)%0a%0dmozilla::net::nsStandardURL::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmozilla::net::nsStandardURL::TemplatedMutator&lt;mozilla::net::nsStandardURL&gt;::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3812" font-family="Helvetica, Arial, sans-serif" x="1085" y="2299.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3813" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::SelectionState::SelectionState(void)</tspan></text></a><a id="SvgjsA3817" href="data:text/plain,mozilla::TransactionManager::DoTransaction(nsITransaction*)%0a%0dmozilla::EditorBase::DoTransactionInternal(nsITransaction*)%0a%0dmozilla::TextEditor::HandleInsertText(mozilla::EditSubAction, nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::SelectionState::SelectionState(void)%0a%0dimgLoader::LoadImage page-icon:https://www.nextadvisor.com/discover-it-review/ ?? kw=pocket_firefox_discover_impcrd_pni21_cffeebill&amp;utm_source=pocket_firefox&amp;utm_medium=cpc&amp;utm_ntwk=n&amp;utm_campaign=pocket_firefox_discover_impcrd_pni21_cffeebill%0a%0d[js] notify%0a%0dicu_65::Collator::createInstance(icu_65::Locale const&amp;, UErrorCode&amp;)%0a%0d[js] reduce%0a%0d[js] convertLegacyAutocompleteResult%0a%0dNtUserCallOneParam%0a%0dmemcpy()%0a%0djs::jit::CompilerFrameInfo::popValue(js::jit::ValueOperand)%0a%0djs::jit::CompilerFrameInfo::popRegsAndSync(unsigned int)%0a%0dstyle::sharing::StyleSharingCache&lt;E&gt;::insert_if_possible%0a%0dstyle::traversal::compute_style%0a%0d[js] parseActionUrl%0a%0dreplace_malloc_usable_size%0a%0dnsPropertyTable::SetPropertyInternal(nsPropertyOwner, nsAtom*, void*, void (*)(void*, nsAtom*, void*, void*), void*, bool)%0a%0dcore::slice::{{impl}}::index&lt;str*&gt;%0a%0dstyle::rule_collector::sort_rules_from%0a%0dstyle::rule_collector::RuleCollector&lt;style::gecko::wrapper::GeckoElement, closure-0&gt;::collect_rules_internal&lt;style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] setTimeout%0a%0djs::jit::GetPropIRGenerator::GetPropIRGenerator(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, js::jit::ICState::Mode, js::jit::CacheKind, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::jit::GetPropertyResultFlags)%0a%0djs::jit::TryAttachGetPropStub%0a%0d[js] _matchUnknownUrl%0a%0dmozilla::widget::WinTextEventDispatcherListener::NotifyIME(mozilla::widget::TextEventDispatcher*, mozilla::widget::IMENotification const&amp;)%0a%0d[js] [Symbol.split]%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::gfx::RectTyped&lt;mozilla::CSSPixel,float&gt; &amp;&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::layers::RenderRootDisplayListData&gt;::Write(IPC::Message*, mozilla::ipc::IProtocol*, mozilla::layers::RenderRootDisplayListData&amp;&amp;)%0a%0dnsDocLoader::QueryInterface(nsID const&amp;, void**)%0a%0dnsLayoutUtils::PaintFrame(gfxContext*, nsIFrame*, nsRegion const&amp;, unsigned int, nsDisplayListBuilderMode, nsLayoutUtils::PaintFrameFlags)%0a%0dnsBlockFrame::UpdatePseudoElementStyles(mozilla::ServoRestyleState&amp;)%0a%0dnsIFrame::UpdateStyleOfChildAnonBox(nsIFrame*, mozilla::ServoRestyleState&amp;)%0a%0dNtOpenEvent%0a%0dOpenEventW%0a%0dlong CTabTipEventBase::Open%0a%0dXPCConvert::JSData2Native(JSContext*, void*, JS::Handle&lt;JS::Value&gt;, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dFlattenedDisplayListIterator::ShouldFlattenNextItem(void)%0a%0dFlattenedDisplayListIterator::ResolveFlattening(void)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTiming(mozilla::TimingParams const*)%0a%0d[js] split%0a%0d[js] splitString%0a%0djs::NativeObject::copyDenseElements(unsigned int, JS::Value const*, unsigned int)%0a%0djs::NativeObject::setOrExtendDenseElements(JSContext*, unsigned int, JS::Value const*, unsigned int, js::ShouldUpdateTypes)%0a%0djs::NewCopiedArrayTryUseGroup(JSContext*, JS::Handle&lt;js::ObjectGroup*&gt;, JS::Value const*, uint64_t, js::NewObjectKind, js::ShouldUpdateTypes)%0a%0djs::ObjectGroup::newArrayObject(JSContext*, JS::Value const*, uint64_t, js::NewObjectKind, js::ObjectGroup::NewArrayKind)%0a%0dmozilla::image::SurfaceCacheImpl::DoUnlockSurfaces(mozilla::NotNull&lt;mozilla::image::ImageSurfaceCache*&gt;, bool, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::SurfaceCacheImpl::UnlockImage(mozilla::image::Image* const, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::RasterImage::UnlockImage(void)%0a%0dimgRequestProxy::UnlockImage(void)%0a%0dnsImageLoadingContent::MakePendingRequestCurrent(void)%0a%0dmozilla::net::nsSimpleURI::SetPathQueryRefEscaped(nsTSubstring&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::nsSimpleURI::SetSpecInternal(nsTSubstring&lt;char&gt; const&amp;)%0a%0d[js] _updateResults%0a%0dnsXULPrototypeElement::TraceAllScripts(JSTracer*)%0a%0dmozilla::dom::TraceBlackJS(JSTracer*, bool)%0a%0dXPCJSRuntime::TraceNativeBlackRoots(JSTracer*)%0a%0djs::gc::GCRuntime::traceRuntimeCommon(JSTracer*, js::gc::GCRuntime::TraceOrMarkRuntime)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::AtomsTable::tracePinnedAtoms(JSTracer*, js::AutoAccessAtomsZone const&amp;)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::changeTableSize(unsigned int, mozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::FailureBehavior)%0a%0dJSScript::releaseScriptCounts(js::ScriptCounts*)%0a%0dJSScript::destroyScriptCounts(void)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::LifoAlloc::transferFrom(js::LifoAlloc*)%0a%0djs::jit::JitScript::Destroy(JS::Zone*, js::jit::JitScript*)%0a%0dJSScript::releaseJitScript(JSFreeOp*)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::gc::GCRuntime::discardJITCodeForGC(void)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::incrementalSlice(js::SliceBudget&amp;, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::GCRuntime::collect%0a%0djs::TenuringTracer::moveSlotsToTenured(js::NativeObject*, js::NativeObject*)%0a%0djs::Nursery::collect%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0dmozilla::net::nsHttpTransaction::`vector deleting destructor'(unsigned int)%0a%0dPL_strncasestr%0a%0dmozilla::net::nsStandardURL::CheckIfHostIsAscii(void)%0a%0dmozilla::net::nsStandardURL::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmozilla::net::nsStandardURL::TemplatedMutator&lt;mozilla::net::nsStandardURL&gt;::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3815" font-family="Helvetica, Arial, sans-serif" x="1085" y="2301.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3816" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::TransactionManager::DoTransaction(nsITransaction*)</tspan></text></a><a id="SvgjsA3820" href="data:text/plain,mozilla::EditTransactionBase::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::InsertNodeTransaction::QueryInterface(nsID const&amp;, void**)%0a%0d[js] setTimeout%0a%0djs::jit::GetPropIRGenerator::GetPropIRGenerator(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, js::jit::ICState::Mode, js::jit::CacheKind, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::jit::GetPropertyResultFlags)%0a%0djs::jit::TryAttachGetPropStub%0a%0d[js] _matchUnknownUrl%0a%0dmozilla::widget::WinTextEventDispatcherListener::NotifyIME(mozilla::widget::TextEventDispatcher*, mozilla::widget::IMENotification const&amp;)%0a%0d[js] [Symbol.split]%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::gfx::RectTyped&lt;mozilla::CSSPixel,float&gt; &amp;&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::layers::RenderRootDisplayListData&gt;::Write(IPC::Message*, mozilla::ipc::IProtocol*, mozilla::layers::RenderRootDisplayListData&amp;&amp;)%0a%0dnsDocLoader::QueryInterface(nsID const&amp;, void**)%0a%0dnsLayoutUtils::PaintFrame(gfxContext*, nsIFrame*, nsRegion const&amp;, unsigned int, nsDisplayListBuilderMode, nsLayoutUtils::PaintFrameFlags)%0a%0dnsBlockFrame::UpdatePseudoElementStyles(mozilla::ServoRestyleState&amp;)%0a%0dnsIFrame::UpdateStyleOfChildAnonBox(nsIFrame*, mozilla::ServoRestyleState&amp;)%0a%0dNtOpenEvent%0a%0dOpenEventW%0a%0dlong CTabTipEventBase::Open%0a%0dXPCConvert::JSData2Native(JSContext*, void*, JS::Handle&lt;JS::Value&gt;, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dFlattenedDisplayListIterator::ShouldFlattenNextItem(void)%0a%0dFlattenedDisplayListIterator::ResolveFlattening(void)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTiming(mozilla::TimingParams const*)%0a%0d[js] split%0a%0d[js] splitString%0a%0djs::NativeObject::copyDenseElements(unsigned int, JS::Value const*, unsigned int)%0a%0djs::NativeObject::setOrExtendDenseElements(JSContext*, unsigned int, JS::Value const*, unsigned int, js::ShouldUpdateTypes)%0a%0djs::NewCopiedArrayTryUseGroup(JSContext*, JS::Handle&lt;js::ObjectGroup*&gt;, JS::Value const*, uint64_t, js::NewObjectKind, js::ShouldUpdateTypes)%0a%0djs::ObjectGroup::newArrayObject(JSContext*, JS::Value const*, uint64_t, js::NewObjectKind, js::ObjectGroup::NewArrayKind)%0a%0dmozilla::image::SurfaceCacheImpl::DoUnlockSurfaces(mozilla::NotNull&lt;mozilla::image::ImageSurfaceCache*&gt;, bool, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::SurfaceCacheImpl::UnlockImage(mozilla::image::Image* const, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::RasterImage::UnlockImage(void)%0a%0dimgRequestProxy::UnlockImage(void)%0a%0dnsImageLoadingContent::MakePendingRequestCurrent(void)%0a%0dmozilla::net::nsSimpleURI::SetPathQueryRefEscaped(nsTSubstring&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::nsSimpleURI::SetSpecInternal(nsTSubstring&lt;char&gt; const&amp;)%0a%0d[js] _updateResults%0a%0dnsXULPrototypeElement::TraceAllScripts(JSTracer*)%0a%0dmozilla::dom::TraceBlackJS(JSTracer*, bool)%0a%0dXPCJSRuntime::TraceNativeBlackRoots(JSTracer*)%0a%0djs::gc::GCRuntime::traceRuntimeCommon(JSTracer*, js::gc::GCRuntime::TraceOrMarkRuntime)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::AtomsTable::tracePinnedAtoms(JSTracer*, js::AutoAccessAtomsZone const&amp;)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::changeTableSize(unsigned int, mozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::FailureBehavior)%0a%0dJSScript::releaseScriptCounts(js::ScriptCounts*)%0a%0dJSScript::destroyScriptCounts(void)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::LifoAlloc::transferFrom(js::LifoAlloc*)%0a%0djs::jit::JitScript::Destroy(JS::Zone*, js::jit::JitScript*)%0a%0dJSScript::releaseJitScript(JSFreeOp*)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::gc::GCRuntime::discardJITCodeForGC(void)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::incrementalSlice(js::SliceBudget&amp;, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::GCRuntime::collect%0a%0djs::TenuringTracer::moveSlotsToTenured(js::NativeObject*, js::NativeObject*)%0a%0djs::Nursery::collect%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0dmozilla::net::nsHttpTransaction::`vector deleting destructor'(unsigned int)%0a%0dPL_strncasestr%0a%0dmozilla::net::nsStandardURL::CheckIfHostIsAscii(void)%0a%0dmozilla::net::nsStandardURL::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmozilla::net::nsStandardURL::TemplatedMutator&lt;mozilla::net::nsStandardURL&gt;::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3818" font-family="Helvetica, Arial, sans-serif" x="1085" y="2304.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3819" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::EditTransactionBase::QueryInterface(nsID const&amp;, void**)</tspan></text></a><a id="SvgjsA3823" href="data:text/plain,Interpret%0a%0djs::jit::CallNativeSetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;)%0a%0djs::jit::CallNativeGetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] update%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::BindingJSObjectCreator&lt;mozilla::dom::WindowGlobalParent&gt;::CreateObject(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::WindowGlobalParent*, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent_Binding::Wrap(JSContext*, mozilla::dom::WindowGlobalParent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent::WrapObject(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0d&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3821" font-family="Helvetica, Arial, sans-serif" x="1085" y="2306.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3822" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a><a id="SvgjsA3826" href="data:text/plain,NS_NewHTMLElement(mozilla::dom::Element**, already_AddRefed&lt;mozilla::dom::NodeInfo&gt;&amp;&amp;, mozilla::dom::FromParser, nsAtom*, mozilla::dom::CustomElementDefinition*)%0a%0dmozilla::dom::Document::CreateElem(nsTSubstring&lt;char16_t&gt; const&amp;, nsAtom*, int, nsTSubstring&lt;char16_t&gt; const*)%0a%0dmozilla::EditorBase::CreateHTMLContent(nsAtom const*)%0a%0dmozilla::EditorBase::MaybeCreatePaddingBRElementForEmptyEditor(void)%0a%0dmozilla::TextEditor::OnEndHandlingTopLevelEditSubAction(void)%0a%0dmozilla::TextEditor::DeleteSelectionAsSubAction(short, short)%0a%0d[js] _removeURLFormat%0a%0dmozilla::EditTransactionBase::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::InsertNodeTransaction::QueryInterface(nsID const&amp;, void**)%0a%0d[js] setTimeout%0a%0djs::jit::GetPropIRGenerator::GetPropIRGenerator(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, js::jit::ICState::Mode, js::jit::CacheKind, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::jit::GetPropertyResultFlags)%0a%0djs::jit::TryAttachGetPropStub%0a%0d[js] _matchUnknownUrl%0a%0dmozilla::widget::WinTextEventDispatcherListener::NotifyIME(mozilla::widget::TextEventDispatcher*, mozilla::widget::IMENotification const&amp;)%0a%0d[js] [Symbol.split]%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::gfx::RectTyped&lt;mozilla::CSSPixel,float&gt; &amp;&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::layers::RenderRootDisplayListData&gt;::Write(IPC::Message*, mozilla::ipc::IProtocol*, mozilla::layers::RenderRootDisplayListData&amp;&amp;)%0a%0dnsDocLoader::QueryInterface(nsID const&amp;, void**)%0a%0dnsLayoutUtils::PaintFrame(gfxContext*, nsIFrame*, nsRegion const&amp;, unsigned int, nsDisplayListBuilderMode, nsLayoutUtils::PaintFrameFlags)%0a%0dnsBlockFrame::UpdatePseudoElementStyles(mozilla::ServoRestyleState&amp;)%0a%0dnsIFrame::UpdateStyleOfChildAnonBox(nsIFrame*, mozilla::ServoRestyleState&amp;)%0a%0dNtOpenEvent%0a%0dOpenEventW%0a%0dlong CTabTipEventBase::Open%0a%0dXPCConvert::JSData2Native(JSContext*, void*, JS::Handle&lt;JS::Value&gt;, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dFlattenedDisplayListIterator::ShouldFlattenNextItem(void)%0a%0dFlattenedDisplayListIterator::ResolveFlattening(void)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTiming(mozilla::TimingParams const*)%0a%0d[js] split%0a%0d[js] splitString%0a%0djs::NativeObject::copyDenseElements(unsigned int, JS::Value const*, unsigned int)%0a%0djs::NativeObject::setOrExtendDenseElements(JSContext*, unsigned int, JS::Value const*, unsigned int, js::ShouldUpdateTypes)%0a%0djs::NewCopiedArrayTryUseGroup(JSContext*, JS::Handle&lt;js::ObjectGroup*&gt;, JS::Value const*, uint64_t, js::NewObjectKind, js::ShouldUpdateTypes)%0a%0djs::ObjectGroup::newArrayObject(JSContext*, JS::Value const*, uint64_t, js::NewObjectKind, js::ObjectGroup::NewArrayKind)%0a%0dmozilla::image::SurfaceCacheImpl::DoUnlockSurfaces(mozilla::NotNull&lt;mozilla::image::ImageSurfaceCache*&gt;, bool, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::SurfaceCacheImpl::UnlockImage(mozilla::image::Image* const, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::RasterImage::UnlockImage(void)%0a%0dimgRequestProxy::UnlockImage(void)%0a%0dnsImageLoadingContent::MakePendingRequestCurrent(void)%0a%0dmozilla::net::nsSimpleURI::SetPathQueryRefEscaped(nsTSubstring&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::nsSimpleURI::SetSpecInternal(nsTSubstring&lt;char&gt; const&amp;)%0a%0d[js] _updateResults%0a%0dnsXULPrototypeElement::TraceAllScripts(JSTracer*)%0a%0dmozilla::dom::TraceBlackJS(JSTracer*, bool)%0a%0dXPCJSRuntime::TraceNativeBlackRoots(JSTracer*)%0a%0djs::gc::GCRuntime::traceRuntimeCommon(JSTracer*, js::gc::GCRuntime::TraceOrMarkRuntime)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::AtomsTable::tracePinnedAtoms(JSTracer*, js::AutoAccessAtomsZone const&amp;)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::changeTableSize(unsigned int, mozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::FailureBehavior)%0a%0dJSScript::releaseScriptCounts(js::ScriptCounts*)%0a%0dJSScript::destroyScriptCounts(void)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::LifoAlloc::transferFrom(js::LifoAlloc*)%0a%0djs::jit::JitScript::Destroy(JS::Zone*, js::jit::JitScript*)%0a%0dJSScript::releaseJitScript(JSFreeOp*)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::gc::GCRuntime::discardJITCodeForGC(void)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::incrementalSlice(js::SliceBudget&amp;, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::GCRuntime::collect%0a%0djs::TenuringTracer::moveSlotsToTenured(js::NativeObject*, js::NativeObject*)%0a%0djs::Nursery::collect%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0dmozilla::net::nsHttpTransaction::`vector deleting destructor'(unsigned int)%0a%0dPL_strncasestr%0a%0dmozilla::net::nsStandardURL::CheckIfHostIsAscii(void)%0a%0dmozilla::net::nsStandardURL::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmozilla::net::nsStandardURL::TemplatedMutator&lt;mozilla::net::nsStandardURL&gt;::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3824" font-family="Helvetica, Arial, sans-serif" x="1085" y="2308.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3825" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NS_NewHTMLElement(mozilla::dom::Element**, already_AddRefed&lt;mozilla::dom::NodeInfo&gt;&amp;&amp;, mozilla::dom::FromParser, nsAtom*, mozilla::dom::CustomElementDefinition*)</tspan></text></a><a id="SvgjsA3829" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dJS_InitializePropertiesFromCompatibleNativeObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3827" font-family="Helvetica, Arial, sans-serif" x="1085" y="2311.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3828" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3832" href="data:text/plain,AssignJSString&lt;mozilla::dom::binding_detail::FakeString&lt;char&gt;, 0&gt;(JSContext*, mozilla::dom::binding_detail::FakeString&lt;char&gt;&amp;, JSString*)%0a%0dmozilla::dom::CSSStyleDeclaration_Binding::setProperty%0a%0dCSSStyleDeclaration.setProperty%0a%0d[js] _removeURLFormat%0a%0d[js] _removeURLFormat%0a%0dNS_NewHTMLElement(mozilla::dom::Element**, already_AddRefed&lt;mozilla::dom::NodeInfo&gt;&amp;&amp;, mozilla::dom::FromParser, nsAtom*, mozilla::dom::CustomElementDefinition*)%0a%0dmozilla::dom::Document::CreateElem(nsTSubstring&lt;char16_t&gt; const&amp;, nsAtom*, int, nsTSubstring&lt;char16_t&gt; const*)%0a%0dmozilla::EditorBase::CreateHTMLContent(nsAtom const*)%0a%0dmozilla::EditorBase::MaybeCreatePaddingBRElementForEmptyEditor(void)%0a%0dmozilla::TextEditor::OnEndHandlingTopLevelEditSubAction(void)%0a%0dmozilla::TextEditor::DeleteSelectionAsSubAction(short, short)%0a%0d[js] _removeURLFormat%0a%0dmozilla::EditTransactionBase::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::InsertNodeTransaction::QueryInterface(nsID const&amp;, void**)%0a%0d[js] setTimeout%0a%0djs::jit::GetPropIRGenerator::GetPropIRGenerator(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, js::jit::ICState::Mode, js::jit::CacheKind, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::jit::GetPropertyResultFlags)%0a%0djs::jit::TryAttachGetPropStub%0a%0d[js] _matchUnknownUrl%0a%0dmozilla::widget::WinTextEventDispatcherListener::NotifyIME(mozilla::widget::TextEventDispatcher*, mozilla::widget::IMENotification const&amp;)%0a%0d[js] [Symbol.split]%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::gfx::RectTyped&lt;mozilla::CSSPixel,float&gt; &amp;&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::layers::RenderRootDisplayListData&gt;::Write(IPC::Message*, mozilla::ipc::IProtocol*, mozilla::layers::RenderRootDisplayListData&amp;&amp;)%0a%0dnsDocLoader::QueryInterface(nsID const&amp;, void**)%0a%0dnsLayoutUtils::PaintFrame(gfxContext*, nsIFrame*, nsRegion const&amp;, unsigned int, nsDisplayListBuilderMode, nsLayoutUtils::PaintFrameFlags)%0a%0dnsBlockFrame::UpdatePseudoElementStyles(mozilla::ServoRestyleState&amp;)%0a%0dnsIFrame::UpdateStyleOfChildAnonBox(nsIFrame*, mozilla::ServoRestyleState&amp;)%0a%0dNtOpenEvent%0a%0dOpenEventW%0a%0dlong CTabTipEventBase::Open%0a%0dXPCConvert::JSData2Native(JSContext*, void*, JS::Handle&lt;JS::Value&gt;, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dFlattenedDisplayListIterator::ShouldFlattenNextItem(void)%0a%0dFlattenedDisplayListIterator::ResolveFlattening(void)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTiming(mozilla::TimingParams const*)%0a%0d[js] split%0a%0d[js] splitString%0a%0djs::NativeObject::copyDenseElements(unsigned int, JS::Value const*, unsigned int)%0a%0djs::NativeObject::setOrExtendDenseElements(JSContext*, unsigned int, JS::Value const*, unsigned int, js::ShouldUpdateTypes)%0a%0djs::NewCopiedArrayTryUseGroup(JSContext*, JS::Handle&lt;js::ObjectGroup*&gt;, JS::Value const*, uint64_t, js::NewObjectKind, js::ShouldUpdateTypes)%0a%0djs::ObjectGroup::newArrayObject(JSContext*, JS::Value const*, uint64_t, js::NewObjectKind, js::ObjectGroup::NewArrayKind)%0a%0dmozilla::image::SurfaceCacheImpl::DoUnlockSurfaces(mozilla::NotNull&lt;mozilla::image::ImageSurfaceCache*&gt;, bool, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::SurfaceCacheImpl::UnlockImage(mozilla::image::Image* const, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::RasterImage::UnlockImage(void)%0a%0dimgRequestProxy::UnlockImage(void)%0a%0dnsImageLoadingContent::MakePendingRequestCurrent(void)%0a%0dmozilla::net::nsSimpleURI::SetPathQueryRefEscaped(nsTSubstring&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::nsSimpleURI::SetSpecInternal(nsTSubstring&lt;char&gt; const&amp;)%0a%0d[js] _updateResults%0a%0dnsXULPrototypeElement::TraceAllScripts(JSTracer*)%0a%0dmozilla::dom::TraceBlackJS(JSTracer*, bool)%0a%0dXPCJSRuntime::TraceNativeBlackRoots(JSTracer*)%0a%0djs::gc::GCRuntime::traceRuntimeCommon(JSTracer*, js::gc::GCRuntime::TraceOrMarkRuntime)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::AtomsTable::tracePinnedAtoms(JSTracer*, js::AutoAccessAtomsZone const&amp;)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::changeTableSize(unsigned int, mozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::FailureBehavior)%0a%0dJSScript::releaseScriptCounts(js::ScriptCounts*)%0a%0dJSScript::destroyScriptCounts(void)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::LifoAlloc::transferFrom(js::LifoAlloc*)%0a%0djs::jit::JitScript::Destroy(JS::Zone*, js::jit::JitScript*)%0a%0dJSScript::releaseJitScript(JSFreeOp*)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::gc::GCRuntime::discardJITCodeForGC(void)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::incrementalSlice(js::SliceBudget&amp;, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::GCRuntime::collect%0a%0djs::TenuringTracer::moveSlotsToTenured(js::NativeObject*, js::NativeObject*)%0a%0djs::Nursery::collect%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0dmozilla::net::nsHttpTransaction::`vector deleting destructor'(unsigned int)%0a%0dPL_strncasestr%0a%0dmozilla::net::nsStandardURL::CheckIfHostIsAscii(void)%0a%0dmozilla::net::nsStandardURL::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmozilla::net::nsStandardURL::TemplatedMutator&lt;mozilla::net::nsStandardURL&gt;::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3830" font-family="Helvetica, Arial, sans-serif" x="1085" y="2313.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3831" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">AssignJSString&lt;mozilla::dom::binding_detail::FakeString&lt;char&gt;, 0&gt;(JSContext*, mozilla::dom::binding_detail::FakeString&lt;char&gt;&amp;, JSString*)</tspan></text></a><a id="SvgjsA3835" href="data:text/plain,js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] _removeSearchAliasFormat%0a%0d[js] update%0a%0dAssignJSString&lt;mozilla::dom::binding_detail::FakeString&lt;char&gt;, 0&gt;(JSContext*, mozilla::dom::binding_detail::FakeString&lt;char&gt;&amp;, JSString*)%0a%0dmozilla::dom::CSSStyleDeclaration_Binding::setProperty%0a%0dCSSStyleDeclaration.setProperty%0a%0d[js] _removeURLFormat%0a%0d[js] _removeURLFormat%0a%0dNS_NewHTMLElement(mozilla::dom::Element**, already_AddRefed&lt;mozilla::dom::NodeInfo&gt;&amp;&amp;, mozilla::dom::FromParser, nsAtom*, mozilla::dom::CustomElementDefinition*)%0a%0dmozilla::dom::Document::CreateElem(nsTSubstring&lt;char16_t&gt; const&amp;, nsAtom*, int, nsTSubstring&lt;char16_t&gt; const*)%0a%0dmozilla::EditorBase::CreateHTMLContent(nsAtom const*)%0a%0dmozilla::EditorBase::MaybeCreatePaddingBRElementForEmptyEditor(void)%0a%0dmozilla::TextEditor::OnEndHandlingTopLevelEditSubAction(void)%0a%0dmozilla::TextEditor::DeleteSelectionAsSubAction(short, short)%0a%0d[js] _removeURLFormat%0a%0dmozilla::EditTransactionBase::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::InsertNodeTransaction::QueryInterface(nsID const&amp;, void**)%0a%0d[js] setTimeout%0a%0djs::jit::GetPropIRGenerator::GetPropIRGenerator(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, js::jit::ICState::Mode, js::jit::CacheKind, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::jit::GetPropertyResultFlags)%0a%0djs::jit::TryAttachGetPropStub%0a%0d[js] _matchUnknownUrl%0a%0dmozilla::widget::WinTextEventDispatcherListener::NotifyIME(mozilla::widget::TextEventDispatcher*, mozilla::widget::IMENotification const&amp;)%0a%0d[js] [Symbol.split]%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::gfx::RectTyped&lt;mozilla::CSSPixel,float&gt; &amp;&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::layers::RenderRootDisplayListData&gt;::Write(IPC::Message*, mozilla::ipc::IProtocol*, mozilla::layers::RenderRootDisplayListData&amp;&amp;)%0a%0dnsDocLoader::QueryInterface(nsID const&amp;, void**)%0a%0dnsLayoutUtils::PaintFrame(gfxContext*, nsIFrame*, nsRegion const&amp;, unsigned int, nsDisplayListBuilderMode, nsLayoutUtils::PaintFrameFlags)%0a%0dnsBlockFrame::UpdatePseudoElementStyles(mozilla::ServoRestyleState&amp;)%0a%0dnsIFrame::UpdateStyleOfChildAnonBox(nsIFrame*, mozilla::ServoRestyleState&amp;)%0a%0dNtOpenEvent%0a%0dOpenEventW%0a%0dlong CTabTipEventBase::Open%0a%0dXPCConvert::JSData2Native(JSContext*, void*, JS::Handle&lt;JS::Value&gt;, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0dFlattenedDisplayListIterator::ShouldFlattenNextItem(void)%0a%0dFlattenedDisplayListIterator::ResolveFlattening(void)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0dmozilla::dom::AnimationEffect::GetComputedTiming(mozilla::TimingParams const*)%0a%0d[js] split%0a%0d[js] splitString%0a%0djs::NativeObject::copyDenseElements(unsigned int, JS::Value const*, unsigned int)%0a%0djs::NativeObject::setOrExtendDenseElements(JSContext*, unsigned int, JS::Value const*, unsigned int, js::ShouldUpdateTypes)%0a%0djs::NewCopiedArrayTryUseGroup(JSContext*, JS::Handle&lt;js::ObjectGroup*&gt;, JS::Value const*, uint64_t, js::NewObjectKind, js::ShouldUpdateTypes)%0a%0djs::ObjectGroup::newArrayObject(JSContext*, JS::Value const*, uint64_t, js::NewObjectKind, js::ObjectGroup::NewArrayKind)%0a%0dmozilla::image::SurfaceCacheImpl::DoUnlockSurfaces(mozilla::NotNull&lt;mozilla::image::ImageSurfaceCache*&gt;, bool, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::SurfaceCacheImpl::UnlockImage(mozilla::image::Image* const, mozilla::BaseAutoLock&lt;mozilla::AnyStaticMutex&gt; const&amp;)%0a%0dmozilla::image::RasterImage::UnlockImage(void)%0a%0dimgRequestProxy::UnlockImage(void)%0a%0dnsImageLoadingContent::MakePendingRequestCurrent(void)%0a%0dmozilla::net::nsSimpleURI::SetPathQueryRefEscaped(nsTSubstring&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::nsSimpleURI::SetSpecInternal(nsTSubstring&lt;char&gt; const&amp;)%0a%0d[js] _updateResults%0a%0dnsXULPrototypeElement::TraceAllScripts(JSTracer*)%0a%0dmozilla::dom::TraceBlackJS(JSTracer*, bool)%0a%0dXPCJSRuntime::TraceNativeBlackRoots(JSTracer*)%0a%0djs::gc::GCRuntime::traceRuntimeCommon(JSTracer*, js::gc::GCRuntime::TraceOrMarkRuntime)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::AtomsTable::tracePinnedAtoms(JSTracer*, js::AutoAccessAtomsZone const&amp;)%0a%0djs::gc::GCRuntime::traceRuntimeForMajorGC(JSTracer*, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0d_security_check_cookie%0a%0dmozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::changeTableSize(unsigned int, mozilla::detail::HashTable&lt;mozilla::HashMapEntry&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt; &gt;, mozilla::HashMap&lt;JSScript*, mozilla::UniquePtr&lt;js::ScriptCounts, JS::DeletePolicy&lt;js::ScriptCounts&gt; &gt;, mozilla::DefaultHasher&lt;JSScript*&gt;, js::SystemAllocPolicy&gt;::MapHashPolicy, js::SystemAllocPolicy&gt;::FailureBehavior)%0a%0dJSScript::releaseScriptCounts(js::ScriptCounts*)%0a%0dJSScript::destroyScriptCounts(void)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::LifoAlloc::transferFrom(js::LifoAlloc*)%0a%0djs::jit::JitScript::Destroy(JS::Zone*, js::jit::JitScript*)%0a%0dJSScript::releaseJitScript(JSFreeOp*)%0a%0dJS::Zone::discardJitCode(JSFreeOp*, JS::Zone::ShouldDiscardBaselineCode, JS::Zone::ShouldDiscardJitScripts)%0a%0djs::gc::GCRuntime::discardJITCodeForGC(void)%0a%0djs::gc::GCRuntime::beginMarkPhase(JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::incrementalSlice(js::SliceBudget&amp;, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason, js::gc::AutoGCSession&amp;)%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::GCRuntime::collect%0a%0djs::TenuringTracer::moveSlotsToTenured(js::NativeObject*, js::NativeObject*)%0a%0djs::Nursery::collect%0a%0djs::gc::GCRuntime::gcCycle(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0djs::gc::GCRuntime::collect(bool, js::SliceBudget, mozilla::Maybe&lt;JSGCInvocationKind&gt; const&amp;, JS::GCReason)%0a%0dmozilla::net::nsHttpTransaction::`vector deleting destructor'(unsigned int)%0a%0dPL_strncasestr%0a%0dmozilla::net::nsStandardURL::CheckIfHostIsAscii(void)%0a%0dmozilla::net::nsStandardURL::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmozilla::net::nsStandardURL::TemplatedMutator&lt;mozilla::net::nsStandardURL&gt;::Deserialize(mozilla::ipc::URIParams const&amp;)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3833" font-family="Helvetica, Arial, sans-serif" x="1085" y="2316.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3834" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)</tspan></text></a><a id="SvgjsA3838" href="data:text/plain,mozilla::net::nsStandardURL::Init(unsigned int, int, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0d[js] _getUrlMetaData%0a%0d[js] shouldLoadURIInBrowser%0a%0dcore::iter::{{impl}}::eq&lt;(),()&gt;%0a%0dcore::iter::traits::iterator::Iterator::all&lt;core::iter::adapters::chain::Chain&lt;core::iter::sources::Once&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;, mut selectors::parser::SelectorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;,closure-0&gt;%0a%0dNtUserCallHwndLockSafe%0a%0dint64_t ImeSetContextHandler(struct tagIMEUI *,unsigned int,uint64_t,int64_t)%0a%0dmozilla::widget::IMEHandler::AssociateIMEContext(nsWindowBase*, bool)%0a%0dnsFocusManager::Blur(nsPIDOMWindowOuter*, nsPIDOMWindowOuter*, bool, bool, nsIContent*)%0a%0dhashglobe::hash_map::HashMap&lt;style::gecko_string_cache::Atom*, (), core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;::with_hasher&lt;style::gecko_string_cache::Atom*,(),core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0d&lt;hashglobe::hash_map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default%0a%0d&lt;hashglobe::hash_set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default%0a%0dstyle::custom_properties::CustomPropertiesBuilder::new%0a%0dstyle::properties::cascade::apply_declarations%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::Dependency&gt;::lookup&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dmemcpy()%0a%0dnsFontCache::GetMetricsFor(nsFont const&amp;, nsFontMetrics::Params const&amp;)%0a%0dnsIContent::AddRef(void)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsIXPConnect::XPConnect(void)%0a%0dXPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)%0a%0dXPC_WN_GetterSetter(JSContext*, unsigned int, JS::Value*)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::TreeNode)%0a%0d[js] onQueryResults%0a%0djs::jit::BaselineCodeGen&lt;js::jit::BaselineCompilerHandler&gt;::emit_CheckIsObj(void)%0a%0djs::jit::BaselineCompiler::emitBody(void)%0a%0d[js] _getUrlMetaData%0a%0d[js] _formatURL%0a%0d[js] update%0a%0d[js] formatValue%0a%0d[js] onQueryResults%0a%0d[js] receiveResults%0a%0d[js] add%0a%0dcore::ptr::{{impl}}::add&lt;u16&gt;%0a%0dencoding_rs::mem::convert_latin1_to_utf16%0a%0dnsstring::conversions::&lt;impl nsstring::nsAString&gt;::fallible_append_latin1_impl%0a%0dnsTextToSubURI::convertURItoUnicode(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsTextToSubURI::UnEscapeURIForUI(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(nsIFrame*, nsDisplayList*, bool)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::net::HttpChannelParent::~HttpChannelParent(void)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3836" font-family="Helvetica, Arial, sans-serif" x="1085" y="2319.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3837" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::net::nsStandardURL::Init(unsigned int, int, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)</tspan></text></a><a id="SvgjsA3841" href="data:text/plain,JS::WeakCache&lt;JS::GCHashSet&lt;js::InitialShapeEntry, js::InitialShapeEntry, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::InitialShapeEntry::Lookup const&amp;)%0a%0dmozilla::net::nsStandardURL::Init(unsigned int, int, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0d[js] _getUrlMetaData%0a%0d[js] shouldLoadURIInBrowser%0a%0dcore::iter::{{impl}}::eq&lt;(),()&gt;%0a%0dcore::iter::traits::iterator::Iterator::all&lt;core::iter::adapters::chain::Chain&lt;core::iter::sources::Once&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;, mut selectors::parser::SelectorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;,closure-0&gt;%0a%0dNtUserCallHwndLockSafe%0a%0dint64_t ImeSetContextHandler(struct tagIMEUI *,unsigned int,uint64_t,int64_t)%0a%0dmozilla::widget::IMEHandler::AssociateIMEContext(nsWindowBase*, bool)%0a%0dnsFocusManager::Blur(nsPIDOMWindowOuter*, nsPIDOMWindowOuter*, bool, bool, nsIContent*)%0a%0dhashglobe::hash_map::HashMap&lt;style::gecko_string_cache::Atom*, (), core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;::with_hasher&lt;style::gecko_string_cache::Atom*,(),core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0d&lt;hashglobe::hash_map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default%0a%0d&lt;hashglobe::hash_set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default%0a%0dstyle::custom_properties::CustomPropertiesBuilder::new%0a%0dstyle::properties::cascade::apply_declarations%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::Dependency&gt;::lookup&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dmemcpy()%0a%0dnsFontCache::GetMetricsFor(nsFont const&amp;, nsFontMetrics::Params const&amp;)%0a%0dnsIContent::AddRef(void)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsIXPConnect::XPConnect(void)%0a%0dXPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)%0a%0dXPC_WN_GetterSetter(JSContext*, unsigned int, JS::Value*)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::TreeNode)%0a%0d[js] onQueryResults%0a%0djs::jit::BaselineCodeGen&lt;js::jit::BaselineCompilerHandler&gt;::emit_CheckIsObj(void)%0a%0djs::jit::BaselineCompiler::emitBody(void)%0a%0d[js] _getUrlMetaData%0a%0d[js] _formatURL%0a%0d[js] update%0a%0d[js] formatValue%0a%0d[js] onQueryResults%0a%0d[js] receiveResults%0a%0d[js] add%0a%0dcore::ptr::{{impl}}::add&lt;u16&gt;%0a%0dencoding_rs::mem::convert_latin1_to_utf16%0a%0dnsstring::conversions::&lt;impl nsstring::nsAString&gt;::fallible_append_latin1_impl%0a%0dnsTextToSubURI::convertURItoUnicode(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsTextToSubURI::UnEscapeURIForUI(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(nsIFrame*, nsDisplayList*, bool)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::net::HttpChannelParent::~HttpChannelParent(void)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3839" font-family="Helvetica, Arial, sans-serif" x="1085" y="2322.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3840" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">JS::WeakCache&lt;JS::GCHashSet&lt;js::InitialShapeEntry, js::InitialShapeEntry, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::InitialShapeEntry::Lookup const&amp;)</tspan></text></a><a id="SvgjsA3844" href="data:text/plain,CanEnterBaselineJIT%0a%0djs::jit::CanEnterBaselineMethod&lt;1&gt;(JSContext*, js::RunState&amp;)%0a%0djs::jit::MaybeEnterJit(JSContext*, js::RunState&amp;)%0a%0darena_t::DallocSmall(arena_chunk_t*, void*, arena_chunk_map_t*)%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d&lt;style::gecko::wrapper::GeckoElement as style::dom::TElement&gt;::clear_data%0a%0dServo_Element_ClearData%0a%0dmozilla::dom::Element::ClearServoData(mozilla::dom::Document*)%0a%0dmozilla::RestyleManager::ClearServoDataFromSubtree(mozilla::dom::Element*, mozilla::RestyleManager::IncludeRoot)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dXPCConvert::NativeInterface2JSObject(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, xpcObjectHelper&amp;, nsID const*, bool, nsresult*)%0a%0d&lt;servo_arc::ArcUnion&lt;A,B&gt; as core::clone::Clone&gt;::clone%0a%0d[js] finishSearch%0a%0d[js] startSearch/&lt;%0a%0dmozilla::TimeStamp::Now(bool)%0a%0dhb_buffer_t::next_glyph(void)%0a%0dapply_string&lt;GSUBProxy&gt;%0a%0dmozilla::widget::NativeKey::DispatchKeyPressEventsWithRetrievedCharMessages(void)%0a%0dmozilla::widget::NativeKey::HandleKeyDownMessage(bool*)%0a%0darena_dalloc%0a%0dmozilla::ipc::PrincipalInfoToPrincipal(mozilla::ipc::PrincipalInfo const&amp;, nsresult*)%0a%0dmozilla::net::NeckoParent::AllocPHttpChannelParent(mozilla::dom::PBrowserOrId const&amp;, IPC::SerializedLoadContext const&amp;, mozilla::net::HttpChannelCreationArgs const&amp;)%0a%0dmozilla::net::PNeckoParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dTimerThread::RemoveTimer(nsTimerImpl*)%0a%0dmozilla::net::CacheEntry::NewHandle(void)%0a%0dT_EscapeURL&lt;nsTSubstring&lt;char&gt; &gt;%0a%0dNS_EscapeURLSpan(mozilla::Span&lt;char const, -1&gt;, unsigned int, nsTSubstring&lt;char&gt;&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3842" font-family="Helvetica, Arial, sans-serif" x="1085" y="2324.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3843" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">CanEnterBaselineJIT</tspan></text></a><a id="SvgjsA3847" href="data:text/plain,js::NativeDefineProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::PropertyDescriptor&gt;, JS::ObjectOpResult&amp;)%0a%0djs::DefineAccessorProperty(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, unsigned int)%0a%0dJS_DefinePropertyById(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, unsigned int)%0a%0d[js] _getUrlMetaData%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::InitialShapeEntry, js::InitialShapeEntry, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::InitialShapeEntry::Lookup const&amp;)%0a%0dmozilla::net::nsStandardURL::Init(unsigned int, int, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0d[js] _getUrlMetaData%0a%0d[js] shouldLoadURIInBrowser%0a%0dcore::iter::{{impl}}::eq&lt;(),()&gt;%0a%0dcore::iter::traits::iterator::Iterator::all&lt;core::iter::adapters::chain::Chain&lt;core::iter::sources::Once&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;, mut selectors::parser::SelectorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;,closure-0&gt;%0a%0dNtUserCallHwndLockSafe%0a%0dint64_t ImeSetContextHandler(struct tagIMEUI *,unsigned int,uint64_t,int64_t)%0a%0dmozilla::widget::IMEHandler::AssociateIMEContext(nsWindowBase*, bool)%0a%0dnsFocusManager::Blur(nsPIDOMWindowOuter*, nsPIDOMWindowOuter*, bool, bool, nsIContent*)%0a%0dhashglobe::hash_map::HashMap&lt;style::gecko_string_cache::Atom*, (), core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;::with_hasher&lt;style::gecko_string_cache::Atom*,(),core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0d&lt;hashglobe::hash_map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default%0a%0d&lt;hashglobe::hash_set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default%0a%0dstyle::custom_properties::CustomPropertiesBuilder::new%0a%0dstyle::properties::cascade::apply_declarations%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::Dependency&gt;::lookup&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dmemcpy()%0a%0dnsFontCache::GetMetricsFor(nsFont const&amp;, nsFontMetrics::Params const&amp;)%0a%0dnsIContent::AddRef(void)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsIXPConnect::XPConnect(void)%0a%0dXPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)%0a%0dXPC_WN_GetterSetter(JSContext*, unsigned int, JS::Value*)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::TreeNode)%0a%0d[js] onQueryResults%0a%0djs::jit::BaselineCodeGen&lt;js::jit::BaselineCompilerHandler&gt;::emit_CheckIsObj(void)%0a%0djs::jit::BaselineCompiler::emitBody(void)%0a%0d[js] _getUrlMetaData%0a%0d[js] _formatURL%0a%0d[js] update%0a%0d[js] formatValue%0a%0d[js] onQueryResults%0a%0d[js] receiveResults%0a%0d[js] add%0a%0dcore::ptr::{{impl}}::add&lt;u16&gt;%0a%0dencoding_rs::mem::convert_latin1_to_utf16%0a%0dnsstring::conversions::&lt;impl nsstring::nsAString&gt;::fallible_append_latin1_impl%0a%0dnsTextToSubURI::convertURItoUnicode(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsTextToSubURI::UnEscapeURIForUI(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(nsIFrame*, nsDisplayList*, bool)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::net::HttpChannelParent::~HttpChannelParent(void)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3845" font-family="Helvetica, Arial, sans-serif" x="1085" y="2327.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3846" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeDefineProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::PropertyDescriptor&gt;, JS::ObjectOpResult&amp;)</tspan></text></a><a id="SvgjsA3850" href="data:text/plain,mozilla::dom::Range_Binding::Wrap(JSContext*, nsRange*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dnsRange::WrapObject(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::Document_Binding::createRange%0a%0dDocument.createRange%0a%0d[js] _formatScheme%0a%0d[js] _formatURL%0a%0djs::NativeDefineProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::PropertyDescriptor&gt;, JS::ObjectOpResult&amp;)%0a%0djs::DefineAccessorProperty(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, unsigned int)%0a%0dJS_DefinePropertyById(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, unsigned int)%0a%0d[js] _getUrlMetaData%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::InitialShapeEntry, js::InitialShapeEntry, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::InitialShapeEntry::Lookup const&amp;)%0a%0dmozilla::net::nsStandardURL::Init(unsigned int, int, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0d[js] _getUrlMetaData%0a%0d[js] shouldLoadURIInBrowser%0a%0dcore::iter::{{impl}}::eq&lt;(),()&gt;%0a%0dcore::iter::traits::iterator::Iterator::all&lt;core::iter::adapters::chain::Chain&lt;core::iter::sources::Once&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;, mut selectors::parser::SelectorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;,closure-0&gt;%0a%0dNtUserCallHwndLockSafe%0a%0dint64_t ImeSetContextHandler(struct tagIMEUI *,unsigned int,uint64_t,int64_t)%0a%0dmozilla::widget::IMEHandler::AssociateIMEContext(nsWindowBase*, bool)%0a%0dnsFocusManager::Blur(nsPIDOMWindowOuter*, nsPIDOMWindowOuter*, bool, bool, nsIContent*)%0a%0dhashglobe::hash_map::HashMap&lt;style::gecko_string_cache::Atom*, (), core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;::with_hasher&lt;style::gecko_string_cache::Atom*,(),core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0d&lt;hashglobe::hash_map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default%0a%0d&lt;hashglobe::hash_set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default%0a%0dstyle::custom_properties::CustomPropertiesBuilder::new%0a%0dstyle::properties::cascade::apply_declarations%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::Dependency&gt;::lookup&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dmemcpy()%0a%0dnsFontCache::GetMetricsFor(nsFont const&amp;, nsFontMetrics::Params const&amp;)%0a%0dnsIContent::AddRef(void)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsIXPConnect::XPConnect(void)%0a%0dXPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)%0a%0dXPC_WN_GetterSetter(JSContext*, unsigned int, JS::Value*)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::TreeNode)%0a%0d[js] onQueryResults%0a%0djs::jit::BaselineCodeGen&lt;js::jit::BaselineCompilerHandler&gt;::emit_CheckIsObj(void)%0a%0djs::jit::BaselineCompiler::emitBody(void)%0a%0d[js] _getUrlMetaData%0a%0d[js] _formatURL%0a%0d[js] update%0a%0d[js] formatValue%0a%0d[js] onQueryResults%0a%0d[js] receiveResults%0a%0d[js] add%0a%0dcore::ptr::{{impl}}::add&lt;u16&gt;%0a%0dencoding_rs::mem::convert_latin1_to_utf16%0a%0dnsstring::conversions::&lt;impl nsstring::nsAString&gt;::fallible_append_latin1_impl%0a%0dnsTextToSubURI::convertURItoUnicode(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsTextToSubURI::UnEscapeURIForUI(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(nsIFrame*, nsDisplayList*, bool)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::net::HttpChannelParent::~HttpChannelParent(void)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3848" font-family="Helvetica, Arial, sans-serif" x="1085" y="2329.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3849" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::Range_Binding::Wrap(JSContext*, nsRange*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)</tspan></text></a><a id="SvgjsA3853" href="data:text/plain,js::ToBooleanSlow(JS::Handle&lt;JS::Value&gt;)%0a%0dInterpret%0a%0d[js] get securityUI%0a%0d[js] get securityUI%0a%0d[js] _formatURL%0a%0dmozilla::dom::Range_Binding::Wrap(JSContext*, nsRange*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dnsRange::WrapObject(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::Document_Binding::createRange%0a%0dDocument.createRange%0a%0d[js] _formatScheme%0a%0d[js] _formatURL%0a%0djs::NativeDefineProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::PropertyDescriptor&gt;, JS::ObjectOpResult&amp;)%0a%0djs::DefineAccessorProperty(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, unsigned int)%0a%0dJS_DefinePropertyById(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, unsigned int)%0a%0d[js] _getUrlMetaData%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::InitialShapeEntry, js::InitialShapeEntry, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::InitialShapeEntry::Lookup const&amp;)%0a%0dmozilla::net::nsStandardURL::Init(unsigned int, int, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0d[js] _getUrlMetaData%0a%0d[js] shouldLoadURIInBrowser%0a%0dcore::iter::{{impl}}::eq&lt;(),()&gt;%0a%0dcore::iter::traits::iterator::Iterator::all&lt;core::iter::adapters::chain::Chain&lt;core::iter::sources::Once&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;, mut selectors::parser::SelectorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;,closure-0&gt;%0a%0dNtUserCallHwndLockSafe%0a%0dint64_t ImeSetContextHandler(struct tagIMEUI *,unsigned int,uint64_t,int64_t)%0a%0dmozilla::widget::IMEHandler::AssociateIMEContext(nsWindowBase*, bool)%0a%0dnsFocusManager::Blur(nsPIDOMWindowOuter*, nsPIDOMWindowOuter*, bool, bool, nsIContent*)%0a%0dhashglobe::hash_map::HashMap&lt;style::gecko_string_cache::Atom*, (), core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;::with_hasher&lt;style::gecko_string_cache::Atom*,(),core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0d&lt;hashglobe::hash_map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default%0a%0d&lt;hashglobe::hash_set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default%0a%0dstyle::custom_properties::CustomPropertiesBuilder::new%0a%0dstyle::properties::cascade::apply_declarations%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::Dependency&gt;::lookup&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dmemcpy()%0a%0dnsFontCache::GetMetricsFor(nsFont const&amp;, nsFontMetrics::Params const&amp;)%0a%0dnsIContent::AddRef(void)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsIXPConnect::XPConnect(void)%0a%0dXPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)%0a%0dXPC_WN_GetterSetter(JSContext*, unsigned int, JS::Value*)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::TreeNode)%0a%0d[js] onQueryResults%0a%0djs::jit::BaselineCodeGen&lt;js::jit::BaselineCompilerHandler&gt;::emit_CheckIsObj(void)%0a%0djs::jit::BaselineCompiler::emitBody(void)%0a%0d[js] _getUrlMetaData%0a%0d[js] _formatURL%0a%0d[js] update%0a%0d[js] formatValue%0a%0d[js] onQueryResults%0a%0d[js] receiveResults%0a%0d[js] add%0a%0dcore::ptr::{{impl}}::add&lt;u16&gt;%0a%0dencoding_rs::mem::convert_latin1_to_utf16%0a%0dnsstring::conversions::&lt;impl nsstring::nsAString&gt;::fallible_append_latin1_impl%0a%0dnsTextToSubURI::convertURItoUnicode(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsTextToSubURI::UnEscapeURIForUI(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(nsIFrame*, nsDisplayList*, bool)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::net::HttpChannelParent::~HttpChannelParent(void)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3851" font-family="Helvetica, Arial, sans-serif" x="1085" y="2332.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3852" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::ToBooleanSlow(JS::Handle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3856" href="data:text/plain,js::UncheckedUnwrap(JSObject*, bool, unsigned int*)%0a%0djs::ValueToId&lt;1&gt;(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::PropertyKey&gt;)%0a%0d[js] set selectedIndex%0a%0djs::Allocate&lt;js::jit::JitCode, 0&gt;(JSContext*)%0a%0djs::jit::JitCode::New&lt;0&gt;(JSContext*, unsigned char*, unsigned int, unsigned int, js::jit::ExecutablePool*, js::jit::CodeKind)%0a%0dintrinsic_UnsafeGetReservedSlot%0a%0d[js] from%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dWrapDOMObject&lt;mozilla::dom::Element&gt;%0a%0dmozilla::dom::Document_Binding::get_commandDispatcher%0a%0dmozilla::dom::GetPropertyOnPrototype(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dmozilla::dom::HTMLDocument_Binding::DOMProxyHandler::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0d[js] on_mousedown%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3854" font-family="Helvetica, Arial, sans-serif" x="1085" y="2334.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3855" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::UncheckedUnwrap(JSObject*, bool, unsigned int*)</tspan></text></a><a id="SvgjsA3859" href="data:text/plain,UpdatePropertyType%0a%0djs::ObjectGroup::updateNewPropertyTypes(js::AutoSweepObjectGroup const&amp;, JSContext*, JSObject*, JS::PropertyKey, js::HeapTypeSet*)%0a%0djs::ObjectGroup::getProperty(js::AutoSweepObjectGroup const&amp;, JSContext*, JSObject*, JS::PropertyKey)%0a%0djs::EnsureTrackPropertyTypes(JSContext*, JSObject*, JS::PropertyKey)%0a%0d[js] BUI_updateStarState%0a%0dmozilla::EventListenerManager::AddEventListenerInternal(mozilla::dom::CallbackObjectHolder&lt;mozilla::dom::EventListener, nsIDOMEventListener&gt;, mozilla::EventMessage, nsAtom*, mozilla::EventListenerFlags const&amp;, bool, bool)%0a%0d0x2c8880a49a0%0a%0d[js] UrlbarInput/this[method]%0a%0d[js] SetPageProxyState%0a%0djs::ToBooleanSlow(JS::Handle&lt;JS::Value&gt;)%0a%0dInterpret%0a%0d[js] get securityUI%0a%0d[js] get securityUI%0a%0d[js] _formatURL%0a%0dmozilla::dom::Range_Binding::Wrap(JSContext*, nsRange*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dnsRange::WrapObject(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::Document_Binding::createRange%0a%0dDocument.createRange%0a%0d[js] _formatScheme%0a%0d[js] _formatURL%0a%0djs::NativeDefineProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::PropertyDescriptor&gt;, JS::ObjectOpResult&amp;)%0a%0djs::DefineAccessorProperty(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, unsigned int)%0a%0dJS_DefinePropertyById(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, unsigned int)%0a%0d[js] _getUrlMetaData%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::InitialShapeEntry, js::InitialShapeEntry, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::InitialShapeEntry::Lookup const&amp;)%0a%0dmozilla::net::nsStandardURL::Init(unsigned int, int, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0d[js] _getUrlMetaData%0a%0d[js] shouldLoadURIInBrowser%0a%0dcore::iter::{{impl}}::eq&lt;(),()&gt;%0a%0dcore::iter::traits::iterator::Iterator::all&lt;core::iter::adapters::chain::Chain&lt;core::iter::sources::Once&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;, mut selectors::parser::SelectorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;,closure-0&gt;%0a%0dNtUserCallHwndLockSafe%0a%0dint64_t ImeSetContextHandler(struct tagIMEUI *,unsigned int,uint64_t,int64_t)%0a%0dmozilla::widget::IMEHandler::AssociateIMEContext(nsWindowBase*, bool)%0a%0dnsFocusManager::Blur(nsPIDOMWindowOuter*, nsPIDOMWindowOuter*, bool, bool, nsIContent*)%0a%0dhashglobe::hash_map::HashMap&lt;style::gecko_string_cache::Atom*, (), core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;::with_hasher&lt;style::gecko_string_cache::Atom*,(),core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0d&lt;hashglobe::hash_map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default%0a%0d&lt;hashglobe::hash_set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default%0a%0dstyle::custom_properties::CustomPropertiesBuilder::new%0a%0dstyle::properties::cascade::apply_declarations%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::Dependency&gt;::lookup&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dmemcpy()%0a%0dnsFontCache::GetMetricsFor(nsFont const&amp;, nsFontMetrics::Params const&amp;)%0a%0dnsIContent::AddRef(void)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsIXPConnect::XPConnect(void)%0a%0dXPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)%0a%0dXPC_WN_GetterSetter(JSContext*, unsigned int, JS::Value*)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::TreeNode)%0a%0d[js] onQueryResults%0a%0djs::jit::BaselineCodeGen&lt;js::jit::BaselineCompilerHandler&gt;::emit_CheckIsObj(void)%0a%0djs::jit::BaselineCompiler::emitBody(void)%0a%0d[js] _getUrlMetaData%0a%0d[js] _formatURL%0a%0d[js] update%0a%0d[js] formatValue%0a%0d[js] onQueryResults%0a%0d[js] receiveResults%0a%0d[js] add%0a%0dcore::ptr::{{impl}}::add&lt;u16&gt;%0a%0dencoding_rs::mem::convert_latin1_to_utf16%0a%0dnsstring::conversions::&lt;impl nsstring::nsAString&gt;::fallible_append_latin1_impl%0a%0dnsTextToSubURI::convertURItoUnicode(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsTextToSubURI::UnEscapeURIForUI(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(nsIFrame*, nsDisplayList*, bool)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::net::HttpChannelParent::~HttpChannelParent(void)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3857" font-family="Helvetica, Arial, sans-serif" x="1085" y="2337.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3858" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">UpdatePropertyType</tspan></text></a><a id="SvgjsA3862" href="data:text/plain,js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)%0a%0dmozilla::dom::HTMLCanvasElement_Binding::getContext%0a%0dHTMLCanvasElement.getContext%0a%0ditrp_InnerExecute%0a%0dnsDisplayBackgroundImage::AppendBackgroundItemsToTop(nsDisplayListBuilder*, nsIFrame*, nsRect const&amp;, nsDisplayList*, bool, mozilla::ComputedStyle*, nsRect const&amp;, nsIFrame*, mozilla::Maybe&lt;nsDisplayListBuilder::AutoBuildingDisplayList&gt;*)%0a%0dnsBaseWidget::ProcessUntransformedAPZEvent(mozilla::WidgetInputEvent*, mozilla::layers::APZEventResult const&amp;)%0a%0dnsBaseWidget::DispatchInputEvent(mozilla::WidgetInputEvent*)%0a%0dnsWindow::DispatchMouseEvent(mozilla::EventMessage, uint64_t, int64_t, bool, short, unsigned short, WinPointerInfo*)%0a%0dnsLayoutUtils::GetEventCoordinatesRelativeTo(mozilla::WidgetEvent const*, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt; const&amp;, nsIFrame*)%0a%0dmozilla::dom::Event::GetClientCoords(nsPresContext*, mozilla::WidgetEvent*, mozilla::gfx::IntPointTyped&lt;mozilla::LayoutDevicePixel&gt;, mozilla::gfx::IntPointTyped&lt;mozilla::CSSPixel&gt;)%0a%0dmozilla::PresShell::EventHandler::GetFrameToHandleNonTouchEvent(nsIFrame*, mozilla::WidgetGUIEvent*)%0a%0dwebrender::storage::Index&lt;T&gt;::new%0a%0dmozilla::PresShell::EventHandler::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dmozilla::PresShell::HandleEvent(nsIFrame*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3860" font-family="Helvetica, Arial, sans-serif" x="1085" y="2339.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3861" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)</tspan></text></a><a id="SvgjsA3865" href="data:text/plain,UpdatePropertyType%0a%0dAlpcConnection::Callback_ProcessIncoming(IAlpcConnectionHost *,bool *)%0a%0dMicrosoft::CoreUI::Messaging::CrossProcessReceivePort__AlpcReceiveSource::OnReceive()%0a%0dMicrosoft::CoreUI::Dispatch::OffThreadReceiver::Callback_OnDispatch()%0a%0dnsDisplayBackgroundColor::CanApplyOpacity(void)%0a%0dCollectItemsWithOpacity%0a%0dnsDisplayOpacity::ApplyOpacityToChildren(nsDisplayListBuilder*)%0a%0dnsDisplayOpacity::ShouldFlattenAway(nsDisplayListBuilder*)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0dRedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::MoveRedLeft(RedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::TreeNode)%0a%0dnsPresContext::GetToplevelContentDocumentPresContext(void)%0a%0dGetFrameVisibleRectOnScreen%0a%0dnsLayoutUtils::FrameIsScrolledOutOfViewInCrossProcess(nsIFrame const*)%0a%0dmozilla::FindAnimationsForCompositor(nsIFrame const*, nsCSSPropertyIDSet const&amp;, nsTArray&lt;RefPtr&lt;mozilla::dom::Animation&gt; &gt;*)%0a%0dnsDisplayListBuilder::OutOfFlowDisplayData::ComputeVisibleRectForFrame(nsDisplayListBuilder*, nsIFrame*, nsRect const&amp;, nsRect const&amp;, nsRect*)%0a%0dnsDisplayListBuilder::MarkOutOfFlowFrameForDisplay(nsIFrame*, nsIFrame*)%0a%0dnsDisplayListBuilder::MarkFramesForDisplayList(nsIFrame*, nsFrameList const&amp;)%0a%0dnsIFrame::BuildDisplayListForSimpleChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaAvailTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaAvailTreeTrait&gt;::TreeNode)%0a%0darena_t::DallocRun(arena_run_t*, bool)%0a%0dnsGlobalWindowInner::PostHandleEvent(mozilla::EventChainPostVisitor&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dEventDispatcher::Dispatch overflow%0a%0dnsHTMLStyleSheet::CalculateMappedServoDeclarations(void)%0a%0dmozilla::ServoStyleSet::PreTraverseSync(void)%0a%0dmozilla::SVGObserverUtils::InvalidateDirectRenderingObservers(nsIFrame*, unsigned int)%0a%0dInvalidateFrameInternal%0a%0dnsIFrame::InvalidateFrameSubtree(bool)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3863" font-family="Helvetica, Arial, sans-serif" x="1085" y="2341.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3864" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">UpdatePropertyType</tspan></text></a><a id="SvgjsA3868" href="data:text/plain,UpdatePropertyType%0a%0dAlpcConnection::Callback_ProcessIncoming(IAlpcConnectionHost *,bool *)%0a%0dMicrosoft::CoreUI::Messaging::CrossProcessReceivePort__AlpcReceiveSource::OnReceive()%0a%0dMicrosoft::CoreUI::Dispatch::OffThreadReceiver::Callback_OnDispatch()%0a%0dnsDisplayBackgroundColor::CanApplyOpacity(void)%0a%0dCollectItemsWithOpacity%0a%0dnsDisplayOpacity::ApplyOpacityToChildren(nsDisplayListBuilder*)%0a%0dnsDisplayOpacity::ShouldFlattenAway(nsDisplayListBuilder*)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0dRedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::MoveRedLeft(RedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::TreeNode)%0a%0dnsPresContext::GetToplevelContentDocumentPresContext(void)%0a%0dGetFrameVisibleRectOnScreen%0a%0dnsLayoutUtils::FrameIsScrolledOutOfViewInCrossProcess(nsIFrame const*)%0a%0dmozilla::FindAnimationsForCompositor(nsIFrame const*, nsCSSPropertyIDSet const&amp;, nsTArray&lt;RefPtr&lt;mozilla::dom::Animation&gt; &gt;*)%0a%0dnsDisplayListBuilder::OutOfFlowDisplayData::ComputeVisibleRectForFrame(nsDisplayListBuilder*, nsIFrame*, nsRect const&amp;, nsRect const&amp;, nsRect*)%0a%0dnsDisplayListBuilder::MarkOutOfFlowFrameForDisplay(nsIFrame*, nsIFrame*)%0a%0dnsDisplayListBuilder::MarkFramesForDisplayList(nsIFrame*, nsFrameList const&amp;)%0a%0dnsIFrame::BuildDisplayListForSimpleChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaAvailTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaAvailTreeTrait&gt;::TreeNode)%0a%0darena_t::DallocRun(arena_run_t*, bool)%0a%0dnsGlobalWindowInner::PostHandleEvent(mozilla::EventChainPostVisitor&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dEventDispatcher::Dispatch overflow%0a%0dnsHTMLStyleSheet::CalculateMappedServoDeclarations(void)%0a%0dmozilla::ServoStyleSet::PreTraverseSync(void)%0a%0dmozilla::SVGObserverUtils::InvalidateDirectRenderingObservers(nsIFrame*, unsigned int)%0a%0dInvalidateFrameInternal%0a%0dnsIFrame::InvalidateFrameSubtree(bool)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3866" font-family="Helvetica, Arial, sans-serif" x="1085" y="2344.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3867" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">UpdatePropertyType</tspan></text></a><a id="SvgjsA3871" href="data:text/plain,js::ObjectWrapperMap::lookup(JSObject*)%0a%0dJS::Compartment::wrap(JSContext*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dPerformPromiseThenWithReaction%0a%0d[js] fetchBookmarksByURL%0a%0dUpdatePropertyType%0a%0dAlpcConnection::Callback_ProcessIncoming(IAlpcConnectionHost *,bool *)%0a%0dMicrosoft::CoreUI::Messaging::CrossProcessReceivePort__AlpcReceiveSource::OnReceive()%0a%0dMicrosoft::CoreUI::Dispatch::OffThreadReceiver::Callback_OnDispatch()%0a%0dnsDisplayBackgroundColor::CanApplyOpacity(void)%0a%0dCollectItemsWithOpacity%0a%0dnsDisplayOpacity::ApplyOpacityToChildren(nsDisplayListBuilder*)%0a%0dnsDisplayOpacity::ShouldFlattenAway(nsDisplayListBuilder*)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0dRedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::MoveRedLeft(RedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::TreeNode)%0a%0dnsPresContext::GetToplevelContentDocumentPresContext(void)%0a%0dGetFrameVisibleRectOnScreen%0a%0dnsLayoutUtils::FrameIsScrolledOutOfViewInCrossProcess(nsIFrame const*)%0a%0dmozilla::FindAnimationsForCompositor(nsIFrame const*, nsCSSPropertyIDSet const&amp;, nsTArray&lt;RefPtr&lt;mozilla::dom::Animation&gt; &gt;*)%0a%0dnsDisplayListBuilder::OutOfFlowDisplayData::ComputeVisibleRectForFrame(nsDisplayListBuilder*, nsIFrame*, nsRect const&amp;, nsRect const&amp;, nsRect*)%0a%0dnsDisplayListBuilder::MarkOutOfFlowFrameForDisplay(nsIFrame*, nsIFrame*)%0a%0dnsDisplayListBuilder::MarkFramesForDisplayList(nsIFrame*, nsFrameList const&amp;)%0a%0dnsIFrame::BuildDisplayListForSimpleChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaAvailTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaAvailTreeTrait&gt;::TreeNode)%0a%0darena_t::DallocRun(arena_run_t*, bool)%0a%0dnsGlobalWindowInner::PostHandleEvent(mozilla::EventChainPostVisitor&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dEventDispatcher::Dispatch overflow%0a%0dnsHTMLStyleSheet::CalculateMappedServoDeclarations(void)%0a%0dmozilla::ServoStyleSet::PreTraverseSync(void)%0a%0dmozilla::SVGObserverUtils::InvalidateDirectRenderingObservers(nsIFrame*, unsigned int)%0a%0dInvalidateFrameInternal%0a%0dnsIFrame::InvalidateFrameSubtree(bool)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3869" font-family="Helvetica, Arial, sans-serif" x="1085" y="2346.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3870" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::ObjectWrapperMap::lookup(JSObject*)</tspan></text></a><a id="SvgjsA3874" href="data:text/plain,Interpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3872" font-family="Helvetica, Arial, sans-serif" x="1085" y="2349.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3873" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a><a id="SvgjsA3877" href="data:text/plain,js::InterpreterFrame::isGlobalFrame(void)%0a%0d[js] onLocationChange%0a%0d[js] onLocationChange%0a%0d[js] onLocationChange%0a%0djs::ObjectWrapperMap::lookup(JSObject*)%0a%0dJS::Compartment::wrap(JSContext*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dPerformPromiseThenWithReaction%0a%0d[js] fetchBookmarksByURL%0a%0dUpdatePropertyType%0a%0dAlpcConnection::Callback_ProcessIncoming(IAlpcConnectionHost *,bool *)%0a%0dMicrosoft::CoreUI::Messaging::CrossProcessReceivePort__AlpcReceiveSource::OnReceive()%0a%0dMicrosoft::CoreUI::Dispatch::OffThreadReceiver::Callback_OnDispatch()%0a%0dnsDisplayBackgroundColor::CanApplyOpacity(void)%0a%0dCollectItemsWithOpacity%0a%0dnsDisplayOpacity::ApplyOpacityToChildren(nsDisplayListBuilder*)%0a%0dnsDisplayOpacity::ShouldFlattenAway(nsDisplayListBuilder*)%0a%0dmozilla::layers::WebRenderCommandBuilder::CreateWebRenderCommandsFromDisplayList(nsDisplayList*, nsDisplayItem*, nsDisplayListBuilder*, mozilla::layers::StackingContextHelper const&amp;, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;)%0a%0dRedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::MoveRedLeft(RedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::TreeNode)%0a%0dnsPresContext::GetToplevelContentDocumentPresContext(void)%0a%0dGetFrameVisibleRectOnScreen%0a%0dnsLayoutUtils::FrameIsScrolledOutOfViewInCrossProcess(nsIFrame const*)%0a%0dmozilla::FindAnimationsForCompositor(nsIFrame const*, nsCSSPropertyIDSet const&amp;, nsTArray&lt;RefPtr&lt;mozilla::dom::Animation&gt; &gt;*)%0a%0dnsDisplayListBuilder::OutOfFlowDisplayData::ComputeVisibleRectForFrame(nsDisplayListBuilder*, nsIFrame*, nsRect const&amp;, nsRect const&amp;, nsRect*)%0a%0dnsDisplayListBuilder::MarkOutOfFlowFrameForDisplay(nsIFrame*, nsIFrame*)%0a%0dnsDisplayListBuilder::MarkFramesForDisplayList(nsIFrame*, nsFrameList const&amp;)%0a%0dnsIFrame::BuildDisplayListForSimpleChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaAvailTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaAvailTreeTrait&gt;::TreeNode)%0a%0darena_t::DallocRun(arena_run_t*, bool)%0a%0dnsGlobalWindowInner::PostHandleEvent(mozilla::EventChainPostVisitor&amp;)%0a%0dmozilla::EventTargetChainItem::HandleEventTargetChain(nsTArray&lt;mozilla::EventTargetChainItem&gt;&amp;, mozilla::EventChainPostVisitor&amp;, mozilla::EventDispatchingCallback*, mozilla::ELMCreationDetector&amp;)%0a%0dEventDispatcher::Dispatch overflow%0a%0dnsHTMLStyleSheet::CalculateMappedServoDeclarations(void)%0a%0dmozilla::ServoStyleSet::PreTraverseSync(void)%0a%0dmozilla::SVGObserverUtils::InvalidateDirectRenderingObservers(nsIFrame*, unsigned int)%0a%0dInvalidateFrameInternal%0a%0dnsIFrame::InvalidateFrameSubtree(bool)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3875" font-family="Helvetica, Arial, sans-serif" x="1085" y="2351.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3876" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::InterpreterFrame::isGlobalFrame(void)</tspan></text></a><a id="SvgjsA3880" href="data:text/plain,js::jit::JitRealm::getStubCode(unsigned int)%0a%0djs::jit::ICStubCompiler::getStubCode(void)%0a%0dJSStructuredCloneWriter::startWrite(JS::Handle&lt;JS::Value&gt;)%0a%0d[js] onQueryResults%0a%0d[js] _updateResults%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3878" font-family="Helvetica, Arial, sans-serif" x="1085" y="2354.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3879" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::JitRealm::getStubCode(unsigned int)</tspan></text></a><a id="SvgjsA3883" href="data:text/plain,js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] allBrowserPageActions%0a%0dimgLoader::LoadImage page-icon:https://www.joinhoney.com/r/BSAD_US_191202_FirefoxNewTab_CPC_NA_Evergreen_SingleBox_All_All_All_All_GhostChromeN2B ?? utm_source=bsad&amp;utm_medium=dis&amp;utm_campaign=BSAD_US_191202_FirefoxNewTab_CPC_NA_Evergreen_SingleBox_All_All_All_All_GhostChromeN2B&amp;utm_content=GhostChromeN2B&amp;url=https%3A%2F%2Fwww.joinhoney.com%2Fg-blog%2Fthis-app-applies-every-promo-code-on-the-internet-to-your-cart-2b%0a%0dnsImageLoadingContent::LoadImage(nsTSubstring&lt;char16_t&gt; const&amp;, bool, bool, nsImageLoadingContent::ImageLoadType, nsIPrincipal*)%0a%0dmozilla::dom::HTMLImageElement::AfterMaybeChangeAttr(int, nsAtom*, nsAttrValueOrString const&amp;, nsAttrValue const*, nsIPrincipal*, bool, bool)%0a%0dmozilla::dom::HTMLImageElement::AfterSetAttr(int, nsAtom*, nsAttrValue const*, nsAttrValue const*, nsIPrincipal*, bool)%0a%0dmozilla::dom::Element::SetAttrAndNotify(int, nsAtom*, nsAtom*, nsAttrValue const*, nsAttrValue&amp;, nsIPrincipal*, unsigned char, bool, bool, bool, mozilla::dom::Document*, mozAutoDocUpdate const&amp;)%0a%0dmozilla::dom::Element::SetAttr(int, nsAtom*, nsAtom*, nsTSubstring&lt;char16_t&gt; const&amp;, nsIPrincipal*, bool)%0a%0dmozilla::dom::HTMLImageElement_Binding::set_src%0a%0dset HTMLImageElement.src%0a%0d[js] _updateRow%0a%0d[js] _updateResults%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3881" font-family="Helvetica, Arial, sans-serif" x="1085" y="2356.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3882" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)</tspan></text></a><a id="SvgjsA3886" href="data:text/plain,js::NativeDefineProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::PropertyDescriptor&gt;, JS::ObjectOpResult&amp;)%0a%0dNewStandardURI%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dprofiler_tracing_marker(char const*, char const*, JS::ProfilingCategoryPair, TracingKind, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;, mozilla::Maybe&lt;uint64_t&gt; const&amp;)%0a%0dmozilla::PresShell::DoReflow(nsIFrame*, bool, mozilla::OverflowChangedTracker*)%0a%0dReflow chrome://browser/content/browser.xhtml%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3884" font-family="Helvetica, Arial, sans-serif" x="1085" y="2359.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3885" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeDefineProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::PropertyDescriptor&gt;, JS::ObjectOpResult&amp;)</tspan></text></a><a id="SvgjsA3889" href="data:text/plain,RedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::MoveRedLeft(RedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::TreeNode)%0a%0d&lt;style::gecko::wrapper::GeckoElement as style::dom::TElement&gt;::ensure_data%0a%0dMicrosoft::CoreUI::Dispatch::UserAdapter::OnUserDispatch(bool,Microsoft::CoreUI::Dispatch::UserAdapterBase__UserPriority,System::IntPtr &amp;)%0a%0dMicrosoft::CoreUI::Dispatch::UserAdapter_DoWork(Microsoft::CoreUI::Dispatch::UserData *,Microsoft::CoreUI::Dispatch::UserAdapterBase__UserPriority,bool)%0a%0d0x2c887ac7276%0a%0dnsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, mozilla::ReflowOutput&amp;, mozilla::ReflowInput const&amp;, mozilla::WritingMode const&amp;, mozilla::LogicalPoint const&amp;, nsSize const&amp;, nsIFrame::ReflowChildFlags, nsReflowStatus&amp;, nsOverflowContinuationTracker*)%0a%0dnsHTMLScrollFrame::ReflowScrolledFrame(mozilla::ScrollReflowInput*, bool, bool, mozilla::ReflowOutput*)%0a%0dnsHTMLScrollFrame::ReflowContents(mozilla::ScrollReflowInput*, mozilla::ReflowOutput const&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3887" font-family="Helvetica, Arial, sans-serif" x="1085" y="2361.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3888" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">RedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::MoveRedLeft(RedBlackTree&lt;extent_node_t, ExtentTreeSzTrait&gt;::TreeNode)</tspan></text></a><a id="SvgjsA3892" href="data:text/plain,mozilla::AppWindow::GetInterface(nsID const&amp;, void**)%0a%0dnsGlobalWindowInner::GetWebBrowserChrome(void)%0a%0dmozilla::dom::ToolbarProp::GetVisible(mozilla::dom::CallerType, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::BarProp_Binding::get_visible%0a%0dget BarProp.visible%0a%0d[js] getTopWindow%0a%0d[js] onLocationChange%0a%0dXREMain::XRE_main"><text id="SvgjsText3890" font-family="Helvetica, Arial, sans-serif" x="1085" y="2363.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3891" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::AppWindow::GetInterface(nsID const&amp;, void**)</tspan></text></a><a id="SvgjsA3895" href="data:text/plain,mozilla::HashBytes(void const*, uint64_t)%0a%0d[js] isBrowserShowingNotification%0a%0dmozilla::AppWindow::GetInterface(nsID const&amp;, void**)%0a%0dnsGlobalWindowInner::GetWebBrowserChrome(void)%0a%0dmozilla::dom::ToolbarProp::GetVisible(mozilla::dom::CallerType, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::BarProp_Binding::get_visible%0a%0dget BarProp.visible%0a%0d[js] getTopWindow%0a%0d[js] onLocationChange%0a%0dXREMain::XRE_main"><text id="SvgjsText3893" font-family="Helvetica, Arial, sans-serif" x="1085" y="2366.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3894" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::HashBytes(void const*, uint64_t)</tspan></text></a><a id="SvgjsA3898" href="data:text/plain,js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)%0a%0d[js] _mouseleave%0a%0d[js] _mouseleave%0a%0d0x2c887c1ceab%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3896" font-family="Helvetica, Arial, sans-serif" x="1085" y="2368.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3897" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::jit::JitScript::MonitorBytecodeType(JSContext*, JSScript*, unsigned char*, js::StackTypeSet*, JS::Value const&amp;)</tspan></text></a><a id="SvgjsA3901" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] isCustomizing%0a%0d[js] onLocationChange%0a%0d[js] lastBrowserUpdateDate%0a%0d[js] _maybeShowTipForUrl%0a%0dmozilla::HashBytes(void const*, uint64_t)%0a%0d[js] isBrowserShowingNotification%0a%0dmozilla::AppWindow::GetInterface(nsID const&amp;, void**)%0a%0dnsGlobalWindowInner::GetWebBrowserChrome(void)%0a%0dmozilla::dom::ToolbarProp::GetVisible(mozilla::dom::CallerType, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::BarProp_Binding::get_visible%0a%0dget BarProp.visible%0a%0d[js] getTopWindow%0a%0d[js] onLocationChange%0a%0dXREMain::XRE_main"><text id="SvgjsText3899" font-family="Helvetica, Arial, sans-serif" x="1085" y="2372.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3900" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3904" href="data:text/plain,memset()%0a%0darena_dalloc%0a%0dreplace_free%0a%0dProfileBuffer::~ProfileBuffer(void)%0a%0dProfilerBacktraceDestructor::operator()(ProfilerBacktrace*)%0a%0dprofiler_add_text_marker(char const*, nsTSubstring&lt;char&gt; const&amp;, JS::ProfilingCategoryPair, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::Maybe&lt;uint64_t&gt; const&amp;, mozilla::UniquePtr&lt;ProfilerBacktrace, ProfilerBacktraceDestructor&gt;)%0a%0dAutoProfilerTextMarker::~AutoProfilerTextMarker(void)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0djs::InternalBarrierMethods&lt;js::WasmTableObject*&gt;::postBarrier(js::WasmTableObject**, js::WasmTableObject*, js::WasmTableObject*)%0a%0djs::ObjectGroup::allocationSiteGroup(JSContext*, JSScript*, unsigned char*, JSProtoKey, JS::Handle&lt;JSObject*&gt;)%0a%0djs::NewArrayOperation(JSContext*, JS::Handle&lt;JSScript*&gt;, unsigned char*, unsigned int, js::NewObjectKind)%0a%0dInterpret%0a%0d[js] emit%0a%0d[js] _observe%0a%0d[js] bound%0a%0dJS_CallFunctionValue(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::HandleValueArray const&amp;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCWrappedJS method call%0a%0dPrepareAndDispatch%0a%0dSharedStub%0a%0dnsObserverList::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers(nsISupports*, char const*, char16_t const*)%0a%0dnsObserverService::NotifyObservers profiler-started%0a%0dNotifyObservers%0a%0dNotifyProfilerStarted%0a%0dprofiler_start(mozilla::PowerOfTwo&lt;unsigned int&gt;, double, unsigned int, char const**, unsigned int, uint64_t, mozilla::Maybe&lt;double&gt; const&amp;)%0a%0dnsProfiler::StartProfiler(unsigned int, double, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, nsTArray&lt;nsTString&lt;char&gt; &gt; const&amp;, uint64_t, double)%0a%0dXPTC__InvokebyIndex%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0dXPC_WN_CallMethod(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_apply(JSContext*, unsigned int, JS::Value*)%0a%0djs::fun_call(JSContext*, unsigned int, JS::Value*)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInterpret%0a%0djs::RunScript(JSContext*, js::RunState&amp;)%0a%0djs::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0dInternalCall%0a%0djs::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, js::AnyInvokeArgs const&amp;, JS::MutableHandle&lt;JS::Value&gt;, js::CallReason)%0a%0djs::jit::InvokeFunction(JSContext*, JS::Handle&lt;JSObject*&gt;, bool, bool, unsigned int, JS::Value*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::InvokeFromInterpreterStub(JSContext*, js::jit::InterpreterStubExitFrameLayout*)%0a%0d0x2c887ac0e74%0a%0djs::RunScript%0a%0dEventListener.handleEvent%0a%0dEventDispatcher::Dispatch%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3902" font-family="Helvetica, Arial, sans-serif" x="1085" y="2374.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3903" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memset()</tspan></text></a><a id="SvgjsA3907" href="data:text/plain,mozilla::dom::LifecycleAttributeChangedCallback::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)%0a%0dnsNSSCertificate::Release(void)%0a%0dnsBinaryOutputStream::WriteCompoundObject(nsISupports*, nsID const&amp;, bool)%0a%0dmozilla::dom::`anonymous namespace'::PopupAllowedForEvent%0a%0dmozilla::dom::PopupBlocker::GetEventPopupControlState(mozilla::WidgetEvent*, mozilla::dom::Event*)%0a%0dmozilla::EventListenerManager::HandleEventInternal(nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event**, mozilla::dom::EventTarget*, nsEventStatus*, bool)%0a%0dint UpdateModifiers(uint64_t,int64_t)%0a%0dint SYSTHREAD::OnKeyboardEvent(uint64_t,int64_t,bool,unsigned short)%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dcore::slice::{{impl}}::next&lt;u8&gt;%0a%0dencoding_rs::mem::is_ascii%0a%0dmozilla::net::ParentChannelListener::GetInterface(nsID const&amp;, void**)%0a%0dNS_QueryNotificationCallbacks&lt;nsIChannel, nsILoadContext&gt;(nsIChannel*, nsCOMPtr&lt;nsILoadContext&gt;&amp;)%0a%0dNS_CompareLoadInfoAndLoadContext(nsIChannel*)%0a%0dmozilla::net::nsHttpChannel::AsyncOpen(nsIStreamListener*)%0a%0dPLDHashTable::Add(void const*, std::nothrow_t const&amp;)%0a%0dmozilla::net::nsHttp::ResolveAtom(char const*)%0a%0dmozilla::net::nsHttpRequestHead::SetHeader(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::HttpBaseChannel::SetRequestHeader(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::HttpChannelParent::DoAsyncOpen(mozilla::ipc::URIParams const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIReferrerInfo*, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIPrincipal*, unsigned int const&amp;, nsTArray&lt;mozilla::net::RequestHeaderTuple&gt; const&amp;, nsTString&lt;char&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::IPCStream&gt; const&amp;, bool const&amp;, short const&amp;, unsigned int const&amp;, unsigned char const&amp;, bool const&amp;, unsigned int const&amp;, bool const&amp;, uint64_t const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, unsigned int const&amp;, mozilla::Maybe&lt;mozilla::net::LoadInfoArgs&gt; const&amp;, mozilla::Maybe&lt;mozilla::net::nsHttpResponseHead&gt; const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, uint64_t const&amp;, mozilla::Maybe&lt;mozilla::net::CorsPreflightArgs&gt; const&amp;, unsigned int const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, unsigned int const&amp;, uint64_t const&amp;, nsTString&lt;char16_t&gt; const&amp;, uint64_t const&amp;, nsTArray&lt;mozilla::net::PreferredAlternativeDataTypeParams&gt; const&amp;, uint64_t const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;)%0a%0dmozilla::OriginAttributes::CreateSuffix(nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3905" font-family="Helvetica, Arial, sans-serif" x="1085" y="2377.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3906" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::LifecycleAttributeChangedCallback::Call(JSContext*, JS::Handle&lt;JS::Value&gt;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, mozilla::ErrorResult&amp;)</tspan></text></a><a id="SvgjsA3910" href="data:text/plain,JS::WeakCache&lt;JS::GCHashSet&lt;js::ObjectGroupRealm::NewEntry, js::MovableCellHasher&lt;js::ObjectGroupRealm::NewEntry&gt;, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::ObjectGroupRealm::NewEntry::Lookup const&amp;)%0a%0dJS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt;::sweep(void)%0a%0dJS::WeakCache&lt;JS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt; &gt;::sweep(void)%0a%0dIncrementalSweepWeakCacheTask::run(void)%0a%0dmozilla::net::LoadContextInfo::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::LoadContextInfo::Release(void)%0a%0dmozilla::net::CacheStorage::`scalar deleting destructor'(unsigned int)%0a%0dnsBaseContentStream::Release(void)%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3908" font-family="Helvetica, Arial, sans-serif" x="1085" y="2379.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3909" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">JS::WeakCache&lt;JS::GCHashSet&lt;js::ObjectGroupRealm::NewEntry, js::MovableCellHasher&lt;js::ObjectGroupRealm::NewEntry&gt;, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::ObjectGroupRealm::NewEntry::Lookup const&amp;)</tspan></text></a><a id="SvgjsA3913" href="data:text/plain,js::InternalBarrierMethods&lt;JS::Value&gt;::preBarrier(JS::Value const&amp;)%0a%0dSetExistingProperty%0a%0d[js] onSecurityChange%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::ObjectGroupRealm::NewEntry, js::MovableCellHasher&lt;js::ObjectGroupRealm::NewEntry&gt;, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::ObjectGroupRealm::NewEntry::Lookup const&amp;)%0a%0dJS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt;::sweep(void)%0a%0dJS::WeakCache&lt;JS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt; &gt;::sweep(void)%0a%0dIncrementalSweepWeakCacheTask::run(void)%0a%0dmozilla::net::LoadContextInfo::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::LoadContextInfo::Release(void)%0a%0dmozilla::net::CacheStorage::`scalar deleting destructor'(unsigned int)%0a%0dnsBaseContentStream::Release(void)%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3911" font-family="Helvetica, Arial, sans-serif" x="1085" y="2382.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3912" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::InternalBarrierMethods&lt;JS::Value&gt;::preBarrier(JS::Value const&amp;)</tspan></text></a><a id="SvgjsA3916" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dJS_InitializePropertiesFromCompatibleNativeObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3914" font-family="Helvetica, Arial, sans-serif" x="1085" y="2385.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3915" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3919" href="data:text/plain,js::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] NetUtil_newChannel%0a%0d[js] setURI%0a%0d[js] setURI%0a%0d[js] updateIdentity%0a%0djs::InternalBarrierMethods&lt;JS::Value&gt;::preBarrier(JS::Value const&amp;)%0a%0dSetExistingProperty%0a%0d[js] onSecurityChange%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::ObjectGroupRealm::NewEntry, js::MovableCellHasher&lt;js::ObjectGroupRealm::NewEntry&gt;, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::ObjectGroupRealm::NewEntry::Lookup const&amp;)%0a%0dJS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt;::sweep(void)%0a%0dJS::WeakCache&lt;JS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt; &gt;::sweep(void)%0a%0dIncrementalSweepWeakCacheTask::run(void)%0a%0dmozilla::net::LoadContextInfo::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::LoadContextInfo::Release(void)%0a%0dmozilla::net::CacheStorage::`scalar deleting destructor'(unsigned int)%0a%0dnsBaseContentStream::Release(void)%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3917" font-family="Helvetica, Arial, sans-serif" x="1085" y="2388.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3918" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3922" href="data:text/plain,nsTSubstring&lt;char&gt;::Assign(nsTSubstring&lt;char&gt; const&amp;, std::nothrow_t const&amp;)%0a%0dnsTArray_Impl&lt;mozilla::net::ParsedHeaderPair, nsTArrayInfallibleAllocator&gt;::AppendElement&lt;mozilla::net::ParsedHeaderPair, nsTArrayInfallibleAllocator&gt;(mozilla::net::ParsedHeaderPair&amp;&amp;)%0a%0dmozilla::net::ParsedHeaderValueList::ParseNameAndValue(char const*, bool)%0a%0dstd::_Func_impl_no_alloc&lt;`lambda at c:/mozilla-source/mozilla-central/netwerk/protocol/http/nsHttp.cpp:786:19',void,const char *,unsigned int&gt;::_Do_call%0a%0dmozilla::net::Tokenize%0a%0dmozilla::net::ParsedHeaderValueListList::ParsedHeaderValueListList(nsTString&lt;char&gt; const&amp;, bool)%0a%0dmozilla::net::AltSvcMapping::ProcessHeader(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, int, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, nsIInterfaceRequestor*, mozilla::net::nsProxyInfo*, unsigned int, mozilla::OriginAttributes const&amp;)%0a%0dmozilla::net::nsHttpChannel::ProcessAltService(void)%0a%0dmozilla::net::nsHttpChannel::ContinueProcessResponse1(void)%0a%0dPrepareAndDispatch%0a%0dmozilla::layers::WebRenderCommandBuilder::PushImage(nsDisplayItem*, mozilla::layers::ImageContainer*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::SizeComputationInput::InitOffsets(mozilla::WritingMode, int, mozilla::LayoutFrameType, mozilla::SizeComputationInput::ReflowInputFlags, nsMargin const*, nsMargin const*, nsStyleDisplay const*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3920" font-family="Helvetica, Arial, sans-serif" x="1085" y="2390.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3921" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">nsTSubstring&lt;char&gt;::Assign(nsTSubstring&lt;char&gt; const&amp;, std::nothrow_t const&amp;)</tspan></text></a><a id="SvgjsA3925" href="data:text/plain,LossyUTF8ToUTF16(char const*, unsigned int, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsNSSCertificate::GetOrganization(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0d[js] getIdentityData%0a%0d[js] _refreshIdentityIcons%0a%0d[js] refreshIdentityBlock%0a%0dmozilla::net::nsHttpHeaderArray::SetHeader(mozilla::net::nsHttpAtom, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, mozilla::net::nsHttpHeaderArray::HeaderVariety)%0a%0dmozilla::net::nsIOService::NewChannelFromURI(nsIURI*, nsINode*, nsIPrincipal*, nsIPrincipal*, unsigned int, unsigned int, nsIChannel**)%0a%0d[js] NetUtil_newChannel%0a%0djs::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] NetUtil_newChannel%0a%0d[js] setURI%0a%0d[js] setURI%0a%0d[js] updateIdentity%0a%0djs::InternalBarrierMethods&lt;JS::Value&gt;::preBarrier(JS::Value const&amp;)%0a%0dSetExistingProperty%0a%0d[js] onSecurityChange%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::ObjectGroupRealm::NewEntry, js::MovableCellHasher&lt;js::ObjectGroupRealm::NewEntry&gt;, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::ObjectGroupRealm::NewEntry::Lookup const&amp;)%0a%0dJS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt;::sweep(void)%0a%0dJS::WeakCache&lt;JS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt; &gt;::sweep(void)%0a%0dIncrementalSweepWeakCacheTask::run(void)%0a%0dmozilla::net::LoadContextInfo::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::LoadContextInfo::Release(void)%0a%0dmozilla::net::CacheStorage::`scalar deleting destructor'(unsigned int)%0a%0dnsBaseContentStream::Release(void)%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3923" font-family="Helvetica, Arial, sans-serif" x="1085" y="2393.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3924" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">LossyUTF8ToUTF16(char const*, unsigned int, nsTSubstring&lt;char16_t&gt;&amp;)</tspan></text></a><a id="SvgjsA3928" href="data:text/plain,js::AtomizeString(JSContext*, JSString*, js::PinningBehavior)%0a%0dInterpret%0a%0d[js] getIdentityData/&lt;%0a%0d[js] forEach%0a%0d[js] getIdentityData%0a%0dLossyUTF8ToUTF16(char const*, unsigned int, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsNSSCertificate::GetOrganization(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0d[js] getIdentityData%0a%0d[js] _refreshIdentityIcons%0a%0d[js] refreshIdentityBlock%0a%0dmozilla::net::nsHttpHeaderArray::SetHeader(mozilla::net::nsHttpAtom, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, mozilla::net::nsHttpHeaderArray::HeaderVariety)%0a%0dmozilla::net::nsIOService::NewChannelFromURI(nsIURI*, nsINode*, nsIPrincipal*, nsIPrincipal*, unsigned int, unsigned int, nsIChannel**)%0a%0d[js] NetUtil_newChannel%0a%0djs::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] NetUtil_newChannel%0a%0d[js] setURI%0a%0d[js] setURI%0a%0d[js] updateIdentity%0a%0djs::InternalBarrierMethods&lt;JS::Value&gt;::preBarrier(JS::Value const&amp;)%0a%0dSetExistingProperty%0a%0d[js] onSecurityChange%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::ObjectGroupRealm::NewEntry, js::MovableCellHasher&lt;js::ObjectGroupRealm::NewEntry&gt;, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::ObjectGroupRealm::NewEntry::Lookup const&amp;)%0a%0dJS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt;::sweep(void)%0a%0dJS::WeakCache&lt;JS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt; &gt;::sweep(void)%0a%0dIncrementalSweepWeakCacheTask::run(void)%0a%0dmozilla::net::LoadContextInfo::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::LoadContextInfo::Release(void)%0a%0dmozilla::net::CacheStorage::`scalar deleting destructor'(unsigned int)%0a%0dnsBaseContentStream::Release(void)%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3926" font-family="Helvetica, Arial, sans-serif" x="1085" y="2395.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3927" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::AtomizeString(JSContext*, JSString*, js::PinningBehavior)</tspan></text></a><a id="SvgjsA3931" href="data:text/plain,obj_values%0a%0d[js] _refreshPermissionIcons%0a%0djs::AtomizeString(JSContext*, JSString*, js::PinningBehavior)%0a%0dInterpret%0a%0d[js] getIdentityData/&lt;%0a%0d[js] forEach%0a%0d[js] getIdentityData%0a%0dLossyUTF8ToUTF16(char const*, unsigned int, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsNSSCertificate::GetOrganization(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0d[js] getIdentityData%0a%0d[js] _refreshIdentityIcons%0a%0d[js] refreshIdentityBlock%0a%0dmozilla::net::nsHttpHeaderArray::SetHeader(mozilla::net::nsHttpAtom, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, mozilla::net::nsHttpHeaderArray::HeaderVariety)%0a%0dmozilla::net::nsIOService::NewChannelFromURI(nsIURI*, nsINode*, nsIPrincipal*, nsIPrincipal*, unsigned int, unsigned int, nsIChannel**)%0a%0d[js] NetUtil_newChannel%0a%0djs::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] NetUtil_newChannel%0a%0d[js] setURI%0a%0d[js] setURI%0a%0d[js] updateIdentity%0a%0djs::InternalBarrierMethods&lt;JS::Value&gt;::preBarrier(JS::Value const&amp;)%0a%0dSetExistingProperty%0a%0d[js] onSecurityChange%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::ObjectGroupRealm::NewEntry, js::MovableCellHasher&lt;js::ObjectGroupRealm::NewEntry&gt;, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::ObjectGroupRealm::NewEntry::Lookup const&amp;)%0a%0dJS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt;::sweep(void)%0a%0dJS::WeakCache&lt;JS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt; &gt;::sweep(void)%0a%0dIncrementalSweepWeakCacheTask::run(void)%0a%0dmozilla::net::LoadContextInfo::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::LoadContextInfo::Release(void)%0a%0dmozilla::net::CacheStorage::`scalar deleting destructor'(unsigned int)%0a%0dnsBaseContentStream::Release(void)%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3929" font-family="Helvetica, Arial, sans-serif" x="1085" y="2399.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3930" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">obj_values</tspan></text></a><a id="SvgjsA3934" href="data:text/plain,Interpret%0a%0djs::jit::CallNativeSetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;)%0a%0djs::jit::CallNativeGetter(JSContext*, JS::Handle&lt;JSFunction*&gt;, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] update%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dmozilla::dom::BindingJSObjectCreator&lt;mozilla::dom::WindowGlobalParent&gt;::CreateObject(JSContext*, JSClass const*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::WindowGlobalParent*, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent_Binding::Wrap(JSContext*, mozilla::dom::WindowGlobalParent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::WindowGlobalParent::WrapObject(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0d&lt;hashbrown::raw::RawTable&lt;T&gt; as core::ops::drop::Drop&gt;::drop%0a%0dmozilla::ProcessPriorityManager::TabActivityChanged(mozilla::dom::BrowserParent*, bool)%0a%0dmozilla::dom::BrowserHost::Deprioritize(void)%0a%0d[js] deprioritize%0a%0djs::PropertyTree::insertChild(JSContext*, js::Shape*, js::Shape*)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3932" font-family="Helvetica, Arial, sans-serif" x="1085" y="2401.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3933" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a><a id="SvgjsA3937" href="data:text/plain,memcpy()%0a%0dobj_values%0a%0d[js] _refreshPermissionIcons%0a%0djs::AtomizeString(JSContext*, JSString*, js::PinningBehavior)%0a%0dInterpret%0a%0d[js] getIdentityData/&lt;%0a%0d[js] forEach%0a%0d[js] getIdentityData%0a%0dLossyUTF8ToUTF16(char const*, unsigned int, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsNSSCertificate::GetOrganization(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0d[js] getIdentityData%0a%0d[js] _refreshIdentityIcons%0a%0d[js] refreshIdentityBlock%0a%0dmozilla::net::nsHttpHeaderArray::SetHeader(mozilla::net::nsHttpAtom, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, mozilla::net::nsHttpHeaderArray::HeaderVariety)%0a%0dmozilla::net::nsIOService::NewChannelFromURI(nsIURI*, nsINode*, nsIPrincipal*, nsIPrincipal*, unsigned int, unsigned int, nsIChannel**)%0a%0d[js] NetUtil_newChannel%0a%0djs::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] NetUtil_newChannel%0a%0d[js] setURI%0a%0d[js] setURI%0a%0d[js] updateIdentity%0a%0djs::InternalBarrierMethods&lt;JS::Value&gt;::preBarrier(JS::Value const&amp;)%0a%0dSetExistingProperty%0a%0d[js] onSecurityChange%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::ObjectGroupRealm::NewEntry, js::MovableCellHasher&lt;js::ObjectGroupRealm::NewEntry&gt;, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::ObjectGroupRealm::NewEntry::Lookup const&amp;)%0a%0dJS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt;::sweep(void)%0a%0dJS::WeakCache&lt;JS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt; &gt;::sweep(void)%0a%0dIncrementalSweepWeakCacheTask::run(void)%0a%0dmozilla::net::LoadContextInfo::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::LoadContextInfo::Release(void)%0a%0dmozilla::net::CacheStorage::`scalar deleting destructor'(unsigned int)%0a%0dnsBaseContentStream::Release(void)%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3935" font-family="Helvetica, Arial, sans-serif" x="1085" y="2404.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3936" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3940" href="data:text/plain,mozilla::dom::binding_detail::GenericGetter&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0dJS::Zone::getOrCreateUniqueId(js::gc::Cell*, uint64_t*)%0a%0djs::ObjectGroup::lazySingletonGroup(JSContext*, js::ObjectGroup*, JSClass const*, js::TaggedProto)%0a%0dNewObject%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dimgLoader::LoadImage page-icon:https://www.washingtonpost.com/national-security/acting-navy-secretary-resigns-after-insulting-aircraft-carriers-ousted-captain/2020/04/07/263ba574-78f7-11ea-b6ff-597f170df8f8_story.html ?? hpid=hp_hp-top-table-high_modlyout-355pm%3Ahomepage%2Fstory-ans%0a%0dnsBaseChannel::AddRef(void)%0a%0dmozilla::PrioritizableRunnable::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::PutEventInternal(already_AddRefed&lt;nsIRunnable&gt;&amp;&amp;, mozilla::EventQueuePriority, mozilla::ThreadEventQueue&lt;mozilla::PrioritizedEventQueue&gt;::NestedSink*)%0a%0dmozilla::image::ProgressTracker::Notify(mozilla::image::IProgressObserver*)%0a%0dimgRequestProxy::NotifyListener(void)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dnsContentUtils::ContentIsFlattenedTreeDescendantOf(nsINode const*, nsINode const*)%0a%0dmozilla::EventStateManager::ContentRemoved(mozilla::dom::Document*, nsIContent*)%0a%0djs::CheckedUnwrapDynamic(JSObject*, JSContext*, bool)%0a%0d[js] notifyResult%0a%0dcert_storage::{{impl}}::allocate::QueryInterface%0a%0dnet_EnsurePSMInit(void)%0a%0dmozilla::net::nsHttpConnectionMgr::SpeculativeConnect(mozilla::net::nsHttpConnectionInfo*, nsIInterfaceRequestor*, unsigned int, mozilla::net::NullHttpTransaction*)%0a%0d[js] get iconURI%0a%0d[js] startQuery%0a%0djs::CopyInitializerObject%0a%0dInterpret%0a%0d[js] _fetchRemote%0a%0d[js] fetch%0a%0d[js] execute%0a%0dmozilla::image::RasterImage::OptimalImageSizeForDest(mozilla::gfx::SizeTyped&lt;mozilla::gfx::UnknownUnits, double&gt; const&amp;, unsigned int, mozilla::gfx::SamplingFilter, unsigned int)%0a%0dnsLayoutUtils::ComputeImageContainerDrawingParameters(imgIContainer*, nsIFrame*, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;, mozilla::layers::StackingContextHelper const&amp;, unsigned int, mozilla::Maybe&lt;mozilla::SVGImageContext&gt;&amp;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dmozilla::ActiveLayerTracker::IsStyleAnimated(nsDisplayListBuilder*, nsIFrame*, nsCSSPropertyIDSet const&amp;)%0a%0dnsDisplayOpacity::NeedsActiveLayer(nsDisplayListBuilder*, nsIFrame*, bool)%0a%0dnsIFrame::BuildDisplayListForStackingContext(nsDisplayListBuilder*, nsDisplayList*, bool*)%0a%0dhashglobe::table::round_up_to_next%0a%0dhashglobe::table::calculate_offsets%0a%0dhashglobe::table::RawTable&lt;K,V&gt;::raw_bucket_at%0a%0dhashglobe::table::Bucket&lt;K,V,M&gt;::at_index%0a%0dhashglobe::table::Bucket&lt;K,V,M&gt;::new%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dstyle::selector_map::{{impl}}::lookup::{{closure}}&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dnsTSubstring&lt;char&gt;::Assign(char const*, unsigned int, std::nothrow_t const&amp;)%0a%0dmozilla::net::CacheFileOutputStream::EnsureCorrectChunk(bool)%0a%0dmozilla::net::CacheFileOutputStream::Write(char const*, unsigned int, unsigned int*)%0a%0dmozilla::net::nsStreamLoader::OnDataAvailable(nsIRequest*, nsIInputStream*, uint64_t, unsigned int)%0a%0dmozilla::net::CookieSettings::Release(void)%0a%0dmozilla::AntiTrackingCommon::IsFirstPartyStorageAccessGrantedFor(nsIChannel*, nsIURI*, unsigned int*)%0a%0d[js] _ensureInitialized%0a%0dCanAttachNativeGetProp%0a%0djs::jit::GetPropIRGenerator::tryAttachNative(JS::Handle&lt;JSObject*&gt;, js::jit::ObjOperandId, JS::Handle&lt;JS::PropertyKey&gt;)%0a%0d[js] _on_keyup%0a%0dEventDispatcher::Dispatch keyup%0a%0dNS_NewCStringInputStream(nsIInputStream**, nsTString&lt;char&gt;&amp;&amp;)%0a%0dNS_DeserializeObject(nsTSubstring&lt;char&gt; const&amp;, nsISupports**)%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dRequestBehaviour::GetProgressTracker(void)%0a%0dimgRequestProxy::GetImageStatus(unsigned int*)%0a%0dnsImageBoxFrame::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayItem*, nsPoint, unsigned int)%0a%0dstyle::values::generics::grid::{{impl}}::clone&lt;style::values::generics::grid::GenericTrackSize&lt;style::values::computed::length_percentage::LengthPercentage&gt;&gt;%0a%0dstyle::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoPosition&gt;::copy_grid_auto_rows_from%0a%0dnsReflowStatus::UpdateTruncated(mozilla::ReflowInput const&amp;, mozilla::ReflowOutput const&amp;)%0a%0dmozilla::net::HttpChannelParent::DoAsyncOpen(mozilla::ipc::URIParams const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIReferrerInfo*, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIPrincipal*, unsigned int const&amp;, nsTArray&lt;mozilla::net::RequestHeaderTuple&gt; const&amp;, nsTString&lt;char&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::IPCStream&gt; const&amp;, bool const&amp;, short const&amp;, unsigned int const&amp;, unsigned char const&amp;, bool const&amp;, unsigned int const&amp;, bool const&amp;, uint64_t const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, unsigned int const&amp;, mozilla::Maybe&lt;mozilla::net::LoadInfoArgs&gt; const&amp;, mozilla::Maybe&lt;mozilla::net::nsHttpResponseHead&gt; const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, uint64_t const&amp;, mozilla::Maybe&lt;mozilla::net::CorsPreflightArgs&gt; const&amp;, unsigned int const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, unsigned int const&amp;, uint64_t const&amp;, nsTString&lt;char16_t&gt; const&amp;, uint64_t const&amp;, nsTArray&lt;mozilla::net::PreferredAlternativeDataTypeParams&gt; const&amp;, uint64_t const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;)%0a%0dmozilla::OriginAttributes::CreateSuffix(nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3938" font-family="Helvetica, Arial, sans-serif" x="1085" y="2406.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3939" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::dom::binding_detail::GenericGetter&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)</tspan></text></a><a id="SvgjsA3943" href="data:text/plain,0x2c887c1c2a1%0a%0d[js] lazyGetter%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] canWarmTab%0a%0d[js] shouldWarmTab%0a%0d[js] warmupTab%0a%0d[js] warmupTab%0a%0d[js] speculativeConnectOnTabHover%0a%0d[js] _mouseenter%0a%0djs::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0dInterpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText3941" font-family="Helvetica, Arial, sans-serif" x="1085" y="2409.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3942" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">0x2c887c1c2a1</tspan></text></a><a id="SvgjsA3946" href="data:text/plain,XPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)%0a%0d[js] _isPDFViewer%0a%0d[js] FullZoom_onLocationChange%0a%0d[js] isAllowing%0a%0d[js] isDetected%0a%0dmozilla::LoadContext::Release(void)%0a%0dmozilla::net::HttpBaseChannel::GetReferringPage(void)%0a%0dmozilla::net::nsHttpChannel::ProcessResponse(void)%0a%0dPR_GetCurrentThread%0a%0dnsThread::HasPendingEvents(bool*)%0a%0dNS_HasPendingEvents(nsIThread*)%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0djs::Atomize(JSContext*, char const*, uint64_t, js::PinningBehavior, mozilla::Maybe&lt;unsigned int&gt; const&amp;)%0a%0dmozilla::dom::BrowserParent::RecvOnSecurityChange(mozilla::Maybe&lt;mozilla::dom::WebProgressData&gt; const&amp;, mozilla::dom::RequestData const&amp;, unsigned int, mozilla::Maybe&lt;mozilla::dom::WebProgressSecurityChangeData&gt; const&amp;)%0a%0dmozilla::dom::PBrowserParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dmozilla::net::PNeckoParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dPNecko::Msg_RequestContextLoadBegin%0a%0dmozilla::gfx::Matrix4x4TypedFlagged&lt;mozilla::gfx::UnknownUnits, mozilla::gfx::UnknownUnits&gt;::Matrix4x4TypedFlagged&lt;mozilla::gfx::UnknownUnits, mozilla::gfx::UnknownUnits&gt;(mozilla::gfx::Matrix4x4Typed&lt;mozilla::gfx::UnknownUnits, mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dnsIFrame::GetTransformMatrix(nsIFrame const*, nsIFrame**, unsigned int)%0a%0dnsLayoutUtils::GetTransformToAncestor(nsIFrame const*, nsIFrame const*, unsigned int, nsIFrame**)%0a%0dTransformGfxRectToAncestor%0a%0dnsLayoutUtils::TransformFrameRectToAncestor(nsIFrame const*, nsRect const&amp;, nsIFrame const*, bool*, mozilla::Maybe&lt;mozilla::gfx::Matrix4x4TypedFlagged&lt;mozilla::gfx::UnknownUnits, mozilla::gfx::UnknownUnits&gt; &gt;*, bool, nsIFrame**)%0a%0dProcessFrameInternal%0a%0dRetainedDisplayListBuilder::ProcessFrame(nsIFrame*, nsDisplayListBuilder*, nsIFrame*, nsTArray&lt;nsIFrame*&gt;&amp;, bool, nsRect*, AnimatedGeometryRoot**)%0a%0dmozilla::layout::AutoMaybeDisableFontInflation::AutoMaybeDisableFontInflation(nsIFrame*)%0a%0dnsFrame::ShrinkWidthToFit(gfxContext*, int, nsIFrame::ComputeSizeFlags)%0a%0dPLDHashTable::Iterator::Iterator(PLDHashTable*)%0a%0dnsXPCWrappedJS::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::net::nsIOService::ProtocolHasFlags(nsIURI*, unsigned int, bool*)%0a%0dCheckFrozenTypeSet%0a%0djs::FinishCompilation(JSContext*, JS::Handle&lt;JSScript*&gt;, js::CompilerConstraintList*, js::IonCompilationId, bool*)%0a%0dmozilla::net::HttpChannelParent::DoAsyncOpen(mozilla::ipc::URIParams const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIReferrerInfo*, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIPrincipal*, unsigned int const&amp;, nsTArray&lt;mozilla::net::RequestHeaderTuple&gt; const&amp;, nsTString&lt;char&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::IPCStream&gt; const&amp;, bool const&amp;, short const&amp;, unsigned int const&amp;, unsigned char const&amp;, bool const&amp;, unsigned int const&amp;, bool const&amp;, uint64_t const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, unsigned int const&amp;, mozilla::Maybe&lt;mozilla::net::LoadInfoArgs&gt; const&amp;, mozilla::Maybe&lt;mozilla::net::nsHttpResponseHead&gt; const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, uint64_t const&amp;, mozilla::Maybe&lt;mozilla::net::CorsPreflightArgs&gt; const&amp;, unsigned int const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, unsigned int const&amp;, uint64_t const&amp;, nsTString&lt;char16_t&gt; const&amp;, uint64_t const&amp;, nsTArray&lt;mozilla::net::PreferredAlternativeDataTypeParams&gt; const&amp;, uint64_t const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;)%0a%0dmozilla::OriginAttributes::CreateSuffix(nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3944" font-family="Helvetica, Arial, sans-serif" x="1085" y="2411.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3945" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">XPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)</tspan></text></a><a id="SvgjsA3949" href="data:text/plain,js::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] NetUtil_newChannel%0a%0d[js] setURI%0a%0d[js] setURI%0a%0d[js] updateIdentity%0a%0djs::InternalBarrierMethods&lt;JS::Value&gt;::preBarrier(JS::Value const&amp;)%0a%0dSetExistingProperty%0a%0d[js] onSecurityChange%0a%0dJS::WeakCache&lt;JS::GCHashSet&lt;js::ObjectGroupRealm::NewEntry, js::MovableCellHasher&lt;js::ObjectGroupRealm::NewEntry&gt;, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::ObjectGroupRealm::NewEntry::Lookup const&amp;)%0a%0dJS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt;::sweep(void)%0a%0dJS::WeakCache&lt;JS::GCHashMap&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt;, js::MovableCellHasher&lt;js::ObjectGroupRealm::AllocationSiteKey&gt;, js::SystemAllocPolicy, JS::DefaultMapSweepPolicy&lt;js::ObjectGroupRealm::AllocationSiteKey, js::WeakHeapPtr&lt;js::ObjectGroup*&gt; &gt; &gt; &gt;::sweep(void)%0a%0dIncrementalSweepWeakCacheTask::run(void)%0a%0dmozilla::net::LoadContextInfo::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::LoadContextInfo::Release(void)%0a%0dmozilla::net::CacheStorage::`scalar deleting destructor'(unsigned int)%0a%0dnsBaseContentStream::Release(void)%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsWrapperCache::GetWrapper(void)%0a%0dnsViewManager::DispatchEvent%0a%0dXREMain::XRE_main"><text id="SvgjsText3947" font-family="Helvetica, Arial, sans-serif" x="1085" y="2414.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3948" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3952" href="data:text/plain,strlen%0a%0d[js] FullZoom_onLocationChange%0a%0dXPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)%0a%0d[js] _isPDFViewer%0a%0d[js] FullZoom_onLocationChange%0a%0d[js] isAllowing%0a%0d[js] isDetected%0a%0dmozilla::LoadContext::Release(void)%0a%0dmozilla::net::HttpBaseChannel::GetReferringPage(void)%0a%0dmozilla::net::nsHttpChannel::ProcessResponse(void)%0a%0dPR_GetCurrentThread%0a%0dnsThread::HasPendingEvents(bool*)%0a%0dNS_HasPendingEvents(nsIThread*)%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0djs::Atomize(JSContext*, char const*, uint64_t, js::PinningBehavior, mozilla::Maybe&lt;unsigned int&gt; const&amp;)%0a%0dmozilla::dom::BrowserParent::RecvOnSecurityChange(mozilla::Maybe&lt;mozilla::dom::WebProgressData&gt; const&amp;, mozilla::dom::RequestData const&amp;, unsigned int, mozilla::Maybe&lt;mozilla::dom::WebProgressSecurityChangeData&gt; const&amp;)%0a%0dmozilla::dom::PBrowserParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dmozilla::net::PNeckoParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dPNecko::Msg_RequestContextLoadBegin%0a%0dmozilla::gfx::Matrix4x4TypedFlagged&lt;mozilla::gfx::UnknownUnits, mozilla::gfx::UnknownUnits&gt;::Matrix4x4TypedFlagged&lt;mozilla::gfx::UnknownUnits, mozilla::gfx::UnknownUnits&gt;(mozilla::gfx::Matrix4x4Typed&lt;mozilla::gfx::UnknownUnits, mozilla::gfx::UnknownUnits, float&gt; const&amp;)%0a%0dnsIFrame::GetTransformMatrix(nsIFrame const*, nsIFrame**, unsigned int)%0a%0dnsLayoutUtils::GetTransformToAncestor(nsIFrame const*, nsIFrame const*, unsigned int, nsIFrame**)%0a%0dTransformGfxRectToAncestor%0a%0dnsLayoutUtils::TransformFrameRectToAncestor(nsIFrame const*, nsRect const&amp;, nsIFrame const*, bool*, mozilla::Maybe&lt;mozilla::gfx::Matrix4x4TypedFlagged&lt;mozilla::gfx::UnknownUnits, mozilla::gfx::UnknownUnits&gt; &gt;*, bool, nsIFrame**)%0a%0dProcessFrameInternal%0a%0dRetainedDisplayListBuilder::ProcessFrame(nsIFrame*, nsDisplayListBuilder*, nsIFrame*, nsTArray&lt;nsIFrame*&gt;&amp;, bool, nsRect*, AnimatedGeometryRoot**)%0a%0dmozilla::layout::AutoMaybeDisableFontInflation::AutoMaybeDisableFontInflation(nsIFrame*)%0a%0dnsFrame::ShrinkWidthToFit(gfxContext*, int, nsIFrame::ComputeSizeFlags)%0a%0dPLDHashTable::Iterator::Iterator(PLDHashTable*)%0a%0dnsXPCWrappedJS::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::net::nsIOService::ProtocolHasFlags(nsIURI*, unsigned int, bool*)%0a%0dCheckFrozenTypeSet%0a%0djs::FinishCompilation(JSContext*, JS::Handle&lt;JSScript*&gt;, js::CompilerConstraintList*, js::IonCompilationId, bool*)%0a%0dmozilla::net::HttpChannelParent::DoAsyncOpen(mozilla::ipc::URIParams const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIReferrerInfo*, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIPrincipal*, unsigned int const&amp;, nsTArray&lt;mozilla::net::RequestHeaderTuple&gt; const&amp;, nsTString&lt;char&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::IPCStream&gt; const&amp;, bool const&amp;, short const&amp;, unsigned int const&amp;, unsigned char const&amp;, bool const&amp;, unsigned int const&amp;, bool const&amp;, uint64_t const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, unsigned int const&amp;, mozilla::Maybe&lt;mozilla::net::LoadInfoArgs&gt; const&amp;, mozilla::Maybe&lt;mozilla::net::nsHttpResponseHead&gt; const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, uint64_t const&amp;, mozilla::Maybe&lt;mozilla::net::CorsPreflightArgs&gt; const&amp;, unsigned int const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, unsigned int const&amp;, uint64_t const&amp;, nsTString&lt;char16_t&gt; const&amp;, uint64_t const&amp;, nsTArray&lt;mozilla::net::PreferredAlternativeDataTypeParams&gt; const&amp;, uint64_t const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;)%0a%0dmozilla::OriginAttributes::CreateSuffix(nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3950" font-family="Helvetica, Arial, sans-serif" x="1085" y="2416.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3951" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">strlen</tspan></text></a><a id="SvgjsA3955" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mouseout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::ipc::ReadIPDLParam&lt;mozilla::layers::APZEventResult&gt;%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dmozilla::SVGObserverUtils::GetAndObserveMasks(nsIFrame*, nsTArray&lt;nsSVGMaskFrame*&gt;*)%0a%0dmozilla::SchedulerGroup::EventTargetFor(mozilla::TaskCategory)%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::tokenizer::Tokenizer::is_eof%0a%0dcssparser::tokenizer::Tokenizer::next_byte%0a%0dcssparser::parser::Parser::expect_exhausted%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcore::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dstyle::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3953" font-family="Helvetica, Arial, sans-serif" x="1085" y="2418.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3954" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3958" href="data:text/plain,EnumerateNativeProperties%0a%0dSnapshot%0a%0dStr%0a%0dmozilla::dom::BarProp_Binding::get_visible%0a%0dget BarProp.visible%0a%0d[js] getTopWindow%0a%0d[js] onLocationChange%0a%0dXREMain::XRE_main"><text id="SvgjsText3956" font-family="Helvetica, Arial, sans-serif" x="1085" y="2421.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3957" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">EnumerateNativeProperties</tspan></text></a><a id="SvgjsA3961" href="data:text/plain,js::NativeObject::lookupPure(JS::PropertyKey)%0a%0djs::LookupOwnPropertyPure(JSContext*, JSObject*, JS::PropertyKey, JS::PropertyResult*, bool*)%0a%0djs::LookupPropertyPure(JSContext*, JSObject*, JS::PropertyKey, JSObject**, JS::PropertyResult*)%0a%0dCanAttachNativeGetProp%0a%0djs::jit::GetPropIRGenerator::tryAttachNative(JS::Handle&lt;JSObject*&gt;, js::jit::ObjOperandId, JS::Handle&lt;JS::PropertyKey&gt;)%0a%0d[js] _on_keyup%0a%0dEventDispatcher::Dispatch keyup%0a%0dNS_NewCStringInputStream(nsIInputStream**, nsTString&lt;char&gt;&amp;&amp;)%0a%0dNS_DeserializeObject(nsTSubstring&lt;char&gt; const&amp;, nsISupports**)%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dRequestBehaviour::GetProgressTracker(void)%0a%0dimgRequestProxy::GetImageStatus(unsigned int*)%0a%0dnsImageBoxFrame::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayItem*, nsPoint, unsigned int)%0a%0dstyle::values::generics::grid::{{impl}}::clone&lt;style::values::generics::grid::GenericTrackSize&lt;style::values::computed::length_percentage::LengthPercentage&gt;&gt;%0a%0dstyle::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoPosition&gt;::copy_grid_auto_rows_from%0a%0dnsReflowStatus::UpdateTruncated(mozilla::ReflowInput const&amp;, mozilla::ReflowOutput const&amp;)%0a%0dmozilla::net::HttpChannelParent::DoAsyncOpen(mozilla::ipc::URIParams const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIReferrerInfo*, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIPrincipal*, unsigned int const&amp;, nsTArray&lt;mozilla::net::RequestHeaderTuple&gt; const&amp;, nsTString&lt;char&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::IPCStream&gt; const&amp;, bool const&amp;, short const&amp;, unsigned int const&amp;, unsigned char const&amp;, bool const&amp;, unsigned int const&amp;, bool const&amp;, uint64_t const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, unsigned int const&amp;, mozilla::Maybe&lt;mozilla::net::LoadInfoArgs&gt; const&amp;, mozilla::Maybe&lt;mozilla::net::nsHttpResponseHead&gt; const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, uint64_t const&amp;, mozilla::Maybe&lt;mozilla::net::CorsPreflightArgs&gt; const&amp;, unsigned int const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, unsigned int const&amp;, uint64_t const&amp;, nsTString&lt;char16_t&gt; const&amp;, uint64_t const&amp;, nsTArray&lt;mozilla::net::PreferredAlternativeDataTypeParams&gt; const&amp;, uint64_t const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;)%0a%0dmozilla::OriginAttributes::CreateSuffix(nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3959" font-family="Helvetica, Arial, sans-serif" x="1085" y="2423.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3960" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeObject::lookupPure(JS::PropertyKey)</tspan></text></a><a id="SvgjsA3964" href="data:text/plain,js::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0djs::GlobalObject::resolveConstructor(JSContext*, JS::Handle&lt;js::GlobalObject*&gt;, JSProtoKey, js::GlobalObject::IfClassIsDisabled)%0a%0dGetUnclonedValue%0a%0dJSRuntime::createLazySelfHostedFunctionClone(JSContext*, JS::Handle&lt;js::PropertyName*&gt;, JS::Handle&lt;JSAtom*&gt;, unsigned int, JS::Handle&lt;JSObject*&gt;, js::NewObjectKind, JS::MutableHandle&lt;JSFunction*&gt;)%0a%0djs::GlobalObject::getSelfHostedFunction(JSContext*, JS::Handle&lt;js::GlobalObject*&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::Handle&lt;JSAtom*&gt;, unsigned int, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dJS::NewFunctionFromSpec(JSContext*, JSFunctionSpec const*, JS::Handle&lt;JS::PropertyKey&gt;)%0a%0dCProcessActivator::ActivateByContext(ActivationPropertiesIn*, IUnknown*, IActivationPropertiesIn*, IActivationPropertiesOut**, HRESULT (CProcessActivator::*)(unsigned long, IUnknown*, ActivationPropertiesIn*, IActivationPropertiesIn*, IActivationPropertiesOut**))%0a%0dCProcessActivator::CreateInstance(IUnknown*, IActivationPropertiesIn*, IActivationPropertiesOut**)%0a%0dCClientContextActivator::CreateInstance(IUnknown*, IActivationPropertiesIn*, IActivationPropertiesOut**)%0a%0dActivationPropertiesIn::DelegateCreateInstance(IUnknown*, IActivationPropertiesOut**)%0a%0dICoCreateInstanceEx(_GUID const&amp;, IUnknown*, unsigned long, _COSERVERINFO*, unsigned long, unsigned long, tagMULTI_QI*, ActivationPropertiesIn*)%0a%0d0x7ff9f4dcee07%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3962" font-family="Helvetica, Arial, sans-serif" x="1085" y="2427.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3963" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)</tspan></text></a><a id="SvgjsA3967" href="data:text/plain,js::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::dom::L10nKey::ToObjectInternal(JSContext*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dShouldLoadCachedImage%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dimgLoader::LoadImage page-icon:https://www.cnn.com/2020/02/24/us/kobe-bryant-memorial-monday-staples-center/index.html%0a%0dnsTSubstring&lt;char&gt;::Append(char const*, unsigned int, std::nothrow_t const&amp;)%0a%0dT_EscapeURL&lt;nsTSubstring&lt;char&gt; &gt;%0a%0dNS_EscapeURLSpan(mozilla::Span&lt;char const, -1&gt;, unsigned int, nsTSubstring&lt;char&gt;&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3965" font-family="Helvetica, Arial, sans-serif" x="1085" y="2429.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3966" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)</tspan></text></a><a id="SvgjsA3970" href="data:text/plain,JS::WeakCache&lt;JS::GCHashSet&lt;js::InitialShapeEntry, js::InitialShapeEntry, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::InitialShapeEntry::Lookup const&amp;)%0a%0dmozilla::net::nsStandardURL::Init(unsigned int, int, nsTSubstring&lt;char&gt; const&amp;, char const*, nsIURI*)%0a%0d[js] _getUrlMetaData%0a%0d[js] shouldLoadURIInBrowser%0a%0dcore::iter::{{impl}}::eq&lt;(),()&gt;%0a%0dcore::iter::traits::iterator::Iterator::all&lt;core::iter::adapters::chain::Chain&lt;core::iter::sources::Once&lt;selectors::parser::Component&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;, mut selectors::parser::SelectorIter&lt;style::gecko::selector_parser::SelectorImpl&gt;*&gt;,closure-0&gt;%0a%0dNtUserCallHwndLockSafe%0a%0dint64_t ImeSetContextHandler(struct tagIMEUI *,unsigned int,uint64_t,int64_t)%0a%0dmozilla::widget::IMEHandler::AssociateIMEContext(nsWindowBase*, bool)%0a%0dnsFocusManager::Blur(nsPIDOMWindowOuter*, nsPIDOMWindowOuter*, bool, bool, nsIContent*)%0a%0dhashglobe::hash_map::HashMap&lt;style::gecko_string_cache::Atom*, (), core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;::with_hasher&lt;style::gecko_string_cache::Atom*,(),core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0d&lt;hashglobe::hash_map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default%0a%0d&lt;hashglobe::hash_set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default%0a%0dstyle::custom_properties::CustomPropertiesBuilder::new%0a%0dstyle::properties::cascade::apply_declarations%0a%0dhashglobe::hash_map::search_hashed&lt;style::gecko_string_cache::Atom,smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;,hashglobe::table::RawTable&lt;style::gecko_string_cache::Atom, smallvec::SmallVec&lt;[style::invalidation::element::invalidation_map::Dependency; 1]&gt;&gt;*,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::Dependency&gt;::lookup&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dmemcpy()%0a%0dnsFontCache::GetMetricsFor(nsFont const&amp;, nsFontMetrics::Params const&amp;)%0a%0dnsIContent::AddRef(void)%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dnsIXPConnect::XPConnect(void)%0a%0dXPCCallContext::XPCCallContext(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, JS::Value*, JS::Value*)%0a%0dXPC_WN_GetterSetter(JSContext*, unsigned int, JS::Value*)%0a%0dRedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::Remove(RedBlackTree&lt;arena_chunk_map_t, ArenaRunTreeTrait&gt;::TreeNode)%0a%0d[js] onQueryResults%0a%0djs::jit::BaselineCodeGen&lt;js::jit::BaselineCompilerHandler&gt;::emit_CheckIsObj(void)%0a%0djs::jit::BaselineCompiler::emitBody(void)%0a%0d[js] _getUrlMetaData%0a%0d[js] _formatURL%0a%0d[js] update%0a%0d[js] formatValue%0a%0d[js] onQueryResults%0a%0d[js] receiveResults%0a%0d[js] add%0a%0dcore::ptr::{{impl}}::add&lt;u16&gt;%0a%0dencoding_rs::mem::convert_latin1_to_utf16%0a%0dnsstring::conversions::&lt;impl nsstring::nsAString&gt;::fallible_append_latin1_impl%0a%0dnsTextToSubURI::convertURItoUnicode(nsTString&lt;char&gt; const&amp;, nsTString&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsTextToSubURI::UnEscapeURIForUI(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dnsIFrame::GetCompositorHitTestArea(nsDisplayListBuilder*)%0a%0dnsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(nsIFrame*, nsDisplayList*, bool)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dAddressRadixTree&lt;44&gt;::Get(void*)%0a%0dmozilla::net::HttpChannelParent::~HttpChannelParent(void)%0a%0dmozilla::net::HttpChannelParent::`vector deleting destructor'(unsigned int)%0a%0dmozilla::dom::Document::DocAddSizeOfExcludingThis(nsWindowSizes&amp;)%0a%0dmozilla::image::VectorImage::SizeOfSourceWithComputedFallback(mozilla::SizeOfState&amp;)%0a%0dimgRequest::UpdateCacheEntrySize(void)%0a%0dimgRequest::OnStopRequest(nsIRequest*, nsresult)%0a%0dmemset()%0a%0dnsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;::~nsPresArena&lt;32768, mozilla::DisplayListArenaObjectId, 90&gt;(void)%0a%0dmozilla::DisplayItemClip::MayIntersect(nsRect const&amp;)%0a%0dnsDisplayList::HitTest(nsDisplayListBuilder*, nsRect const&amp;, nsDisplayItem::HitTestState*, nsTArray&lt;nsIFrame*&gt;*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3968" font-family="Helvetica, Arial, sans-serif" x="1085" y="2432.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3969" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">JS::WeakCache&lt;JS::GCHashSet&lt;js::InitialShapeEntry, js::InitialShapeEntry, js::SystemAllocPolicy&gt; &gt;::lookupForAdd(js::InitialShapeEntry::Lookup const&amp;)</tspan></text></a><a id="SvgjsA3973" href="data:text/plain,js::CallGetter(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] ssi_onTabSelect%0a%0d[js] ssi_handleEvent%0a%0dmozilla::dom::PromiseNativeHandler_Binding::Wrap(JSContext*, mozilla::dom::PromiseNativeHandler*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::Promise::AppendNativeHandler(mozilla::dom::PromiseNativeHandler*)%0a%0dmozilla::dom::DOMLocalization::TranslateElements(mozilla::dom::Sequence&lt;mozilla::OwningNonNull&lt;mozilla::dom::Element&gt; &gt; const&amp;, nsXULPrototypeDocument*, mozilla::ErrorResult&amp;)%0a%0djs::NativeObject::addDataPropertyInternal(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, unsigned int, unsigned int, js::ShapeTable*, js::ShapeTable::Entry*, js::AutoKeepShapeCaches const&amp;)%0a%0dmozilla::dom::L10nKey::ToObjectInternal(JSContext*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dShouldLoadCachedImage%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dimgLoader::LoadImage page-icon:https://www.cnn.com/2020/02/24/us/kobe-bryant-memorial-monday-staples-center/index.html%0a%0dnsTSubstring&lt;char&gt;::Append(char const*, unsigned int, std::nothrow_t const&amp;)%0a%0dT_EscapeURL&lt;nsTSubstring&lt;char&gt; &gt;%0a%0dNS_EscapeURLSpan(mozilla::Span&lt;char const, -1&gt;, unsigned int, nsTSubstring&lt;char&gt;&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3971" font-family="Helvetica, Arial, sans-serif" x="1085" y="2434.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3972" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::CallGetter(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3976" href="data:text/plain,js::ContextChecks::check(js::AbstractFramePtr, int)%0a%0djs::CallObject::create(JSContext*, js::AbstractFramePtr)%0a%0darena_t::MallocSmall(uint64_t, bool)%0a%0dmozilla::detail::RunnableFunction&lt;`lambda at c:/mozilla-source/mozilla-central/netwerk/url-classifier/AsyncUrlChannelClassifier.cpp:819:13'&gt;::Run%0a%0dmozilla::ipc::ProcessLink::SendMessage(IPC::Message*)%0a%0dIPC::Message::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*)%0a%0dmozilla::net::PHttpChannelParent::SendNotifyClassificationFlags(unsigned int const&amp;, bool const&amp;)%0a%0dPHttpChannel::Msg_NotifyClassificationFlags%0a%0dmozilla::net::HttpChannelParent::NotifyClassificationFlags(unsigned int, bool)%0a%0dmozilla::net::UrlClassifierCommon::AnnotateChannel(nsIChannel*, unsigned int, unsigned int)%0a%0dselectors::matching::matches_complex_selector_internal%0a%0dstyle::stylist::{{impl}}::match_revalidation_selectors::{{closure}}&lt;style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::stylist::RevalidationSelectorAndHashes&gt;::lookup&lt;style::stylist::RevalidationSelectorAndHashes,style::gecko::wrapper::GeckoElement,closure-1&gt;%0a%0dstyle::stylist::Stylist::match_revalidation_selectors%0a%0dstyle::sharing::{{impl}}::revalidation_match_results::{{closure}}&lt;style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dcore::option::Option&lt;smallbitvec::SmallBitVec&gt;::get_or_insert_with&lt;smallbitvec::SmallBitVec,closure-0&gt;%0a%0dstyle::sharing::ValidationData::revalidation_match_results&lt;style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dstyle::sharing::StyleSharingTarget&lt;E&gt;::revalidation_match_results%0a%0dstyle::sharing::checks::revalidate&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::sharing::StyleSharingCache&lt;E&gt;::test_candidate%0a%0dstyle::sharing::{{impl}}::share_style_if_possible::{{closure}}&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0duluru::LRUCache&lt;A&gt;::lookup%0a%0dstyle::sharing::StyleSharingCache&lt;E&gt;::share_style_if_possible%0a%0dstyle::sharing::StyleSharingTarget&lt;E&gt;::share_style_if_possible%0a%0dstyle::traversal::compute_style%0a%0djs::SetObject::clear(JSContext*, unsigned int, JS::Value*)%0a%0d[js] onPaint%0a%0d[js] onQueryResults%0a%0d[js] _updateResults%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3974" font-family="Helvetica, Arial, sans-serif" x="1085" y="2438.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3975" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::ContextChecks::check(js::AbstractFramePtr, int)</tspan></text></a><a id="SvgjsA3979" href="data:text/plain,SandboxPrivate::GetGlobalJSObjectPreserveColor(void)%0a%0dmozilla::dom::CallbackObject::CallSetup::CallSetup(mozilla::dom::CallbackObject*, mozilla::ErrorResult&amp;, char const*, mozilla::dom::CallbackObject::ExceptionHandling, JS::Realm*, bool)%0a%0d[js] _finishedPermitUnload%0a%0d[js] applyChanges%0a%0d[js] from%0a%0d[js] from%0a%0dnsDisplayListBuilder::WeakFrameRegion::Add&lt;nsRect&gt;(nsIFrame*, nsRect const&amp;)%0a%0dgfxFont::GetOrCreateGlyphExtents(int)%0a%0dgfxTextRun::FetchGlyphExtents(mozilla::gfx::DrawTarget*)%0a%0dgfxFontGroup::MakeTextRun(unsigned char const*, unsigned int, gfxTextRunFactory::Parameters const*, mozilla::gfx::ShapedTextFlags, nsTextFrameUtils::Flags, gfxMissingFontRecorder*)%0a%0dBuildTextRunsScanner::ScanFrame(nsIFrame*)%0a%0dBuildTextRunsScanner::ScanFrame(nsIFrame*)%0a%0dnsTextFrame::EnsureTextRun(nsTextFrame::TextRunType, mozilla::gfx::DrawTarget*, nsIFrame*, nsLineList_iterator const*, unsigned int*)%0a%0d[js] _onResultRow%0a%0dmozilla::net::LoadInfo::~LoadInfo(void)%0a%0dmozilla::net::LoadInfo::Release(void)%0a%0dShouldLoadCachedImage%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dimgLoader::LoadImage page-icon:https://www.cnn.com/2020/02/24/us/kobe-bryant-memorial-monday-staples-center/index.html%0a%0dnsTSubstring&lt;char&gt;::Append(char const*, unsigned int, std::nothrow_t const&amp;)%0a%0dT_EscapeURL&lt;nsTSubstring&lt;char&gt; &gt;%0a%0dNS_EscapeURLSpan(mozilla::Span&lt;char const, -1&gt;, unsigned int, nsTSubstring&lt;char&gt;&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3977" font-family="Helvetica, Arial, sans-serif" x="1085" y="2442.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3978" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">SandboxPrivate::GetGlobalJSObjectPreserveColor(void)</tspan></text></a><a id="SvgjsA3982" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dJS_InitializePropertiesFromCompatibleNativeObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dmozilla::dom::GetPerInterfaceObjectHandle(JSContext*, uint64_t, void (*)(JSContext*, JS::Handle&lt;JSObject*&gt;, mozilla::dom::ProtoAndIfaceCache&amp;, bool), bool)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dJS::GetObjectRealmOrNull(JSObject*)%0a%0dxpc::Scriptability::Get(JSObject*)%0a%0dNS_GetDataType%0a%0dmozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(mozilla::WidgetEvent const*)%0a%0dmozilla::EventStateManager::GetWrapperByEventID(mozilla::WidgetMouseEvent*)%0a%0dmozilla::EventStateManager::NotifyMouseOut(mozilla::WidgetMouseEvent*, nsIContent*)%0a%0dmozilla::WidgetPointerEvent::WidgetPointerEvent(mozilla::WidgetMouseEvent const&amp;)%0a%0dmozilla::PointerEventHandler::DispatchPointerFromMouseOrTouch(mozilla::PresShell*, nsIFrame*, nsIContent*, mozilla::WidgetGUIEvent*, bool, nsEventStatus*, nsIContent**)%0a%0dmozilla::nsImageRenderer::ComputeIntrinsicSize(void)%0a%0dDescendIntoChild%0a%0dnsNativeThemeWin::ThemeSupportsWidget(nsPresContext*, nsIFrame*, mozilla::StyleAppearance)%0a%0dnsIFrame::BuildDisplayListForChild(nsDisplayListBuilder*, nsIFrame*, nsDisplayListSet const&amp;, unsigned int)%0a%0dmozilla::StaticPrefs::MaybeInitOncePrefs(void)%0a%0dmozilla::dom::TouchEvent::PrefEnabled(nsIDocShell*)%0a%0dmozilla::WidgetEvent::IsUsingCoordinates(void)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::widget::ModifierKeyState::ModifierKeyState(void)%0a%0dmozilla::widget::WindowHook::Notify(HWND__*, unsigned int, uint64_t, int64_t, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::ExternalHandlerProcessMessage(unsigned int, uint64_t&amp;, int64_t&amp;, mozilla::widget::MSGResult&amp;)%0a%0dnsWindow::WindowProcInternal(HWND__*, unsigned int, uint64_t, int64_t)%0a%0dmozilla::ipc::MessageChannel::NotifyGeckoEventDispatch(void)%0a%0dnsAppShell::ProcessNextNativeEvent(bool)%0a%0dJS::ClearKeptObjects(JSContext*)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::~AsyncApplyFilters(void)%0a%0dmozilla::net::nsAsyncResolveRequest::AsyncApplyFilters::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::nsAsyncResolveRequest::~nsAsyncResolveRequest(void)%0a%0dmozilla::net::nsAsyncResolveRequest::Release(void)%0a%0dmozilla::net::ExecuteCallback::Run(void)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dnsUrlClassifierDBService::Classify(nsIPrincipal*, nsIEventTarget*, nsIURIClassifierCallback*, bool*)%0a%0dmozilla::xpcom::StaticComponents::LookupByContractID(nsTSubstring&lt;char&gt; const&amp;)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dmozilla::net::HttpBaseChannel::GetURI(nsIURI**)%0a%0dmozilla::net::nsChannelClassifier::StartInternal(void)%0a%0dnsInputStreamPump::Create(nsInputStreamPump**, nsIInputStream*, unsigned int, unsigned int, bool, nsIEventTarget*)%0a%0dmozilla::net::nsHttpTransaction::AsyncRead(nsIStreamListener*, nsIRequest**)%0a%0dmozilla::net::nsHttpConnectionMgr::EnsureSocketThreadTarget(void)%0a%0dmozilla::net::HttpTrafficAnalyzer::CreateTrafficCategory(bool, bool, bool, mozilla::net::HttpTrafficAnalyzer::ClassOfService, mozilla::net::HttpTrafficAnalyzer::TrackingClassification)%0a%0dmozilla::net::nsHttpChannel::CreateTrafficCategory(void)%0a%0dmozilla::net::HttpBaseChannel::GetThirdPartyFlags(unsigned int*)%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dmozilla::detail::nsTStringRepr&lt;char&gt;::FindChar(char, unsigned int)%0a%0dmozilla::net::CacheEntry::HashingKey(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::net::CacheStorageService::AddStorageEntry(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool, bool, bool, bool, mozilla::net::CacheEntryHandle**)%0a%0dstd::_Func_impl_no_alloc&lt;std::_Binder&lt;std::_Unforced, nsresult (nsMultiMixedConv::*)(mozilla::TokenizerBase&lt;char&gt;::Token const&amp;), nsMultiMixedConv*, std::_Ph&lt;1&gt; const&amp;&gt;, nsresult, mozilla::TokenizerBase&lt;char&gt;::Token const&amp;, mozilla::IncrementalTokenizer&amp;&gt;::_Delete_this(bool)%0a%0dmozilla::net::CacheStorageService::GetCacheIndexEntryAttrs(mozilla::net::CacheStorage const*, nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, bool*, unsigned int*)%0a%0dmozilla::dom::URLParams::Serialize(nsTSubstring&lt;char16_t&gt;&amp;)%0a%0dmozilla::net::CacheFileUtils::AppendKeyPrefix(nsILoadContextInfo*, nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::TokenizerBase&lt;char&gt;::Parse(mozilla::TokenizerBase&lt;char&gt;::Token&amp;)%0a%0dmozilla::net::GetLoadContextInfo(nsIChannel*)%0a%0dmozilla::dom::binding_detail::GenericMethod&lt;mozilla::dom::binding_detail::NormalThisPolicy, mozilla::dom::binding_detail::ThrowExceptions&gt;(JSContext*, unsigned int, JS::Value*)%0a%0djs::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3980" font-family="Helvetica, Arial, sans-serif" x="1085" y="2444.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3981" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3985" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mouseout%0a%0dmozilla::EventStateManager::PreHandleEvent(nsPresContext*, mozilla::WidgetEvent*, nsIFrame*, nsIContent*, nsEventStatus*, nsIContent*)%0a%0dmozilla::ipc::ReadIPDLParam&lt;mozilla::layers::APZEventResult&gt;%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dmozilla::SVGObserverUtils::GetAndObserveMasks(nsIFrame*, nsTArray&lt;nsSVGMaskFrame*&gt;*)%0a%0dmozilla::SchedulerGroup::EventTargetFor(mozilla::TaskCategory)%0a%0dcore::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once%0a%0dcssparser::tokenizer::Tokenizer::is_eof%0a%0dcssparser::tokenizer::Tokenizer::next_byte%0a%0dcssparser::parser::Parser::expect_exhausted%0a%0dcssparser::parser::Parser::parse_entirely&lt;closure-0,(),style_traits::StyleParseErrorKind&gt;%0a%0dcore::ptr::swap_nonoverlapping_one&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dcore::mem::replace&lt;core::option::Option&lt;std::sync::mutex::Mutex&lt;thread_local::thread_id::ThreadIdManager&gt;&gt;&gt;%0a%0dstyle::rule_collector::RuleCollector&lt;E,F&gt;::collect_stylist_rules%0a%0dcore::option::Option&lt;style::gecko::wrapper::GeckoElement&gt;::expect&lt;style::gecko::wrapper::GeckoElement&gt;%0a%0dstyle::driver::traverse_dom%0a%0dnsGlobalWindowInner::GetGlobalJSObject(void)%0a%0dmozilla::dom::MouseEvent_Binding::Wrap(JSContext*, mozilla::dom::MouseEvent*, nsWrapperCache*, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dEventDispatcher::Dispatch mouseout%0a%0dSystemTimeToFileTime%0a%0dnsBox::GetXULBorder(nsMargin&amp;)%0a%0dnsDisplayTransform::ShouldPrerenderTransformedContent(nsDisplayListBuilder*, nsIFrame*, nsRect*)%0a%0dEnqueuePromiseReactionJob%0a%0dPerformPromiseThenWithReaction%0a%0dPerformPromiseThen%0a%0d[js] observe%0a%0dnsObserverService::NotifyObservers perm-changed%0a%0dPickle::ReadUInt32(PickleIterator*, unsigned int*)%0a%0dmozilla::net::nsHttpChannel::WaitingForTailUnblock(void)%0a%0dmozilla::net::nsHttpChannel::Connect(void)%0a%0dnsTArray_Impl&lt;mozilla::net::nsHttpHeaderArray::nsEntry, nsTArrayInfallibleAllocator&gt;::AppendElements&lt;nsTArrayInfallibleAllocator&gt;(uint64_t)%0a%0dSetLengthProperty%0a%0djs::array_unshift(JSContext*, unsigned int, JS::Value*)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3983" font-family="Helvetica, Arial, sans-serif" x="1085" y="2447.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3984" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA3988" href="data:text/plain,js::InternalBarrierMethods&lt;js::WasmInstanceObject*&gt;::readBarrier(js::WasmInstanceObject*)%0a%0d[js] handleEvent%0a%0d[js] updateButton%0a%0djs::jit::IonBuilder::newPendingLoopHeader(js::jit::MBasicBlock*, unsigned char*, bool)%0a%0d0x2c887ac7276%0a%0dnsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, mozilla::ReflowOutput&amp;, mozilla::ReflowInput const&amp;, mozilla::WritingMode const&amp;, mozilla::LogicalPoint const&amp;, nsSize const&amp;, nsIFrame::ReflowChildFlags, nsReflowStatus&amp;, nsOverflowContinuationTracker*)%0a%0dnsHTMLScrollFrame::ReflowScrolledFrame(mozilla::ScrollReflowInput*, bool, bool, mozilla::ReflowOutput*)%0a%0dnsHTMLScrollFrame::ReflowContents(mozilla::ScrollReflowInput*, mozilla::ReflowOutput const&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3986" font-family="Helvetica, Arial, sans-serif" x="1085" y="2449.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3987" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::InternalBarrierMethods&lt;js::WasmInstanceObject*&gt;::readBarrier(js::WasmInstanceObject*)</tspan></text></a><a id="SvgjsA3991" href="data:text/plain,NtAllocateVirtualMemory%0a%0dVirtualAlloc%0a%0darena_t::SplitRun(arena_run_t*, uint64_t, bool, bool)%0a%0darena_t::AllocRun(uint64_t, bool, bool)%0a%0darena_t::GetNonFullBinRun(arena_bin_t*)%0a%0dstrlen%0a%0dPL_strncasestr%0a%0d_local_stdio_printf_options%0a%0dSprintfLiteral&lt;2048&gt;(char (&amp;)[2048], char const*, ...)%0a%0dmozilla::net::nsHttpChannel::ContinueOnStopRequest(nsresult, bool, bool)%0a%0dnsNSSSocketInfo::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::net::nsStandardURL::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::ipc::MessageChannel::MaybeHandleError(mozilla::ipc::HasResultCodes::Result, IPC::Message const&amp;, char const*)%0a%0dDefineDataPropertyById%0a%0dmozilla::dom::ReceiveMessageArgument::ToObjectInternal(JSContext*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dxpc::XrayTraits::getExpandoObject(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::MutableHandle&lt;JSObject*&gt;)%0a%0dxpc::XrayTraits::resolveOwnProperty(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::PropertyDescriptor&gt;)%0a%0dxpc::DOMXrayTraits::resolveOwnProperty(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::PropertyDescriptor&gt;)%0a%0dxpc::XrayWrapper&lt;js::CrossCompartmentWrapper, xpc::DOMXrayTraits&gt;::getOwnPropertyDescriptor(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::PropertyDescriptor&gt;)%0a%0djs::BaseProxyHandler::hasOwn(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, bool*)%0a%0djs::Proxy::get(JSContext*, JS::Handle&lt;JSObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::GetProperty(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;js::PropertyName*&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] getEntriesByName%0a%0d[js] getMostRecentAbsMarkStartByName%0a%0d[js] setLoadTriggerInfo%0a%0d[js] saveSessionPerfData%0a%0d[js] onAction%0a%0djs::Atomize(JSContext*, char const*, uint64_t, js::PinningBehavior, mozilla::Maybe&lt;unsigned int&gt; const&amp;)%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dcore::ptr::write_unaligned&lt;usize&gt;%0a%0dpeek_poke::write_verbatim&lt;usize&gt;%0a%0dpeek_poke::poke_into_vec%0a%0dmozilla::EventDispatcher::Dispatch(nsISupports*, nsPresContext*, mozilla::WidgetEvent*, mozilla::dom::Event*, nsEventStatus*, mozilla::EventDispatchingCallback*, nsTArray&lt;mozilla::dom::EventTarget*&gt;*)%0a%0dmozilla::layers::FocusTarget::FocusTarget(mozilla::PresShell*, uint64_t)%0a%0dmozilla::PresShell::Paint(nsView*, nsRegion const&amp;, mozilla::PaintFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_add%0a%0dservo_arc::RawOffsetArc&lt;style::gecko_bindings::structs::root::mozilla::GeckoSVG&gt;::with_arc&lt;style::gecko_bindings::structs::root::mozilla::GeckoSVG,closure-0,servo_arc::Arc&lt;style::gecko_bindings::structs::root::mozilla::GeckoSVG&gt;&gt;%0a%0dservo_arc::{{impl}}::clone&lt;style::gecko_bindings::structs::root::mozilla::GeckoOutline&gt;%0a%0dstyle::properties::clone_arc%0a%0dstyle::properties::StyleStructRef&lt;T&gt;::build%0a%0dstyle::properties::StyleBuilder::build%0a%0dnsBlockFrame::ReflowDirtyLines(mozilla::BlockReflowInput&amp;)%0a%0dcore::alloc::size_align%0a%0dcore::alloc::Layout::new&lt;webrender::prim_store::PrimKey&lt;webrender::prim_store::backdrop::Backdrop&gt;&gt;%0a%0dcore::alloc::Layout::array&lt;webrender::internal_types::Filter&gt;%0a%0dhashbrown::raw::calculate_layout%0a%0dhashbrown::raw::RawTable&lt;T&gt;::new_uninitialized%0a%0dhashbrown::raw::RawTable&lt;T&gt;::try_with_capacity%0a%0dhashbrown::raw::RawTable&lt;T&gt;::resize%0a%0dhashbrown::raw::RawTable&lt;T&gt;::reserve_rehash%0a%0dhashbrown::raw::RawTable&lt;T&gt;::reserve%0a%0dhashbrown::map::HashMap&lt;K,V,S&gt;::reserve%0a%0dhashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S&gt;&gt;::rustc_entry%0a%0dstd::collections::hash::map::HashMap&lt;style::rule_tree::StrongRuleNode, smallvec::SmallVec&lt;[(style::rule_cache::RuleCacheConditions, servo_arc::Arc&lt;style::gecko_properties::ComputedValues&gt;); 1]&gt;, core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;::entry&lt;style::rule_tree::StrongRuleNode,smallvec::SmallVec&lt;[(style::rule_cache::RuleCacheConditions, servo_arc::Arc&lt;style::gecko_properties::ComputedValues&gt;); 1]&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;%0a%0dstyle::rule_cache::RuleCache::insert_if_possible%0a%0dstyle::style_resolver::StyleResolverForElement&lt;E&gt;::cascade_style_and_visited%0a%0dstyle::style_resolver::with_default_parent_styles%0a%0dmemcpy()%0a%0dnsTSubstring&lt;char&gt;::Append(nsTSubstringTuple&lt;char&gt; const&amp;, std::nothrow_t const&amp;)%0a%0dnsTArray_Impl&lt;nsTString&lt;char&gt;, nsTArrayInfallibleAllocator&gt;::ReplaceElementsAt&lt;nsTString&lt;char&gt;, nsTArrayInfallibleAllocator&gt;(uint64_t, uint64_t, nsTString&lt;char&gt; const*, uint64_t)%0a%0dmozilla::net::UrlClassifierFeatureBase::GetTables(nsIUrlClassifierFeature::listType, nsTArray&lt;nsTString&lt;char&gt; &gt;&amp;)%0a%0dmozilla::net::`anonymous namespace'::FeatureData::InitializeList%0a%0dRtlAcquireSRWLockExclusive%0a%0dmozilla::net::CacheEntry::OnHandleClosed(mozilla::net::CacheEntryHandle const*)%0a%0dmozilla::net::CacheEntryHandle::Dismiss(void)%0a%0dmozilla::net::CacheEntryHandle::~CacheEntryHandle(void)%0a%0dmozilla::net::CacheEntryHandle::`scalar deleting destructor'(unsigned int)%0a%0dmozilla::net::_OldCacheEntryWrapper::Release(void)%0a%0dmozilla::net::nsHttpChannel::SetupTransaction(void)%0a%0dRefPtr&lt;mozilla::ipc::ActorLifecycleProxy&gt;::~RefPtr&lt;mozilla::ipc::ActorLifecycleProxy&gt;(void)%0a%0dmozilla::ipc::MessageChannel::DispatchMessage(IPC::Message&amp;&amp;)%0a%0djs::NativeObject::lookupPure(JS::PropertyKey)%0a%0djs::LookupOwnPropertyPure(JSContext*, JSObject*, JS::PropertyKey, JS::PropertyResult*, bool*)%0a%0djs::LookupPropertyPure(JSContext*, JSObject*, JS::PropertyKey, JSObject**, JS::PropertyResult*)%0a%0dCanAttachNativeGetProp%0a%0djs::jit::GetPropIRGenerator::tryAttachNative(JS::Handle&lt;JSObject*&gt;, js::jit::ObjOperandId, JS::Handle&lt;JS::PropertyKey&gt;)%0a%0d[js] _on_keyup%0a%0dEventDispatcher::Dispatch keyup%0a%0dNS_NewCStringInputStream(nsIInputStream**, nsTString&lt;char&gt;&amp;&amp;)%0a%0dNS_DeserializeObject(nsTSubstring&lt;char&gt; const&amp;, nsISupports**)%0a%0djs::NativeSetProperty&lt;1&gt;(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::Value&gt;, JS::ObjectOpResult&amp;)%0a%0dRequestBehaviour::GetProgressTracker(void)%0a%0dimgRequestProxy::GetImageStatus(unsigned int*)%0a%0dnsImageBoxFrame::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayItem*, nsPoint, unsigned int)%0a%0dstyle::values::generics::grid::{{impl}}::clone&lt;style::values::generics::grid::GenericTrackSize&lt;style::values::computed::length_percentage::LengthPercentage&gt;&gt;%0a%0dstyle::gecko_properties::&lt;impl style::gecko_bindings::structs::root::mozilla::GeckoPosition&gt;::copy_grid_auto_rows_from%0a%0dnsReflowStatus::UpdateTruncated(mozilla::ReflowInput const&amp;, mozilla::ReflowOutput const&amp;)%0a%0dmozilla::net::HttpChannelParent::DoAsyncOpen(mozilla::ipc::URIParams const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIReferrerInfo*, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::URIParams&gt; const&amp;, nsIPrincipal*, unsigned int const&amp;, nsTArray&lt;mozilla::net::RequestHeaderTuple&gt; const&amp;, nsTString&lt;char&gt; const&amp;, mozilla::Maybe&lt;mozilla::ipc::IPCStream&gt; const&amp;, bool const&amp;, short const&amp;, unsigned int const&amp;, unsigned char const&amp;, bool const&amp;, unsigned int const&amp;, bool const&amp;, uint64_t const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, unsigned int const&amp;, mozilla::Maybe&lt;mozilla::net::LoadInfoArgs&gt; const&amp;, mozilla::Maybe&lt;mozilla::net::nsHttpResponseHead&gt; const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, uint64_t const&amp;, mozilla::Maybe&lt;mozilla::net::CorsPreflightArgs&gt; const&amp;, unsigned int const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, bool const&amp;, nsTString&lt;char&gt; const&amp;, unsigned int const&amp;, unsigned int const&amp;, uint64_t const&amp;, nsTString&lt;char16_t&gt; const&amp;, uint64_t const&amp;, nsTArray&lt;mozilla::net::PreferredAlternativeDataTypeParams&gt; const&amp;, uint64_t const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;, mozilla::TimeStamp const&amp;, bool const&amp;)%0a%0dmozilla::OriginAttributes::CreateSuffix(nsTSubstring&lt;char&gt;&amp;)%0a%0dmozilla::detail::ConditionVariableImpl::wait_for(mozilla::detail::MutexImpl&amp;, mozilla::BaseTimeDuration&lt;mozilla::TimeDurationValueCalculator&gt; const&amp;)%0a%0dmozilla::ipc::MessageChannel::WaitForSyncNotify(bool)%0a%0dmozilla::ipc::MessageChannel::Send(IPC::Message*, IPC::Message*)%0a%0dmozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(mozilla::MouseInput const&amp;, mozilla::layers::APZEventResult*, mozilla::MouseInput*)%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dmozilla::layers::APZInputBridgeChild::ReceiveInputEvent(mozilla::InputData&amp;)%0a%0dnsGridContainerFrame::BuildDisplayList(nsDisplayListBuilder*, nsDisplayListSet const&amp;)%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3989" font-family="Helvetica, Arial, sans-serif" x="1085" y="2451.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3990" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">NtAllocateVirtualMemory</tspan></text></a><a id="SvgjsA3994" href="data:text/plain,[js] bound%0a%0dmozilla::dom::MessageListener::ReceiveMessage(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::ReceiveMessageArgument const&amp;, JS::MutableHandle&lt;JS::Value&gt;, mozilla::ErrorResult&amp;)%0a%0dnsFrameMessageManager::ReceiveMessage(nsISupports*, nsFrameLoader*, bool, nsTSubstring&lt;char16_t&gt; const&amp;, bool, mozilla::dom::ipc::StructuredCloneData*, mozilla::jsipc::CpowHolder*, nsIPrincipal*, nsTArray&lt;mozilla::dom::ipc::StructuredCloneData&gt;*, mozilla::ErrorResult&amp;)%0a%0dMessageListener.receiveMessage%0a%0dJSStructuredCloneReader::startRead(JS::MutableHandle&lt;JS::Value&gt;)%0a%0dJSStructuredCloneReader::read(JS::MutableHandle&lt;JS::Value&gt;)%0a%0dReadStructuredClone(JSContext*, JSStructuredCloneData&amp;, JS::StructuredCloneScope, JS::MutableHandle&lt;JS::Value&gt;, JS::CloneDataPolicy const&amp;, JSStructuredCloneCallbacks const*, void*)%0a%0dJS_ReadStructuredClone(JSContext*, JSStructuredCloneData&amp;, unsigned int, JS::StructuredCloneScope, JS::MutableHandle&lt;JS::Value&gt;, JS::CloneDataPolicy const&amp;, JSStructuredCloneCallbacks const*, void*)%0a%0dmozilla::dom::StructuredCloneHolder::ReadFromBuffer(nsIGlobalObject*, JSContext*, JSStructuredCloneData&amp;, JS::MutableHandle&lt;JS::Value&gt;, JS::CloneDataPolicy const&amp;, mozilla::ErrorResult&amp;)%0a%0dmozilla::dom::ipc::StructuredCloneData::Read(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, mozilla::ErrorResult&amp;)%0a%0dnsFrameMessageManager::ReceiveMessage(nsISupports*, nsFrameLoader*, bool, nsTSubstring&lt;char16_t&gt; const&amp;, bool, mozilla::dom::ipc::StructuredCloneData*, mozilla::jsipc::CpowHolder*, nsIPrincipal*, nsTArray&lt;mozilla::dom::ipc::StructuredCloneData&gt;*, mozilla::ErrorResult&amp;)%0a%0dmessage manager handler%0a%0dmozilla::dom::BrowserParent::ReceiveMessage(nsTString&lt;char16_t&gt; const&amp;, bool, mozilla::dom::ipc::StructuredCloneData*, mozilla::jsipc::CpowHolder*, nsIPrincipal*, nsTArray&lt;mozilla::dom::ipc::StructuredCloneData&gt;*)%0a%0dmozilla::dom::BrowserParent::RecvAsyncMessage(nsTString&lt;char16_t&gt; const&amp;, nsTArray&lt;mozilla::jsipc::CpowEntry&gt;&amp;&amp;, nsIPrincipal*, mozilla::dom::ClonedMessageData const&amp;)%0a%0dBrowserParent::RecvAsyncMessage RemotePage:Message%0a%0dmozilla::dom::PBrowserParent::OnMessageReceived(IPC::Message const&amp;)%0a%0dPBrowser::Msg_AsyncMessage%0a%0dNtUserSetCapture%0a%0dnsWindow::DispatchMouseEvent(mozilla::EventMessage, uint64_t, int64_t, bool, short, unsigned short, WinPointerInfo*)%0a%0dnsLayoutUtils::FindOrCreateIDFor(nsIContent*)%0a%0dnsLayoutUtils::PaintFrame(gfxContext*, nsIFrame*, nsRegion const&amp;, unsigned int, nsDisplayListBuilderMode, nsLayoutUtils::PaintFrameFlags)%0a%0dcore::intrinsics::copy_nonoverlapping&lt;u8&gt;%0a%0dcore::ptr::write_unaligned&lt;f32&gt;%0a%0dpeek_poke::write_verbatim&lt;f32&gt;%0a%0dpeek_poke::poke_extend_vec::{{closure}}&lt;core::slice::Iter&lt;webrender_api::display_item::FilterOp&gt;&gt;%0a%0dcore::iter::adapters::{{impl}}::try_fold::check::{{closure}}&lt;webrender_api::display_item::FilterOp*,mut u8*,core::result::Result&lt;mut u8*, !&gt;,closure-0&gt;%0a%0dcore::iter::traits::iterator::Iterator::try_fold&lt;core::slice::Iter&lt;webrender_api::display_item::FilterOp&gt;,mut u8*,closure-0,core::iter::LoopState&lt;mut u8*, core::result::Result&lt;mut u8*, !&gt;&gt;&gt;%0a%0dcore::iter::adapters::{{impl}}::try_fold&lt;core::slice::Iter&lt;webrender_api::display_item::FilterOp&gt;,mut u8*,closure-0,core::result::Result&lt;mut u8*, !&gt;&gt;%0a%0dcore::iter::traits::iterator::Iterator::fold&lt;core::iter::adapters::Take&lt;core::slice::Iter&lt;webrender_api::display_item::FilterOp&gt;&gt;,mut u8*,closure-0&gt;%0a%0dpeek_poke::poke_extend_vec%0a%0dwebrender_api::display_list::DisplayListBuilder::push_iter_impl%0a%0dwebrender_api::display_list::DisplayListBuilder::push_filters%0a%0dwebrender_api::display_list::DisplayListBuilder::push_stacking_context%0a%0dwr_dp_push_stacking_context%0a%0dmozilla::wr::DisplayListBuilder::PushStackingContext(mozilla::wr::StackingContextParams const&amp;, mozilla::wr::Rect&lt;float, mozilla::wr::LayoutPixel&gt; const&amp;, mozilla::wr::RasterSpace const&amp;)%0a%0dmozilla::layers::StackingContextHelper::StackingContextHelper(mozilla::layers::StackingContextHelper const&amp;, mozilla::ActiveScrolledRoot const*, nsIFrame*, nsDisplayItem*, mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::StackingContextParams const&amp;, mozilla::gfx::RectTyped&lt;mozilla::LayoutDevicePixel, float&gt; const&amp;)%0a%0dnsDisplayOpacity::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dWebRender display list%0a%0dcore::slice::{{impl}}::get_unchecked_mut&lt;aho_corasick::nfa::{{impl}}::fill_failure_transitions_leftmost::QueuedState&lt;u32&gt;&gt;%0a%0dselectors::parser::Selector&lt;style::gecko::selector_parser::SelectorImpl&gt;::iter_from&lt;style::gecko::selector_parser::SelectorImpl&gt;%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::check_dependency%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::scan_dependency%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::Dependency&gt;::lookup&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dstyle::selector_map::SelectorMap&lt;style::invalidation::element::invalidation_map::Dependency&gt;::lookup_with_additional&lt;style::invalidation::element::invalidation_map::Dependency,style::gecko::wrapper::GeckoElement,closure-0&gt;%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_map%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3992" font-family="Helvetica, Arial, sans-serif" x="1085" y="2454.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3993" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">[js] bound</tspan></text></a><a id="SvgjsA3997" href="data:text/plain,js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText3995" font-family="Helvetica, Arial, sans-serif" x="1085" y="2456.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3996" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)</tspan></text></a><a id="SvgjsA4000" href="data:text/plain,Interpret%0a%0d[js] get firstUse%0a%0d[js] lastBrowserUpdateDate%0a%0d[js] updateCurrentBrowser%0a%0d[js] isShownForTab%0a%0d[js] handleLocationChange%0a%0d[js] handleEvent%0a%0djs::InternalBarrierMethods&lt;js::WasmInstanceObject*&gt;::readBarrier(js::WasmInstanceObject*)%0a%0d[js] handleEvent%0a%0d[js] updateButton%0a%0djs::jit::IonBuilder::newPendingLoopHeader(js::jit::MBasicBlock*, unsigned char*, bool)%0a%0d0x2c887ac7276%0a%0dnsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, mozilla::ReflowOutput&amp;, mozilla::ReflowInput const&amp;, mozilla::WritingMode const&amp;, mozilla::LogicalPoint const&amp;, nsSize const&amp;, nsIFrame::ReflowChildFlags, nsReflowStatus&amp;, nsOverflowContinuationTracker*)%0a%0dnsHTMLScrollFrame::ReflowScrolledFrame(mozilla::ScrollReflowInput*, bool, bool, mozilla::ReflowOutput*)%0a%0dnsHTMLScrollFrame::ReflowContents(mozilla::ScrollReflowInput*, mozilla::ReflowOutput const&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText3998" font-family="Helvetica, Arial, sans-serif" x="1085" y="2460.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3999" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a><a id="SvgjsA4003" href="data:text/plain,js::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)%0a%0d[js] on_mousedown%0a%0djs::NativeGetProperty(JSContext*, JS::Handle&lt;js::NativeObject*&gt;, JS::Handle&lt;JS::Value&gt;, JS::Handle&lt;JS::PropertyKey&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0d[js] on_mousedown%0a%0dServo_Element_IsDisplayContents%0a%0dGecko_FinalizeString%0a%0d&lt;[T; _] as smallvec::Array&gt;::size%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::new&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dalloc::vec::Vec&lt;neqo_common::datagram::Datagram&gt;::new&lt;neqo_common::datagram::Datagram&gt;%0a%0dmozilla::ipc::IPDLParamTraits&lt;mozilla::ipc::StandardURLParams&gt;::Read(IPC::Message const*, PickleIterator*, mozilla::ipc::IProtocol*, mozilla::ipc::StandardURLParams*)%0a%0dmozilla::ClearSiteData::ClearDataFromChannel(nsIHttpChannel*)%0a%0dimgLoader::LoadImage(nsIURI*, nsIURI*, nsIReferrerInfo*, nsIPrincipal*, uint64_t, nsILoadGroup*, imgINotificationObserver*, nsINode*, mozilla::dom::Document*, unsigned int, nsISupports*, unsigned int, nsTSubstring&lt;char16_t&gt; const&amp;, bool, imgRequestProxy**)%0a%0dmozilla::dom::Document::BeginUpdate(void)%0a%0dAllocator&lt;MozJemallocBase&gt;::moz_arena_malloc(uint64_t, uint64_t)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText4001" font-family="Helvetica, Arial, sans-serif" x="1085" y="2462.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan4002" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::InternalCallOrConstruct(JSContext*, JS::CallArgs const&amp;, js::MaybeConstruct, js::CallReason)</tspan></text></a><a id="SvgjsA4006" href="data:text/plain,js::LookupInIteratorCache(JSContext*, JS::Handle&lt;JSObject*&gt;)%0a%0djs::jit::GetIteratorIRGenerator::tryAttachNativeIterator(js::jit::ObjOperandId, JS::Handle&lt;JSObject*&gt;)%0a%0dRtlDosPathNameToRelativeNtPathName_U_WithStatus%0a%0dGetFileAttributesExW%0a%0d0x2c887eeb2f1%0a%0d[js] _rowCanUpdateToResult%0a%0d[js] _updateResults%0a%0d0x2c887c4acac%0a%0dnsZipReaderCache::AddRef(void)%0a%0dmozilla::net::CacheFileIOManager::UpdateIndexEntry(mozilla::net::CacheFileHandle*, unsigned int const*, bool const*, unsigned short const*, unsigned short const*, unsigned char const*)%0a%0dsqlite3VdbeExec%0a%0dNtUserGetQueueStatusReadonly%0a%0dMicrosoft::CoreUI::Dispatch::EventLoop::Callback_RunCoreLoop(Microsoft::CoreUI::Dispatch::RunMode,bool,bool &amp;)%0a%0dMicrosoft::CoreUI::Dispatch::UserAdapter::OnUserDispatch(bool,Microsoft::CoreUI::Dispatch::UserAdapterBase__UserPriority,System::IntPtr &amp;)%0a%0dMicrosoft::CoreUI::Dispatch::UserAdapter_DoWork(Microsoft::CoreUI::Dispatch::UserData *,Microsoft::CoreUI::Dispatch::UserAdapterBase__UserPriority,bool)%0a%0d0x2c887ac7276%0a%0dnsContainerFrame::ReflowChild(nsIFrame*, nsPresContext*, mozilla::ReflowOutput&amp;, mozilla::ReflowInput const&amp;, mozilla::WritingMode const&amp;, mozilla::LogicalPoint const&amp;, nsSize const&amp;, nsIFrame::ReflowChildFlags, nsReflowStatus&amp;, nsOverflowContinuationTracker*)%0a%0dnsHTMLScrollFrame::ReflowScrolledFrame(mozilla::ScrollReflowInput*, bool, bool, mozilla::ReflowOutput*)%0a%0dnsHTMLScrollFrame::ReflowContents(mozilla::ScrollReflowInput*, mozilla::ReflowOutput const&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText4004" font-family="Helvetica, Arial, sans-serif" x="1085" y="2465.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan4005" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::LookupInIteratorCache(JSContext*, JS::Handle&lt;JSObject*&gt;)</tspan></text></a><a id="SvgjsA4009" href="data:text/plain,js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)%0a%0d[js] onStateChange%0a%0dmozilla::TimeStamp::Now(bool)%0a%0dmozilla::storage::AsyncExecuteStatements::AsyncExecuteStatements(nsTArray&lt;mozilla::storage::StatementData&gt;&amp;, mozilla::storage::Connection*, sqlite3*, mozIStorageStatementCallback*)%0a%0dmozilla::storage::AsyncExecuteStatements::execute(nsTArray&lt;mozilla::storage::StatementData&gt;&amp;, mozilla::storage::Connection*, sqlite3*, mozIStorageStatementCallback*, mozIStoragePendingStatement**)%0a%0dmemset()%0a%0djs::jit::GetNativeDataPropertyByValuePure&lt;0&gt;(JSContext*, JSObject*, JS::Value*)%0a%0d0x2c887c2033c%0a%0djs::AllocateStringImpl&lt;JSString, 1&gt;(JSContext*, js::gc::InitialHeap)%0a%0djs::NewStringCopyNDontDeflate&lt;1, char16_t&gt;(JSContext*, char16_t const*, uint64_t)%0a%0dJS_NewUCStringCopyN(JSContext*, char16_t const*, uint64_t)%0a%0dXPCConvert::NativeData2JS(JSContext*, JS::MutableHandle&lt;JS::Value&gt;, void const*, nsXPTType const&amp;, nsID const*, unsigned int, nsresult*)%0a%0djs::BarrierMethods&lt;JSObject*&gt;::exposeToJS(JSObject*)%0a%0dnsXPCWrappedJS::CallMethod(unsigned short, nsXPTMethodInfo const*, nsXPTCMiniVariant*)%0a%0dXPCNativeSet::GetNewOrUsed(JSContext*, nsIClassInfo*)%0a%0dXPCWrappedNativeProto::GetNewOrUsed(JSContext*, XPCWrappedNativeScope*, nsIClassInfo*, nsIXPCScriptable*)%0a%0dXPCWrappedNative::CallMethod(XPCCallContext&amp;, XPCWrappedNative::CallMode)%0a%0d[js] onStateChange%0a%0dmozilla::EditorBase::InsertTextAsSubAction(nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dmozilla::TextEditor::OnInputText(nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dXREMain::XRE_main"><text id="SvgjsText4007" font-family="Helvetica, Arial, sans-serif" x="1085" y="2467.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan4008" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::LookupNameNoGC(JSContext*, js::PropertyName*, JSObject*, JSObject**, JSObject**, JS::PropertyResult*)</tspan></text></a><a id="SvgjsA4012" href="data:text/plain,mozilla::detail::VectorImpl&lt;js::SavedFrame::Lookup, 60, js::TempAllocPolicy, 0&gt;::growTo(mozilla::Vector&lt;js::SavedFrame::Lookup, 60, js::TempAllocPolicy&gt;&amp;, uint64_t)%0a%0dMicrosoft::CoreUI::Dispatch::UserAdapterBase::ScheduleInputPriorityUserDispatch(void *,bool)%0a%0dMicrosoft::CoreUI::Dispatch::Dispatcher::OnChildWakeChanged(Microsoft::CoreUI::Dispatch::DispatchItem *,Microsoft::CoreUI::Dispatch::InternalPriority,Microsoft::CoreUI::Dispatch::InternalPriority)%0a%0dnsHTMLScrollFrame::ReflowContents(mozilla::ScrollReflowInput*, mozilla::ReflowOutput const&amp;)%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText4010" font-family="Helvetica, Arial, sans-serif" x="1085" y="2470.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan4011" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">mozilla::detail::VectorImpl&lt;js::SavedFrame::Lookup, 60, js::TempAllocPolicy, 0&gt;::growTo(mozilla::Vector&lt;js::SavedFrame::Lookup, 60, js::TempAllocPolicy&gt;&amp;, uint64_t)</tspan></text></a><a id="SvgjsA4015" href="data:text/plain,js::ContextChecks::check(JS::Value const&amp;, int)%0a%0dnsCOMArray_base::InsertObjectAt(nsISupports*, int)%0a%0dnsObserverList::FillObserverArray(nsCOMArray&lt;nsIObserver&gt;&amp;)%0a%0dgr_cinfo_base%0a%0dThirdPartyUtil::IsThirdPartyChannel(nsIChannel*, nsIURI*, bool*)%0a%0dnsTHashtable&lt;nsBaseHashtableET&lt;nsGenericHashKey&lt;nsHostKey&gt;, RefPtr&lt;nsHostRecord&gt; &gt; &gt;::s_HashKey(void const*)%0a%0dnsHostResolver::ResolveHost(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char&gt; const&amp;, unsigned short, mozilla::OriginAttributes const&amp;, unsigned short, unsigned short, nsResolveHostCallback*)%0a%0dmozilla::net::nsHttpChannelAuthProvider::AddAuthorizationHeaders(bool)%0a%0dCompareUTF8toUTF16(nsTSubstring&lt;char&gt; const&amp;, nsTSubstring&lt;char16_t&gt; const&amp;, bool*)%0a%0dmozilla::net::nsHttpChannel::BeginConnect(void)%0a%0dnsSystemInfo::AddRef(void)%0a%0dnsHashPropertyBag::QueryInterface(nsID const&amp;, void**)%0a%0dmozilla::profiler::AllocCallback%0a%0dnsUrlClassifierDBService::FeatureHolder::Create(nsIURI*, nsTArray&lt;RefPtr&lt;nsIUrlClassifierFeature&gt; &gt; const&amp;, nsIUrlClassifierFeature::listType)%0a%0dDefinePropertyIfFound%0a%0d0x2c887ac419a%0a%0d[js] onQueryResults%0a%0d[js] notify%0a%0dstyle::invalidation::element::state_and_attributes::Collector&lt;E&gt;::collect_dependencies_in_invalidation_map%0a%0d&lt;style::invalidation::element::state_and_attributes::StateAndAttrInvalidationProcessor&lt;E&gt; as style::invalidation::element::invalidator::InvalidationProcessor&lt;E&gt;&gt;::collect_invalidations%0a%0dstyle::invalidation::element::invalidator::TreeStyleInvalidator&lt;E,P&gt;::invalidate%0a%0dWatchdogManager::RecordContextActivity(XPCJSContext*, bool)%0a%0dmemcpy()%0a%0darena_t::RallocSmallOrLarge(void*, uint64_t, uint64_t)%0a%0dBaseAllocator::realloc(void*, uint64_t)%0a%0dAllocator&lt;MozJemallocBase&gt;::realloc(void*, uint64_t)%0a%0dreplace_realloc%0a%0dreplace_realloc%0a%0dKiUserCallbackDispatcherContinue%0a%0dnsBaseAppShell::OnProcessNextEvent(nsIThreadInternal*, bool)%0a%0dnsViewManager::DispatchEvent(mozilla::WidgetGUIEvent*, nsView*, nsEventStatus*)%0a%0dmozilla::PresShell::DispatchSynthMouseMove(mozilla::WidgetGUIEvent*)%0a%0dmozilla::PresShell::ProcessSynthMouseMoveEvent(bool)%0a%0dmozilla::PresShell::nsSynthMouseMoveEvent::WillRefresh(mozilla::TimeStamp)%0a%0dnsRefreshDriver::Tick(mozilla::layers::BaseTransactionId&lt;mozilla::VsyncIdType&gt;, mozilla::TimeStamp)%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;T,I&gt;&gt;::spec_extend%0a%0dalloc::slice::hack::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0dalloc::slice::{{impl}}::to_vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;%0a%0d&lt;alloc::vec::Vec&lt;T&gt; as core::clone::Clone&gt;::clone%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;%0a%0dindexmap::map::{{impl}}::clone&lt;style::gecko_string_cache::Atom,servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;,core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;%0a%0dstyle::custom_properties::CustomPropertiesBuilder::cascade%0a%0dstyle::properties::cascade::apply_declarations%0a%0dstyle::properties::cascade::cascade_rules"><text id="SvgjsText4013" font-family="Helvetica, Arial, sans-serif" x="1085" y="2472.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan4014" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">js::ContextChecks::check(JS::Value const&amp;, int)</tspan></text></a><a id="SvgjsA4018" href="data:text/plain,JS_HoldPrincipals(JSPrincipals*)%0a%0djs::SavedFrame::initFromLookup(JSContext*, JS::Handle&lt;js::SavedFrame::Lookup&gt;)%0a%0djs::SavedStacks::getOrCreateSavedFrame(JSContext*, JS::Handle&lt;js::SavedFrame::Lookup&gt;)%0a%0d[js] formatWithFallback%0a%0dResolvePromiseInternal%0a%0d[js] init%0a%0d[js] getDefault%0a%0d[js] isDefaultEngineHomepage%0a%0dXPCWrappedNative::Init(JSContext*, nsIXPCScriptable*)%0a%0dnsContentUtils::IsJavascriptMIMEType(nsTSubstring&lt;char16_t&gt; const&amp;)%0a%0dxpc::XrayAwareCalleeGlobal(JSObject*)%0a%0dnsJSPrincipals::Release(void)%0a%0dXREMain::XRE_main"><text id="SvgjsText4016" font-family="Helvetica, Arial, sans-serif" x="1085" y="2475.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan4017" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">JS_HoldPrincipals(JSPrincipals*)</tspan></text></a><a id="SvgjsA4021" href="data:text/plain,Interpret%0a%0d[js] startUnselectedTabHoverTimer%0a%0d[js] _mouseenter%0a%0d[js] _mouseenter%0a%0d[js] _getVisibleTabs%0a%0d[js] _mouseenter%0a%0dmozilla::dom::EventListener::HandleEvent(JSContext*, JS::Handle&lt;JS::Value&gt;, mozilla::dom::Event&amp;, mozilla::ErrorResult&amp;)%0a%0d0x2c887f84141%0a%0d[js] AsyncFunctionNext%0a%0d[js] handleCompletion%0a%0djs::jit::JSJitFrameIter::operator++(void)%0a%0djs::FrameIter::settleOnActivation(void)%0a%0djs::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, bool*, JS::MutableHandle&lt;JS::Value&gt;)%0a%0djs::jit::TrySkipAwait(JSContext*, JS::Handle&lt;JS::Value&gt;, JS::MutableHandle&lt;JS::Value&gt;)%0a%0dnsDisplayImage::CreateWebRenderCommands(mozilla::wr::DisplayListBuilder&amp;, mozilla::wr::IpcResourceUpdateQueue&amp;, mozilla::layers::StackingContextHelper const&amp;, mozilla::layers::RenderRootStateManager*, nsDisplayListBuilder*)%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dXREMain::XRE_main"><text id="SvgjsText4019" font-family="Helvetica, Arial, sans-serif" x="1085" y="2477.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan4020" dy="6.5" x="1085" svgjs:data="{&quot;newLined&quot;:true}">Interpret</tspan></text></a></svg>