<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.com/svgjs" width="2048" height="3313"><svg id="SvgjsSvg1001" width="2" height="0" focusable="false" style="overflow:hidden;top:-100%;left:-100%;position:absolute;opacity:0"><polyline id="SvgjsPolyline1002" points="0,0"></polyline><path id="SvgjsPath1003" d="M0 0 "></path></svg><line id="SvgjsLine1005" x1="146" y1="20" x2="146" y2="3313" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1006" font-family="Helvetica, Arial, sans-serif" x="52.59375" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1007" dy="20.8" x="52.59375" svgjs:data="{&quot;newLined&quot;:true}">Web Content/GeckoMain</tspan></text><line id="SvgjsLine1008" x1="438" y1="20" x2="438" y2="3313" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1009" font-family="Helvetica, Arial, sans-serif" x="358.90625" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1010" dy="20.8" x="358.90625" svgjs:data="{&quot;newLined&quot;:true}">Web Content/119040</tspan></text><line id="SvgjsLine1011" x1="731" y1="20" x2="731" y2="3313" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1012" font-family="Helvetica, Arial, sans-serif" x="651.90625" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1013" dy="20.8" x="651.90625" svgjs:data="{&quot;newLined&quot;:true}">Web Content/121752</tspan></text><line id="SvgjsLine1014" x1="1024" y1="20" x2="1024" y2="3313" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1015" font-family="Helvetica, Arial, sans-serif" x="935.3671875" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1016" dy="20.8" x="935.3671875" svgjs:data="{&quot;newLined&quot;:true}">Web Content/IO Sender</tspan></text><line id="SvgjsLine1017" x1="1316" y1="20" x2="1316" y2="3313" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1018" font-family="Helvetica, Arial, sans-serif" x="1215.33203125" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1019" dy="20.8" x="1215.33203125" svgjs:data="{&quot;newLined&quot;:true}">Parent Process/IO Receiver</tspan></text><line id="SvgjsLine1020" x1="1609" y1="20" x2="1609" y2="3313" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1021" font-family="Helvetica, Arial, sans-serif" x="1508.62890625" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1022" dy="20.8" x="1508.62890625" svgjs:data="{&quot;newLined&quot;:true}">Parent Process/GeckoMain</tspan></text><line id="SvgjsLine1023" x1="1901" y1="20" x2="1901" y2="3313" stroke="#000000" stroke-width="2"></line><text id="SvgjsText1024" font-family="Helvetica, Arial, sans-serif" x="1814.94140625" y="-4.592968750000001" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1025" dy="20.8" x="1814.94140625" svgjs:data="{&quot;newLined&quot;:true}">Parent Process/107644</tspan></text><line id="SvgjsLine1026" x1="1170" y1="0" x2="1170" y2="3313" stroke-dasharray="2,2" stroke="#ffb080" stroke-width="2"></line><text id="SvgjsText1027" font-family="Helvetica, Arial, sans-serif" x="26" y="31.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1028" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 0 ms</tspan></text><line id="SvgjsLine1029" x1="146" y1="40" x2="1901" y2="40" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1030" font-family="Helvetica, Arial, sans-serif" x="26" y="63.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1031" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 15.16 ms</tspan></text><line id="SvgjsLine1032" x1="146" y1="72" x2="1901" y2="72" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1033" font-family="Helvetica, Arial, sans-serif" x="26" y="96.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1034" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 30.32 ms</tspan></text><line id="SvgjsLine1035" x1="146" y1="105" x2="1901" y2="105" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1036" font-family="Helvetica, Arial, sans-serif" x="26" y="129.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1037" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 45.48 ms</tspan></text><line id="SvgjsLine1038" x1="146" y1="138" x2="1901" y2="138" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1039" font-family="Helvetica, Arial, sans-serif" x="26" y="161.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1040" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 60.64 ms</tspan></text><line id="SvgjsLine1041" x1="146" y1="170" x2="1901" y2="170" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1042" font-family="Helvetica, Arial, sans-serif" x="26" y="194.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1043" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 75.81 ms</tspan></text><line id="SvgjsLine1044" x1="146" y1="203" x2="1901" y2="203" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1045" font-family="Helvetica, Arial, sans-serif" x="26" y="227.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1046" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 90.97 ms</tspan></text><line id="SvgjsLine1047" x1="146" y1="236" x2="1901" y2="236" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1048" font-family="Helvetica, Arial, sans-serif" x="26" y="260.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1049" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 106.13 ms</tspan></text><line id="SvgjsLine1050" x1="146" y1="269" x2="1901" y2="269" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1051" font-family="Helvetica, Arial, sans-serif" x="26" y="292.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1052" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 121.29 ms</tspan></text><line id="SvgjsLine1053" x1="146" y1="301" x2="1901" y2="301" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1054" font-family="Helvetica, Arial, sans-serif" x="26" y="325.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1055" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 136.46 ms</tspan></text><line id="SvgjsLine1056" x1="146" y1="334" x2="1901" y2="334" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1057" font-family="Helvetica, Arial, sans-serif" x="26" y="358.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1058" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 151.62 ms</tspan></text><line id="SvgjsLine1059" x1="146" y1="367" x2="1901" y2="367" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1060" font-family="Helvetica, Arial, sans-serif" x="26" y="391.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1061" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 166.78 ms</tspan></text><line id="SvgjsLine1062" x1="146" y1="400" x2="1901" y2="400" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1063" font-family="Helvetica, Arial, sans-serif" x="26" y="423.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1064" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 181.94 ms</tspan></text><line id="SvgjsLine1065" x1="146" y1="432" x2="1901" y2="432" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1066" font-family="Helvetica, Arial, sans-serif" x="26" y="456.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1067" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 197.11 ms</tspan></text><line id="SvgjsLine1068" x1="146" y1="465" x2="1901" y2="465" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1069" font-family="Helvetica, Arial, sans-serif" x="26" y="489.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1070" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 212.27 ms</tspan></text><line id="SvgjsLine1071" x1="146" y1="498" x2="1901" y2="498" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1072" font-family="Helvetica, Arial, sans-serif" x="26" y="521.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1073" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 227.43 ms</tspan></text><line id="SvgjsLine1074" x1="146" y1="530" x2="1901" y2="530" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1075" font-family="Helvetica, Arial, sans-serif" x="26" y="554.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1076" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 242.59 ms</tspan></text><line id="SvgjsLine1077" x1="146" y1="563" x2="1901" y2="563" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1078" font-family="Helvetica, Arial, sans-serif" x="26" y="587.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1079" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 257.75 ms</tspan></text><line id="SvgjsLine1080" x1="146" y1="596" x2="1901" y2="596" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1081" font-family="Helvetica, Arial, sans-serif" x="26" y="620.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1082" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 272.92 ms</tspan></text><line id="SvgjsLine1083" x1="146" y1="629" x2="1901" y2="629" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1084" font-family="Helvetica, Arial, sans-serif" x="26" y="652.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1085" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 288.08 ms</tspan></text><line id="SvgjsLine1086" x1="146" y1="661" x2="1901" y2="661" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1087" font-family="Helvetica, Arial, sans-serif" x="26" y="685.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1088" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 303.24 ms</tspan></text><line id="SvgjsLine1089" x1="146" y1="694" x2="1901" y2="694" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1090" font-family="Helvetica, Arial, sans-serif" x="26" y="718.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1091" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 318.4 ms</tspan></text><line id="SvgjsLine1092" x1="146" y1="727" x2="1901" y2="727" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1093" font-family="Helvetica, Arial, sans-serif" x="26" y="751.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1094" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 333.57 ms</tspan></text><line id="SvgjsLine1095" x1="146" y1="760" x2="1901" y2="760" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1096" font-family="Helvetica, Arial, sans-serif" x="26" y="783.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1097" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 348.73 ms</tspan></text><line id="SvgjsLine1098" x1="146" y1="792" x2="1901" y2="792" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1099" font-family="Helvetica, Arial, sans-serif" x="26" y="816.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1100" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 363.89 ms</tspan></text><line id="SvgjsLine1101" x1="146" y1="825" x2="1901" y2="825" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1102" font-family="Helvetica, Arial, sans-serif" x="26" y="849.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1103" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 379.05 ms</tspan></text><line id="SvgjsLine1104" x1="146" y1="858" x2="1901" y2="858" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1105" font-family="Helvetica, Arial, sans-serif" x="26" y="881.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1106" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 394.22 ms</tspan></text><line id="SvgjsLine1107" x1="146" y1="890" x2="1901" y2="890" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1108" font-family="Helvetica, Arial, sans-serif" x="26" y="914.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1109" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 409.38 ms</tspan></text><line id="SvgjsLine1110" x1="146" y1="923" x2="1901" y2="923" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1111" font-family="Helvetica, Arial, sans-serif" x="26" y="947.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1112" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 424.54 ms</tspan></text><line id="SvgjsLine1113" x1="146" y1="956" x2="1901" y2="956" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1114" font-family="Helvetica, Arial, sans-serif" x="26" y="980.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1115" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 439.7 ms</tspan></text><line id="SvgjsLine1116" x1="146" y1="989" x2="1901" y2="989" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1117" font-family="Helvetica, Arial, sans-serif" x="26" y="1012.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1118" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 454.86 ms</tspan></text><line id="SvgjsLine1119" x1="146" y1="1021" x2="1901" y2="1021" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1120" font-family="Helvetica, Arial, sans-serif" x="26" y="1045.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1121" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 470.03 ms</tspan></text><line id="SvgjsLine1122" x1="146" y1="1054" x2="1901" y2="1054" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1123" font-family="Helvetica, Arial, sans-serif" x="26" y="1078.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1124" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 485.19 ms</tspan></text><line id="SvgjsLine1125" x1="146" y1="1087" x2="1901" y2="1087" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1126" font-family="Helvetica, Arial, sans-serif" x="26" y="1111.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1127" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 500.35 ms</tspan></text><line id="SvgjsLine1128" x1="146" y1="1120" x2="1901" y2="1120" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1129" font-family="Helvetica, Arial, sans-serif" x="26" y="1143.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1130" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 515.51 ms</tspan></text><line id="SvgjsLine1131" x1="146" y1="1152" x2="1901" y2="1152" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1132" font-family="Helvetica, Arial, sans-serif" x="26" y="1176.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1133" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 530.68 ms</tspan></text><line id="SvgjsLine1134" x1="146" y1="1185" x2="1901" y2="1185" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1135" font-family="Helvetica, Arial, sans-serif" x="26" y="1209.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1136" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 545.84 ms</tspan></text><line id="SvgjsLine1137" x1="146" y1="1218" x2="1901" y2="1218" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1138" font-family="Helvetica, Arial, sans-serif" x="26" y="1242.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1139" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 561 ms</tspan></text><line id="SvgjsLine1140" x1="146" y1="1251" x2="1901" y2="1251" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1141" font-family="Helvetica, Arial, sans-serif" x="26" y="1274.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1142" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 576.16 ms</tspan></text><line id="SvgjsLine1143" x1="146" y1="1283" x2="1901" y2="1283" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1144" font-family="Helvetica, Arial, sans-serif" x="26" y="1307.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1145" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 591.33 ms</tspan></text><line id="SvgjsLine1146" x1="146" y1="1316" x2="1901" y2="1316" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1147" font-family="Helvetica, Arial, sans-serif" x="26" y="1340.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1148" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 606.49 ms</tspan></text><line id="SvgjsLine1149" x1="146" y1="1349" x2="1901" y2="1349" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1150" font-family="Helvetica, Arial, sans-serif" x="26" y="1372.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1151" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 621.65 ms</tspan></text><line id="SvgjsLine1152" x1="146" y1="1381" x2="1901" y2="1381" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1153" font-family="Helvetica, Arial, sans-serif" x="26" y="1405.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1154" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 636.81 ms</tspan></text><line id="SvgjsLine1155" x1="146" y1="1414" x2="1901" y2="1414" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1156" font-family="Helvetica, Arial, sans-serif" x="26" y="1438.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1157" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 651.97 ms</tspan></text><line id="SvgjsLine1158" x1="146" y1="1447" x2="1901" y2="1447" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1159" font-family="Helvetica, Arial, sans-serif" x="26" y="1471.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1160" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 667.14 ms</tspan></text><line id="SvgjsLine1161" x1="146" y1="1480" x2="1901" y2="1480" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1162" font-family="Helvetica, Arial, sans-serif" x="26" y="1503.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1163" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 682.3 ms</tspan></text><line id="SvgjsLine1164" x1="146" y1="1512" x2="1901" y2="1512" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1165" font-family="Helvetica, Arial, sans-serif" x="26" y="1536.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1166" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 697.46 ms</tspan></text><line id="SvgjsLine1167" x1="146" y1="1545" x2="1901" y2="1545" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1168" font-family="Helvetica, Arial, sans-serif" x="26" y="1569.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1169" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 712.62 ms</tspan></text><line id="SvgjsLine1170" x1="146" y1="1578" x2="1901" y2="1578" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1171" font-family="Helvetica, Arial, sans-serif" x="26" y="1602.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1172" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 727.79 ms</tspan></text><line id="SvgjsLine1173" x1="146" y1="1611" x2="1901" y2="1611" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1174" font-family="Helvetica, Arial, sans-serif" x="26" y="1634.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1175" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 742.95 ms</tspan></text><line id="SvgjsLine1176" x1="146" y1="1643" x2="1901" y2="1643" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1177" font-family="Helvetica, Arial, sans-serif" x="26" y="1667.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1178" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 758.11 ms</tspan></text><line id="SvgjsLine1179" x1="146" y1="1676" x2="1901" y2="1676" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1180" font-family="Helvetica, Arial, sans-serif" x="26" y="1700.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1181" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 773.27 ms</tspan></text><line id="SvgjsLine1182" x1="146" y1="1709" x2="1901" y2="1709" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1183" font-family="Helvetica, Arial, sans-serif" x="26" y="1732.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1184" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 788.44 ms</tspan></text><line id="SvgjsLine1185" x1="146" y1="1741" x2="1901" y2="1741" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1186" font-family="Helvetica, Arial, sans-serif" x="26" y="1765.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1187" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 803.6 ms</tspan></text><line id="SvgjsLine1188" x1="146" y1="1774" x2="1901" y2="1774" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1189" font-family="Helvetica, Arial, sans-serif" x="26" y="1798.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1190" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 818.76 ms</tspan></text><line id="SvgjsLine1191" x1="146" y1="1807" x2="1901" y2="1807" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1192" font-family="Helvetica, Arial, sans-serif" x="26" y="1831.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1193" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 833.92 ms</tspan></text><line id="SvgjsLine1194" x1="146" y1="1840" x2="1901" y2="1840" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1195" font-family="Helvetica, Arial, sans-serif" x="26" y="1863.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1196" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 849.08 ms</tspan></text><line id="SvgjsLine1197" x1="146" y1="1872" x2="1901" y2="1872" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1198" font-family="Helvetica, Arial, sans-serif" x="26" y="1896.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1199" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 864.25 ms</tspan></text><line id="SvgjsLine1200" x1="146" y1="1905" x2="1901" y2="1905" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1201" font-family="Helvetica, Arial, sans-serif" x="26" y="1929.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1202" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 879.41 ms</tspan></text><line id="SvgjsLine1203" x1="146" y1="1938" x2="1901" y2="1938" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1204" font-family="Helvetica, Arial, sans-serif" x="26" y="1962.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1205" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 894.57 ms</tspan></text><line id="SvgjsLine1206" x1="146" y1="1971" x2="1901" y2="1971" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1207" font-family="Helvetica, Arial, sans-serif" x="26" y="1994.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1208" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 909.73 ms</tspan></text><line id="SvgjsLine1209" x1="146" y1="2003" x2="1901" y2="2003" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1210" font-family="Helvetica, Arial, sans-serif" x="26" y="2027.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1211" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 924.9 ms</tspan></text><line id="SvgjsLine1212" x1="146" y1="2036" x2="1901" y2="2036" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1213" font-family="Helvetica, Arial, sans-serif" x="26" y="2060.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1214" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 940.06 ms</tspan></text><line id="SvgjsLine1215" x1="146" y1="2069" x2="1901" y2="2069" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1216" font-family="Helvetica, Arial, sans-serif" x="26" y="2092.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1217" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 955.22 ms</tspan></text><line id="SvgjsLine1218" x1="146" y1="2101" x2="1901" y2="2101" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1219" font-family="Helvetica, Arial, sans-serif" x="26" y="2125.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1220" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 970.38 ms</tspan></text><line id="SvgjsLine1221" x1="146" y1="2134" x2="1901" y2="2134" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1222" font-family="Helvetica, Arial, sans-serif" x="26" y="2158.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1223" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 985.55 ms</tspan></text><line id="SvgjsLine1224" x1="146" y1="2167" x2="1901" y2="2167" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1225" font-family="Helvetica, Arial, sans-serif" x="26" y="2191.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1226" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1000.71 ms</tspan></text><line id="SvgjsLine1227" x1="146" y1="2200" x2="1901" y2="2200" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1228" font-family="Helvetica, Arial, sans-serif" x="26" y="2223.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1229" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1015.87 ms</tspan></text><line id="SvgjsLine1230" x1="146" y1="2232" x2="1901" y2="2232" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1231" font-family="Helvetica, Arial, sans-serif" x="26" y="2256.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1232" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1031.03 ms</tspan></text><line id="SvgjsLine1233" x1="146" y1="2265" x2="1901" y2="2265" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1234" font-family="Helvetica, Arial, sans-serif" x="26" y="2289.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1235" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1046.2 ms</tspan></text><line id="SvgjsLine1236" x1="146" y1="2298" x2="1901" y2="2298" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1237" font-family="Helvetica, Arial, sans-serif" x="26" y="2322.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1238" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1061.36 ms</tspan></text><line id="SvgjsLine1239" x1="146" y1="2331" x2="1901" y2="2331" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1240" font-family="Helvetica, Arial, sans-serif" x="26" y="2354.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1241" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1076.52 ms</tspan></text><line id="SvgjsLine1242" x1="146" y1="2363" x2="1901" y2="2363" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1243" font-family="Helvetica, Arial, sans-serif" x="26" y="2387.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1244" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1091.68 ms</tspan></text><line id="SvgjsLine1245" x1="146" y1="2396" x2="1901" y2="2396" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1246" font-family="Helvetica, Arial, sans-serif" x="26" y="2420.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1247" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1106.84 ms</tspan></text><line id="SvgjsLine1248" x1="146" y1="2429" x2="1901" y2="2429" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1249" font-family="Helvetica, Arial, sans-serif" x="26" y="2453.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1250" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1122.01 ms</tspan></text><line id="SvgjsLine1251" x1="146" y1="2462" x2="1901" y2="2462" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1252" font-family="Helvetica, Arial, sans-serif" x="26" y="2485.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1253" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1137.17 ms</tspan></text><line id="SvgjsLine1254" x1="146" y1="2494" x2="1901" y2="2494" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1255" font-family="Helvetica, Arial, sans-serif" x="26" y="2518.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1256" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1152.33 ms</tspan></text><line id="SvgjsLine1257" x1="146" y1="2527" x2="1901" y2="2527" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1258" font-family="Helvetica, Arial, sans-serif" x="26" y="2551.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1259" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1167.49 ms</tspan></text><line id="SvgjsLine1260" x1="146" y1="2560" x2="1901" y2="2560" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1261" font-family="Helvetica, Arial, sans-serif" x="26" y="2583.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1262" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1182.66 ms</tspan></text><line id="SvgjsLine1263" x1="146" y1="2592" x2="1901" y2="2592" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1264" font-family="Helvetica, Arial, sans-serif" x="26" y="2616.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1265" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1197.82 ms</tspan></text><line id="SvgjsLine1266" x1="146" y1="2625" x2="1901" y2="2625" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1267" font-family="Helvetica, Arial, sans-serif" x="26" y="2649.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1268" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1212.98 ms</tspan></text><line id="SvgjsLine1269" x1="146" y1="2658" x2="1901" y2="2658" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1270" font-family="Helvetica, Arial, sans-serif" x="26" y="2682.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1271" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1228.14 ms</tspan></text><line id="SvgjsLine1272" x1="146" y1="2691" x2="1901" y2="2691" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1273" font-family="Helvetica, Arial, sans-serif" x="26" y="2714.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1274" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1243.31 ms</tspan></text><line id="SvgjsLine1275" x1="146" y1="2723" x2="1901" y2="2723" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1276" font-family="Helvetica, Arial, sans-serif" x="26" y="2747.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1277" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1258.47 ms</tspan></text><line id="SvgjsLine1278" x1="146" y1="2756" x2="1901" y2="2756" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1279" font-family="Helvetica, Arial, sans-serif" x="26" y="2780.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1280" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1273.63 ms</tspan></text><line id="SvgjsLine1281" x1="146" y1="2789" x2="1901" y2="2789" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1282" font-family="Helvetica, Arial, sans-serif" x="26" y="2813.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1283" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1288.79 ms</tspan></text><line id="SvgjsLine1284" x1="146" y1="2822" x2="1901" y2="2822" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1285" font-family="Helvetica, Arial, sans-serif" x="26" y="2845.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1286" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1303.95 ms</tspan></text><line id="SvgjsLine1287" x1="146" y1="2854" x2="1901" y2="2854" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1288" font-family="Helvetica, Arial, sans-serif" x="26" y="2878.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1289" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1319.12 ms</tspan></text><line id="SvgjsLine1290" x1="146" y1="2887" x2="1901" y2="2887" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1291" font-family="Helvetica, Arial, sans-serif" x="26" y="2911.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1292" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1334.28 ms</tspan></text><line id="SvgjsLine1293" x1="146" y1="2920" x2="1901" y2="2920" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1294" font-family="Helvetica, Arial, sans-serif" x="26" y="2943.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1295" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1349.44 ms</tspan></text><line id="SvgjsLine1296" x1="146" y1="2952" x2="1901" y2="2952" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1297" font-family="Helvetica, Arial, sans-serif" x="26" y="2976.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1298" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1364.6 ms</tspan></text><line id="SvgjsLine1299" x1="146" y1="2985" x2="1901" y2="2985" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1300" font-family="Helvetica, Arial, sans-serif" x="26" y="3009.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1301" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1379.77 ms</tspan></text><line id="SvgjsLine1302" x1="146" y1="3018" x2="1901" y2="3018" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1303" font-family="Helvetica, Arial, sans-serif" x="26" y="3042.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1304" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1394.93 ms</tspan></text><line id="SvgjsLine1305" x1="146" y1="3051" x2="1901" y2="3051" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1306" font-family="Helvetica, Arial, sans-serif" x="26" y="3074.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1307" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1410.09 ms</tspan></text><line id="SvgjsLine1308" x1="146" y1="3083" x2="1901" y2="3083" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1309" font-family="Helvetica, Arial, sans-serif" x="26" y="3107.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1310" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1425.25 ms</tspan></text><line id="SvgjsLine1311" x1="146" y1="3116" x2="1901" y2="3116" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1312" font-family="Helvetica, Arial, sans-serif" x="26" y="3140.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1313" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1440.42 ms</tspan></text><line id="SvgjsLine1314" x1="146" y1="3149" x2="1901" y2="3149" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1315" font-family="Helvetica, Arial, sans-serif" x="26" y="3173.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1316" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1455.58 ms</tspan></text><line id="SvgjsLine1317" x1="146" y1="3182" x2="1901" y2="3182" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1318" font-family="Helvetica, Arial, sans-serif" x="26" y="3205.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1319" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1470.74 ms</tspan></text><line id="SvgjsLine1320" x1="146" y1="3214" x2="1901" y2="3214" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1321" font-family="Helvetica, Arial, sans-serif" x="26" y="3238.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1322" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1485.9 ms</tspan></text><line id="SvgjsLine1323" x1="146" y1="3247" x2="1901" y2="3247" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><text id="SvgjsText1324" font-family="Helvetica, Arial, sans-serif" x="26" y="3271.3015625" font-size="10" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan1325" dy="13" x="26" svgjs:data="{&quot;newLined&quot;:true}">~243 s + 1501.06 ms</tspan></text><line id="SvgjsLine1326" x1="146" y1="3280" x2="1901" y2="3280" stroke-dasharray="5,5" stroke="#a0a0a0" stroke-width="0.5"></line><line id="SvgjsLine1327" x1="146" y1="40" x2="1024" y2="40" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1329)"></line><defs id="SvgjsDefs1328"><marker id="SvgjsMarker1329" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1330" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1334" d="M146 25 L1024 25"></path><marker id="SvgjsMarker1337" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1338" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1342" d="M1024 25 L1024 25"></path><marker id="SvgjsMarker1345" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1346" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1350" d="M1024 25 L1316 25"></path><marker id="SvgjsMarker1353" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1354" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1358" d="M1316 25 L1609 201"></path><marker id="SvgjsMarker1361" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1362" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1366" d="M146 38 L1024 38"></path><marker id="SvgjsMarker1369" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1370" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1374" d="M1024 38 L1024 38"></path><marker id="SvgjsMarker1377" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1378" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1382" d="M1024 38 L1316 38"></path><marker id="SvgjsMarker1385" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1386" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1390" d="M1316 38 L1609 212"></path><marker id="SvgjsMarker1393" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1394" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1398" d="M146 42 L1024 42"></path><marker id="SvgjsMarker1401" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1402" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1406" d="M1024 42 L1024 42"></path><marker id="SvgjsMarker1409" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1410" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1414" d="M1024 42 L1316 42"></path><marker id="SvgjsMarker1417" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1418" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1422" d="M1316 42 L1609 214"></path><marker id="SvgjsMarker1425" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1426" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1430" d="M146 50 L1024 50"></path><marker id="SvgjsMarker1433" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1434" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1438" d="M1024 50 L1024 50"></path><marker id="SvgjsMarker1441" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1442" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1446" d="M1024 50 L1316 50"></path><marker id="SvgjsMarker1449" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1450" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1454" d="M1316 50 L1609 216"></path><marker id="SvgjsMarker1457" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1458" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1462" d="M146 74 L1024 74"></path><marker id="SvgjsMarker1465" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1466" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1470" d="M1024 74 L1024 74"></path><marker id="SvgjsMarker1473" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1474" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1478" d="M1024 74 L1316 74"></path><marker id="SvgjsMarker1481" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1482" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1486" d="M1316 74 L1609 219"></path><marker id="SvgjsMarker1489" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1490" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1494" d="M146 82 L1024 82"></path><marker id="SvgjsMarker1497" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1498" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1502" d="M1024 82 L1024 82"></path><marker id="SvgjsMarker1505" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1506" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1510" d="M1024 82 L1316 82"></path><marker id="SvgjsMarker1513" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1514" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1518" d="M1316 82 L1609 253"></path><marker id="SvgjsMarker1521" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1522" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1526" d="M146 92 L1024 92"></path><marker id="SvgjsMarker1529" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1530" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1534" d="M1024 92 L1024 92"></path><marker id="SvgjsMarker1537" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1538" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1542" d="M1024 92 L1316 92"></path><marker id="SvgjsMarker1545" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1546" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1550" d="M1316 92 L1609 3228"></path><marker id="SvgjsMarker1553" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1554" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1558" d="M146 94 L1024 94"></path><marker id="SvgjsMarker1561" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1562" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1566" d="M1024 94 L1024 94"></path><marker id="SvgjsMarker1569" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1570" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1574" d="M1024 94 L1316 94"></path><marker id="SvgjsMarker1577" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1578" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1582" d="M1316 94 L1609 3235"></path><marker id="SvgjsMarker1585" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1586" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1590" d="M146 97 L1024 97"></path><marker id="SvgjsMarker1593" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1594" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1598" d="M1024 97 L1024 97"></path><marker id="SvgjsMarker1601" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1602" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1606" d="M1024 97 L1316 97"></path><marker id="SvgjsMarker1609" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1610" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1614" d="M1316 97 L1609 3235"></path><marker id="SvgjsMarker1617" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1618" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1622" d="M146 139 L1024 139"></path><marker id="SvgjsMarker1625" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1626" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1630" d="M1024 139 L1024 139"></path><marker id="SvgjsMarker1633" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1634" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1638" d="M1024 139 L1316 139"></path><marker id="SvgjsMarker1641" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1642" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1646" d="M1316 139 L1609 3287"></path><marker id="SvgjsMarker1649" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1650" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1654" d="M146 140 L1024 140"></path><marker id="SvgjsMarker1657" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1658" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1662" d="M1024 140 L1024 140"></path><marker id="SvgjsMarker1665" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1666" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1670" d="M1024 140 L1316 140"></path><marker id="SvgjsMarker1673" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1674" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1678" d="M1316 140 L1609 3287"></path><marker id="SvgjsMarker1681" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1682" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1686" d="M146 157 L1024 157"></path><marker id="SvgjsMarker1689" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1690" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1694" d="M1024 157 L1024 157"></path><marker id="SvgjsMarker1697" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1698" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1702" d="M1024 157 L1316 157"></path><marker id="SvgjsMarker1705" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1706" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1710" d="M1316 157 L1609 3298"></path><marker id="SvgjsMarker1713" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1714" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1718" d="M146 157 L1024 157"></path><marker id="SvgjsMarker1721" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1722" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1726" d="M1024 157 L1024 157"></path><marker id="SvgjsMarker1729" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1730" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1734" d="M1024 157 L1316 157"></path><marker id="SvgjsMarker1737" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1738" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1742" d="M1316 157 L1609 3298"></path><marker id="SvgjsMarker1745" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1746" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1750" d="M146 171 L1024 171"></path><marker id="SvgjsMarker1753" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1754" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1758" d="M1024 171 L1024 171"></path><marker id="SvgjsMarker1761" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1762" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1766" d="M1024 171 L1316 171"></path><marker id="SvgjsMarker1769" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1770" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1774" d="M1316 171 L1609 3298"></path><marker id="SvgjsMarker1777" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1778" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1782" d="M146 171 L1024 171"></path><marker id="SvgjsMarker1785" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1786" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1790" d="M1024 171 L1024 171"></path><marker id="SvgjsMarker1793" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1794" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1798" d="M1024 171 L1316 171"></path><marker id="SvgjsMarker1801" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1802" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1806" d="M1316 171 L1609 3298"></path><marker id="SvgjsMarker1809" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1810" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1814" d="M146 172 L1024 172"></path><marker id="SvgjsMarker1817" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1818" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1822" d="M1024 172 L1024 172"></path><marker id="SvgjsMarker1825" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1826" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1830" d="M1024 172 L1316 172"></path><marker id="SvgjsMarker1833" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1834" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath1838" d="M1316 172 L1609 3298"></path><marker id="SvgjsMarker1841" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1842" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1846" d="M438 251 L1024 251"></path><marker id="SvgjsMarker1849" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1850" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1854" d="M1024 251 L1024 251"></path><marker id="SvgjsMarker1857" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1858" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1862" d="M1024 251 L1316 251"></path><marker id="SvgjsMarker1865" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1866" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath1870" d="M1316 251 L1901 251"></path><marker id="SvgjsMarker1873" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1874" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1878" d="M438 268 L1024 268"></path><marker id="SvgjsMarker1881" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1882" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1886" d="M1024 268 L1024 268"></path><marker id="SvgjsMarker1889" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1890" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1894" d="M1024 268 L1316 268"></path><marker id="SvgjsMarker1897" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1898" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath1902" d="M1316 268 L1901 268"></path><marker id="SvgjsMarker1905" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1906" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1910" d="M438 277 L1024 277"></path><marker id="SvgjsMarker1913" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1914" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1918" d="M1024 277 L1024 277"></path><marker id="SvgjsMarker1921" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1922" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1926" d="M1024 277 L1316 277"></path><marker id="SvgjsMarker1929" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1930" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath1934" d="M1316 277 L1901 277"></path><marker id="SvgjsMarker1937" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1938" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1942" d="M146 328 L1024 328"></path><marker id="SvgjsMarker1945" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1946" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1950" d="M1024 328 L1024 328"></path><marker id="SvgjsMarker1953" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1954" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1958" d="M1024 328 L1316 329"></path><marker id="SvgjsMarker1961" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1962" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath1966" d="M1316 329 L1901 329"></path><marker id="SvgjsMarker1969" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1970" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1974" d="M438 861 L1024 861"></path><marker id="SvgjsMarker1977" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1978" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1982" d="M1024 861 L1024 861"></path><marker id="SvgjsMarker1985" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1986" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1990" d="M1024 861 L1316 3163"></path><marker id="SvgjsMarker1993" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline1994" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath1998" d="M1316 3163 L1901 3164"></path><marker id="SvgjsMarker2001" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2002" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2006" d="M146 877 L1024 877"></path><marker id="SvgjsMarker2009" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2010" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2014" d="M1024 877 L1024 877"></path><marker id="SvgjsMarker2017" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2018" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2022" d="M1024 877 L1316 3163"></path><marker id="SvgjsMarker2025" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2026" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2030" d="M1316 3163 L1901 3164"></path><marker id="SvgjsMarker2033" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2034" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2038" d="M731 923 L1024 923"></path><marker id="SvgjsMarker2041" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2042" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2046" d="M1024 923 L1024 924"></path><marker id="SvgjsMarker2049" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2050" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2054" d="M1024 924 L1316 3165"></path><marker id="SvgjsMarker2057" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2058" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2062" d="M1316 3165 L1901 3170"></path><marker id="SvgjsMarker2065" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2066" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2070" d="M731 924 L1024 924"></path><marker id="SvgjsMarker2073" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2074" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2078" d="M1024 924 L1024 924"></path><marker id="SvgjsMarker2081" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2082" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2086" d="M1024 924 L1316 3165"></path><marker id="SvgjsMarker2089" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2090" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2094" d="M1316 3165 L1901 3166"></path><marker id="SvgjsMarker2097" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2098" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2102" d="M731 925 L1024 925"></path><marker id="SvgjsMarker2105" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2106" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2110" d="M1024 925 L1024 925"></path><marker id="SvgjsMarker2113" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2114" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2118" d="M1024 925 L1316 3165"></path><marker id="SvgjsMarker2121" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2122" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2126" d="M1316 3165 L1901 3170"></path><marker id="SvgjsMarker2129" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2130" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2134" d="M731 925 L1024 925"></path><marker id="SvgjsMarker2137" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2138" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2142" d="M1024 925 L1024 925"></path><marker id="SvgjsMarker2145" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2146" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2150" d="M1024 925 L1316 3165"></path><marker id="SvgjsMarker2153" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2154" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2158" d="M1316 3165 L1901 3170"></path><marker id="SvgjsMarker2161" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2162" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2166" d="M438 934 L1024 934"></path><marker id="SvgjsMarker2169" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2170" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2174" d="M1024 934 L1024 934"></path><marker id="SvgjsMarker2177" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2178" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2182" d="M1024 934 L1316 3166"></path><marker id="SvgjsMarker2185" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2186" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2190" d="M1316 3166 L1901 3168"></path><marker id="SvgjsMarker2193" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2194" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2198" d="M146 952 L1024 952"></path><marker id="SvgjsMarker2201" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2202" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2206" d="M1024 952 L1024 952"></path><marker id="SvgjsMarker2209" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2210" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2214" d="M1024 952 L1316 3165"></path><marker id="SvgjsMarker2217" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2218" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2222" d="M1316 3165 L1901 3168"></path><marker id="SvgjsMarker2225" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2226" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2230" d="M146 954 L1024 954"></path><marker id="SvgjsMarker2233" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2234" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2238" d="M1024 954 L1024 954"></path><marker id="SvgjsMarker2241" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2242" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2246" d="M1024 954 L1316 3166"></path><marker id="SvgjsMarker2249" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2250" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2254" d="M1316 3166 L1901 3168"></path><marker id="SvgjsMarker2257" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2258" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2262" d="M146 957 L1024 957"></path><marker id="SvgjsMarker2265" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2266" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2270" d="M1024 957 L1024 957"></path><marker id="SvgjsMarker2273" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2274" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2278" d="M1024 957 L1316 3165"></path><marker id="SvgjsMarker2281" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2282" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2286" d="M1316 3165 L1901 3168"></path><marker id="SvgjsMarker2289" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2290" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2294" d="M438 1240 L1024 1240"></path><marker id="SvgjsMarker2297" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2298" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2302" d="M1024 1240 L1024 1240"></path><marker id="SvgjsMarker2305" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2306" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2310" d="M1024 1240 L1316 3166"></path><marker id="SvgjsMarker2313" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2314" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2318" d="M1316 3166 L1901 3168"></path><marker id="SvgjsMarker2321" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2322" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2326" d="M146 1241 L1024 1241"></path><marker id="SvgjsMarker2329" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2330" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2334" d="M1024 1241 L1024 1241"></path><marker id="SvgjsMarker2337" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2338" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2342" d="M1024 1241 L1316 3165"></path><marker id="SvgjsMarker2345" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2346" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2350" d="M1316 3165 L1901 3168"></path><marker id="SvgjsMarker2353" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2354" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2358" d="M146 1270 L1024 1270"></path><marker id="SvgjsMarker2361" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2362" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2366" d="M1024 1270 L1024 1270"></path><marker id="SvgjsMarker2369" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2370" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2374" d="M1024 1270 L1316 3165"></path><marker id="SvgjsMarker2377" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2378" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2382" d="M1316 3165 L1901 3168"></path><marker id="SvgjsMarker2385" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2386" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2390" d="M146 1270 L1024 1270"></path><marker id="SvgjsMarker2393" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2394" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2398" d="M1024 1270 L1024 1270"></path><marker id="SvgjsMarker2401" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2402" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2406" d="M1024 1270 L1316 3165"></path><marker id="SvgjsMarker2409" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2410" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2414" d="M1316 3165 L1901 3168"></path><marker id="SvgjsMarker2417" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2418" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2422" d="M146 1274 L1024 1274"></path><marker id="SvgjsMarker2425" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2426" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2430" d="M1024 1274 L1024 1274"></path><marker id="SvgjsMarker2433" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2434" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2438" d="M1024 1274 L1316 3165"></path><marker id="SvgjsMarker2441" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2442" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2446" d="M1316 3165 L1901 3168"></path><marker id="SvgjsMarker2449" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2450" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2454" d="M146 1276 L1024 1276"></path><marker id="SvgjsMarker2457" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2458" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2462" d="M1024 1276 L1024 1276"></path><marker id="SvgjsMarker2465" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2466" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2470" d="M1024 1276 L1316 3167"></path><marker id="SvgjsMarker2473" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2474" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2478" d="M1316 3167 L1901 3170"></path><marker id="SvgjsMarker2481" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2482" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2486" d="M438 1299 L1024 1299"></path><marker id="SvgjsMarker2489" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2490" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2494" d="M1024 1299 L1024 1299"></path><marker id="SvgjsMarker2497" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2498" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2502" d="M1024 1299 L1316 3166"></path><marker id="SvgjsMarker2505" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2506" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2510" d="M1316 3166 L1901 3168"></path><marker id="SvgjsMarker2513" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2514" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2518" d="M438 1330 L1024 1330"></path><marker id="SvgjsMarker2521" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2522" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2526" d="M1024 1330 L1024 1331"></path><marker id="SvgjsMarker2529" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2530" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2534" d="M1024 1331 L1316 3166"></path><marker id="SvgjsMarker2537" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2538" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2542" d="M1316 3166 L1901 3168"></path><marker id="SvgjsMarker2545" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2546" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2550" d="M438 1480 L1024 1480"></path><marker id="SvgjsMarker2553" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2554" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2558" d="M1024 1480 L1024 1480"></path><marker id="SvgjsMarker2561" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2562" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2566" d="M1024 1480 L1316 3166"></path><marker id="SvgjsMarker2569" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2570" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2574" d="M1316 3166 L1901 3168"></path><marker id="SvgjsMarker2577" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2578" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2582" d="M438 1484 L1024 1484"></path><marker id="SvgjsMarker2585" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2586" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2590" d="M1024 1484 L1024 1484"></path><marker id="SvgjsMarker2593" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2594" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2598" d="M1024 1484 L1316 3166"></path><marker id="SvgjsMarker2601" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2602" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2606" d="M1316 3166 L1901 3168"></path><marker id="SvgjsMarker2609" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2610" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2614" d="M438 1543 L1024 1543"></path><marker id="SvgjsMarker2617" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2618" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2622" d="M1024 1543 L1024 1543"></path><marker id="SvgjsMarker2625" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2626" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2630" d="M1024 1543 L1316 3166"></path><marker id="SvgjsMarker2633" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2634" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2638" d="M1316 3166 L1901 3168"></path><marker id="SvgjsMarker2641" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2642" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2646" d="M438 1550 L1024 1550"></path><marker id="SvgjsMarker2649" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2650" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2654" d="M1024 1550 L1024 1550"></path><marker id="SvgjsMarker2657" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2658" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2662" d="M1024 1550 L1316 3166"></path><marker id="SvgjsMarker2665" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2666" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2670" d="M1316 3166 L1901 3168"></path><marker id="SvgjsMarker2673" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2674" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2678" d="M146 1551 L1024 1551"></path><marker id="SvgjsMarker2681" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2682" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2686" d="M1024 1551 L1024 1551"></path><marker id="SvgjsMarker2689" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2690" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2694" d="M1024 1551 L1316 3166"></path><marker id="SvgjsMarker2697" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2698" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2702" d="M1316 3166 L1901 3170"></path><marker id="SvgjsMarker2705" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2706" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2710" d="M438 2357 L1024 2357"></path><marker id="SvgjsMarker2713" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2714" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2718" d="M1024 2357 L1024 2357"></path><marker id="SvgjsMarker2721" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2722" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2726" d="M1024 2357 L1316 3166"></path><marker id="SvgjsMarker2729" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2730" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2734" d="M1316 3166 L1901 3168"></path><marker id="SvgjsMarker2737" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2738" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2742" d="M146 2401 L1024 2401"></path><marker id="SvgjsMarker2745" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2746" points="0,0 10,5 0,10" fill="brown" stroke-dasharray="2,2" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2750" d="M1024 2401 L1024 2401"></path><marker id="SvgjsMarker2753" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2754" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2758" d="M1024 2401 L1316 3166"></path><marker id="SvgjsMarker2761" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2762" points="0,0 10,5 0,10" fill="brown" stroke="brown" stroke-width="1"></polyline></marker><path id="SvgjsPath2766" d="M1316 3166 L1901 3170"></path><marker id="SvgjsMarker2769" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2770" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2774" d="M146 2409 L1024 2409"></path><marker id="SvgjsMarker2777" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2778" points="0,0 10,5 0,10" fill="green" stroke-dasharray="2,2" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2782" d="M1024 2409 L1024 2409"></path><marker id="SvgjsMarker2785" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2786" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2790" d="M1024 2409 L1316 3166"></path><marker id="SvgjsMarker2793" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2794" points="0,0 10,5 0,10" fill="green" stroke="green" stroke-width="1"></polyline></marker><path id="SvgjsPath2798" d="M1316 3166 L1901 3170"></path><marker id="SvgjsMarker2801" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2802" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2806" d="M146 2434 L1024 2434"></path><marker id="SvgjsMarker2809" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2810" points="0,0 10,5 0,10" fill="blue" stroke-dasharray="2,2" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2814" d="M1024 2434 L1024 2434"></path><marker id="SvgjsMarker2817" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2818" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2822" d="M1024 2434 L1316 3166"></path><marker id="SvgjsMarker2825" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2826" points="0,0 10,5 0,10" fill="blue" stroke="blue" stroke-width="1"></polyline></marker><path id="SvgjsPath2830" d="M1316 3166 L1901 3170"></path><marker id="SvgjsMarker2833" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2834" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2838" d="M146 2443 L1024 2443"></path><marker id="SvgjsMarker2841" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2842" points="0,0 10,5 0,10" fill="purple" stroke-dasharray="2,2" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2846" d="M1024 2443 L1024 2443"></path><marker id="SvgjsMarker2849" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2850" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2854" d="M1024 2443 L1316 3166"></path><marker id="SvgjsMarker2857" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2858" points="0,0 10,5 0,10" fill="purple" stroke="purple" stroke-width="1"></polyline></marker><path id="SvgjsPath2862" d="M1316 3166 L1901 3170"></path><marker id="SvgjsMarker2865" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2866" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2870" d="M146 2444 L1024 2444"></path><marker id="SvgjsMarker2873" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2874" points="0,0 10,5 0,10" fill="red" stroke-dasharray="2,2" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2878" d="M1024 2444 L1024 2444"></path><marker id="SvgjsMarker2881" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2882" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2886" d="M1024 2444 L1316 3165"></path><marker id="SvgjsMarker2889" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2890" points="0,0 10,5 0,10" fill="red" stroke="red" stroke-width="1"></polyline></marker><path id="SvgjsPath2894" d="M1316 3165 L1901 3170"></path><marker id="SvgjsMarker2897" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2898" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2902" d="M146 2476 L1024 2476"></path><marker id="SvgjsMarker2905" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2906" points="0,0 10,5 0,10" fill="orange" stroke-dasharray="2,2" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2910" d="M1024 2476 L1024 2476"></path><marker id="SvgjsMarker2913" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2914" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2918" d="M1024 2476 L1316 3165"></path><marker id="SvgjsMarker2921" markerWidth="20" markerHeight="10" refX="10" refY="5" viewBox="0 0 20 10" orient="auto"><polyline id="SvgjsPolyline2922" points="0,0 10,5 0,10" fill="orange" stroke="orange" stroke-width="1"></polyline></marker><path id="SvgjsPath2926" d="M1316 3165 L1901 3170"></path></defs><a id="SvgjsA1335" href="plot-ipc-62332-108196-1586293075691-50.html#1"><text id="SvgjsText1331" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1333" href="#SvgjsPath1334"><tspan id="SvgjsTspan1332" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PNecko::Msg_PredLearn (840)</tspan></textPath></text></a><line id="SvgjsLine1336" x1="1024" y1="40" x2="1024" y2="40" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1337)"></line><a id="SvgjsA1343" href="plot-ipc-62332-108196-1586293075691-50.html#1"><text id="SvgjsText1339" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1341" href="#SvgjsPath1342"><tspan id="SvgjsTspan1340" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PNecko::Msg_PredLearn (840)</tspan></textPath></text></a><line id="SvgjsLine1344" x1="1024" y1="40" x2="1316" y2="40" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1345)"></line><a id="SvgjsA1351" href="plot-ipc-62332-108196-1586293075691-50.html#1"><text id="SvgjsText1347" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1349" href="#SvgjsPath1350"><tspan id="SvgjsTspan1348" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PNecko::Msg_PredLearn (840)</tspan></textPath></text></a><line id="SvgjsLine1352" x1="1316" y1="40" x2="1609" y2="216" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1353)"></line><a id="SvgjsA1359" href="plot-ipc-62332-108196-1586293075691-50.html#1"><text id="SvgjsText1355" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1357" href="#SvgjsPath1358"><tspan id="SvgjsTspan1356" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">1. PNecko::Msg_PredLearn (840)</tspan></textPath></text></a><line id="SvgjsLine1360" x1="146" y1="53" x2="1024" y2="53" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1361)"></line><a id="SvgjsA1367" href="plot-ipc-62332-108196-1586293075691-50.html#2"><text id="SvgjsText1363" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1365" href="#SvgjsPath1366"><tspan id="SvgjsTspan1364" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PNecko::Msg_PHttpChannelConstructor (8552)</tspan></textPath></text></a><line id="SvgjsLine1368" x1="1024" y1="53" x2="1024" y2="53" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1369)"></line><a id="SvgjsA1375" href="plot-ipc-62332-108196-1586293075691-50.html#2"><text id="SvgjsText1371" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1373" href="#SvgjsPath1374"><tspan id="SvgjsTspan1372" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PNecko::Msg_PHttpChannelConstructor (8552)</tspan></textPath></text></a><line id="SvgjsLine1376" x1="1024" y1="53" x2="1316" y2="53" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1377)"></line><a id="SvgjsA1383" href="plot-ipc-62332-108196-1586293075691-50.html#2"><text id="SvgjsText1379" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1381" href="#SvgjsPath1382"><tspan id="SvgjsTspan1380" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PNecko::Msg_PHttpChannelConstructor (8552)</tspan></textPath></text></a><line id="SvgjsLine1384" x1="1316" y1="53" x2="1609" y2="227" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1385)"></line><a id="SvgjsA1391" href="plot-ipc-62332-108196-1586293075691-50.html#2"><text id="SvgjsText1387" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1389" href="#SvgjsPath1390"><tspan id="SvgjsTspan1388" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">2. PNecko::Msg_PHttpChannelConstructor (8552)</tspan></textPath></text></a><line id="SvgjsLine1392" x1="146" y1="57" x2="1024" y2="57" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1393)"></line><a id="SvgjsA1399" href="plot-ipc-62332-108196-1586293075691-50.html#3"><text id="SvgjsText1395" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1397" href="#SvgjsPath1398"><tspan id="SvgjsTspan1396" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PNecko::Msg_PredLearn (1140)</tspan></textPath></text></a><line id="SvgjsLine1400" x1="1024" y1="57" x2="1024" y2="57" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1401)"></line><a id="SvgjsA1407" href="plot-ipc-62332-108196-1586293075691-50.html#3"><text id="SvgjsText1403" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1405" href="#SvgjsPath1406"><tspan id="SvgjsTspan1404" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PNecko::Msg_PredLearn (1140)</tspan></textPath></text></a><line id="SvgjsLine1408" x1="1024" y1="57" x2="1316" y2="57" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1409)"></line><a id="SvgjsA1415" href="plot-ipc-62332-108196-1586293075691-50.html#3"><text id="SvgjsText1411" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1413" href="#SvgjsPath1414"><tspan id="SvgjsTspan1412" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PNecko::Msg_PredLearn (1140)</tspan></textPath></text></a><line id="SvgjsLine1416" x1="1316" y1="57" x2="1609" y2="229" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1417)"></line><a id="SvgjsA1423" href="plot-ipc-62332-108196-1586293075691-50.html#3"><text id="SvgjsText1419" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1421" href="#SvgjsPath1422"><tspan id="SvgjsTspan1420" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">3. PNecko::Msg_PredLearn (1140)</tspan></textPath></text></a><line id="SvgjsLine1424" x1="146" y1="65" x2="1024" y2="65" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1425)"></line><a id="SvgjsA1431" href="plot-ipc-62332-108196-1586293075691-50.html#4"><text id="SvgjsText1427" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1429" href="#SvgjsPath1430"><tspan id="SvgjsTspan1428" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PHttpChannelConstructor (8472)</tspan></textPath></text></a><line id="SvgjsLine1432" x1="1024" y1="65" x2="1024" y2="65" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1433)"></line><a id="SvgjsA1439" href="plot-ipc-62332-108196-1586293075691-50.html#4"><text id="SvgjsText1435" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1437" href="#SvgjsPath1438"><tspan id="SvgjsTspan1436" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PHttpChannelConstructor (8472)</tspan></textPath></text></a><line id="SvgjsLine1440" x1="1024" y1="65" x2="1316" y2="65" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1441)"></line><a id="SvgjsA1447" href="plot-ipc-62332-108196-1586293075691-50.html#4"><text id="SvgjsText1443" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1445" href="#SvgjsPath1446"><tspan id="SvgjsTspan1444" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PHttpChannelConstructor (8472)</tspan></textPath></text></a><line id="SvgjsLine1448" x1="1316" y1="65" x2="1609" y2="231" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1449)"></line><a id="SvgjsA1455" href="plot-ipc-62332-108196-1586293075691-50.html#4"><text id="SvgjsText1451" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1453" href="#SvgjsPath1454"><tspan id="SvgjsTspan1452" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">4. PNecko::Msg_PHttpChannelConstructor (8472)</tspan></textPath></text></a><line id="SvgjsLine1456" x1="146" y1="89" x2="1024" y2="89" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1457)"></line><a id="SvgjsA1463" href="plot-ipc-62332-108196-1586293075691-50.html#5"><text id="SvgjsText1459" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1461" href="#SvgjsPath1462"><tspan id="SvgjsTspan1460" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PNecko::Msg_PHttpChannelConstructor (11996)</tspan></textPath></text></a><line id="SvgjsLine1464" x1="1024" y1="89" x2="1024" y2="89" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1465)"></line><a id="SvgjsA1471" href="plot-ipc-62332-108196-1586293075691-50.html#5"><text id="SvgjsText1467" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1469" href="#SvgjsPath1470"><tspan id="SvgjsTspan1468" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PNecko::Msg_PHttpChannelConstructor (11996)</tspan></textPath></text></a><line id="SvgjsLine1472" x1="1024" y1="89" x2="1316" y2="89" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1473)"></line><a id="SvgjsA1479" href="plot-ipc-62332-108196-1586293075691-50.html#5"><text id="SvgjsText1475" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1477" href="#SvgjsPath1478"><tspan id="SvgjsTspan1476" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PNecko::Msg_PHttpChannelConstructor (11996)</tspan></textPath></text></a><line id="SvgjsLine1480" x1="1316" y1="89" x2="1609" y2="234" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1481)"></line><a id="SvgjsA1487" href="plot-ipc-62332-108196-1586293075691-50.html#5"><text id="SvgjsText1483" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1485" href="#SvgjsPath1486"><tspan id="SvgjsTspan1484" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">5. PNecko::Msg_PHttpChannelConstructor (11996)</tspan></textPath></text></a><line id="SvgjsLine1488" x1="146" y1="97" x2="1024" y2="97" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1489)"></line><a id="SvgjsA1495" href="plot-ipc-62332-108196-1586293075691-50.html#6"><text id="SvgjsText1491" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1493" href="#SvgjsPath1494"><tspan id="SvgjsTspan1492" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1496" x1="1024" y1="97" x2="1024" y2="97" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1497)"></line><a id="SvgjsA1503" href="plot-ipc-62332-108196-1586293075691-50.html#6"><text id="SvgjsText1499" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1501" href="#SvgjsPath1502"><tspan id="SvgjsTspan1500" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1504" x1="1024" y1="97" x2="1316" y2="97" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1505)"></line><a id="SvgjsA1511" href="plot-ipc-62332-108196-1586293075691-50.html#6"><text id="SvgjsText1507" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1509" href="#SvgjsPath1510"><tspan id="SvgjsTspan1508" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1512" x1="1316" y1="97" x2="1609" y2="268" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1513)"></line><a id="SvgjsA1519" href="plot-ipc-62332-108196-1586293075691-50.html#6"><text id="SvgjsText1515" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1517" href="#SvgjsPath1518"><tspan id="SvgjsTspan1516" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">6. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1520" x1="146" y1="107" x2="1024" y2="107" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1521)"></line><a id="SvgjsA1527" href="plot-ipc-62332-108196-1586293075691-50.html#7"><text id="SvgjsText1523" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1525" href="#SvgjsPath1526"><tspan id="SvgjsTspan1524" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1528" x1="1024" y1="107" x2="1024" y2="107" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1529)"></line><a id="SvgjsA1535" href="plot-ipc-62332-108196-1586293075691-50.html#7"><text id="SvgjsText1531" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1533" href="#SvgjsPath1534"><tspan id="SvgjsTspan1532" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1536" x1="1024" y1="107" x2="1316" y2="107" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1537)"></line><a id="SvgjsA1543" href="plot-ipc-62332-108196-1586293075691-50.html#7"><text id="SvgjsText1539" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1541" href="#SvgjsPath1542"><tspan id="SvgjsTspan1540" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1544" x1="1316" y1="107" x2="1609" y2="3243" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1545)"></line><a id="SvgjsA1551" href="plot-ipc-62332-108196-1586293075691-50.html#7"><text id="SvgjsText1547" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1549" href="#SvgjsPath1550"><tspan id="SvgjsTspan1548" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">7. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1552" x1="146" y1="109" x2="1024" y2="109" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1553)"></line><a id="SvgjsA1559" href="plot-ipc-62332-108196-1586293075691-50.html#8"><text id="SvgjsText1555" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1557" href="#SvgjsPath1558"><tspan id="SvgjsTspan1556" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1560" x1="1024" y1="109" x2="1024" y2="109" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1561)"></line><a id="SvgjsA1567" href="plot-ipc-62332-108196-1586293075691-50.html#8"><text id="SvgjsText1563" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1565" href="#SvgjsPath1566"><tspan id="SvgjsTspan1564" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1568" x1="1024" y1="109" x2="1316" y2="109" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1569)"></line><a id="SvgjsA1575" href="plot-ipc-62332-108196-1586293075691-50.html#8"><text id="SvgjsText1571" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1573" href="#SvgjsPath1574"><tspan id="SvgjsTspan1572" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1576" x1="1316" y1="109" x2="1609" y2="3250" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1577)"></line><a id="SvgjsA1583" href="plot-ipc-62332-108196-1586293075691-50.html#8"><text id="SvgjsText1579" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1581" href="#SvgjsPath1582"><tspan id="SvgjsTspan1580" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">8. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1584" x1="146" y1="112" x2="1024" y2="112" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1585)"></line><a id="SvgjsA1591" href="plot-ipc-62332-108196-1586293075691-50.html#9"><text id="SvgjsText1587" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1589" href="#SvgjsPath1590"><tspan id="SvgjsTspan1588" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PNecko::Msg_PHttpChannelConstructor (9928)</tspan></textPath></text></a><line id="SvgjsLine1592" x1="1024" y1="112" x2="1024" y2="112" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1593)"></line><a id="SvgjsA1599" href="plot-ipc-62332-108196-1586293075691-50.html#9"><text id="SvgjsText1595" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1597" href="#SvgjsPath1598"><tspan id="SvgjsTspan1596" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PNecko::Msg_PHttpChannelConstructor (9928)</tspan></textPath></text></a><line id="SvgjsLine1600" x1="1024" y1="112" x2="1316" y2="112" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1601)"></line><a id="SvgjsA1607" href="plot-ipc-62332-108196-1586293075691-50.html#9"><text id="SvgjsText1603" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1605" href="#SvgjsPath1606"><tspan id="SvgjsTspan1604" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PNecko::Msg_PHttpChannelConstructor (9928)</tspan></textPath></text></a><line id="SvgjsLine1608" x1="1316" y1="112" x2="1609" y2="3250" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1609)"></line><a id="SvgjsA1615" href="plot-ipc-62332-108196-1586293075691-50.html#9"><text id="SvgjsText1611" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1613" href="#SvgjsPath1614"><tspan id="SvgjsTspan1612" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">9. PNecko::Msg_PHttpChannelConstructor (9928)</tspan></textPath></text></a><line id="SvgjsLine1616" x1="146" y1="154" x2="1024" y2="154" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1617)"></line><a id="SvgjsA1623" href="plot-ipc-62332-108196-1586293075691-50.html#10"><text id="SvgjsText1619" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1621" href="#SvgjsPath1622"><tspan id="SvgjsTspan1620" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PNecko::Msg_PHttpChannelConstructor (8464)</tspan></textPath></text></a><line id="SvgjsLine1624" x1="1024" y1="154" x2="1024" y2="154" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1625)"></line><a id="SvgjsA1631" href="plot-ipc-62332-108196-1586293075691-50.html#10"><text id="SvgjsText1627" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1629" href="#SvgjsPath1630"><tspan id="SvgjsTspan1628" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PNecko::Msg_PHttpChannelConstructor (8464)</tspan></textPath></text></a><line id="SvgjsLine1632" x1="1024" y1="154" x2="1316" y2="154" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1633)"></line><a id="SvgjsA1639" href="plot-ipc-62332-108196-1586293075691-50.html#10"><text id="SvgjsText1635" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1637" href="#SvgjsPath1638"><tspan id="SvgjsTspan1636" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PNecko::Msg_PHttpChannelConstructor (8464)</tspan></textPath></text></a><line id="SvgjsLine1640" x1="1316" y1="154" x2="1609" y2="3302" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1641)"></line><a id="SvgjsA1647" href="plot-ipc-62332-108196-1586293075691-50.html#10"><text id="SvgjsText1643" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1645" href="#SvgjsPath1646"><tspan id="SvgjsTspan1644" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">10. PNecko::Msg_PHttpChannelConstructor (8464)</tspan></textPath></text></a><line id="SvgjsLine1648" x1="146" y1="155" x2="1024" y2="155" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1649)"></line><a id="SvgjsA1655" href="plot-ipc-62332-108196-1586293075691-50.html#11"><text id="SvgjsText1651" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1653" href="#SvgjsPath1654"><tspan id="SvgjsTspan1652" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PNecko::Msg_PHttpChannelConstructor (8464)</tspan></textPath></text></a><line id="SvgjsLine1656" x1="1024" y1="155" x2="1024" y2="155" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1657)"></line><a id="SvgjsA1663" href="plot-ipc-62332-108196-1586293075691-50.html#11"><text id="SvgjsText1659" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1661" href="#SvgjsPath1662"><tspan id="SvgjsTspan1660" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PNecko::Msg_PHttpChannelConstructor (8464)</tspan></textPath></text></a><line id="SvgjsLine1664" x1="1024" y1="155" x2="1316" y2="155" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1665)"></line><a id="SvgjsA1671" href="plot-ipc-62332-108196-1586293075691-50.html#11"><text id="SvgjsText1667" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1669" href="#SvgjsPath1670"><tspan id="SvgjsTspan1668" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PNecko::Msg_PHttpChannelConstructor (8464)</tspan></textPath></text></a><line id="SvgjsLine1672" x1="1316" y1="155" x2="1609" y2="3302" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1673)"></line><a id="SvgjsA1679" href="plot-ipc-62332-108196-1586293075691-50.html#11"><text id="SvgjsText1675" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1677" href="#SvgjsPath1678"><tspan id="SvgjsTspan1676" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">11. PNecko::Msg_PHttpChannelConstructor (8464)</tspan></textPath></text></a><line id="SvgjsLine1680" x1="146" y1="172" x2="1024" y2="172" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1681)"></line><a id="SvgjsA1687" href="plot-ipc-62332-108196-1586293075691-50.html#12"><text id="SvgjsText1683" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1685" href="#SvgjsPath1686"><tspan id="SvgjsTspan1684" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1688" x1="1024" y1="172" x2="1024" y2="172" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1689)"></line><a id="SvgjsA1695" href="plot-ipc-62332-108196-1586293075691-50.html#12"><text id="SvgjsText1691" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1693" href="#SvgjsPath1694"><tspan id="SvgjsTspan1692" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1696" x1="1024" y1="172" x2="1316" y2="172" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1697)"></line><a id="SvgjsA1703" href="plot-ipc-62332-108196-1586293075691-50.html#12"><text id="SvgjsText1699" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1701" href="#SvgjsPath1702"><tspan id="SvgjsTspan1700" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1704" x1="1316" y1="172" x2="1609" y2="3313" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1705)"></line><a id="SvgjsA1711" href="plot-ipc-62332-108196-1586293075691-50.html#12"><text id="SvgjsText1707" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1709" href="#SvgjsPath1710"><tspan id="SvgjsTspan1708" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">12. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1712" x1="146" y1="172" x2="1024" y2="172" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1713)"></line><a id="SvgjsA1719" href="plot-ipc-62332-108196-1586293075691-50.html#13"><text id="SvgjsText1715" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1717" href="#SvgjsPath1718"><tspan id="SvgjsTspan1716" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1720" x1="1024" y1="172" x2="1024" y2="172" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1721)"></line><a id="SvgjsA1727" href="plot-ipc-62332-108196-1586293075691-50.html#13"><text id="SvgjsText1723" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1725" href="#SvgjsPath1726"><tspan id="SvgjsTspan1724" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1728" x1="1024" y1="172" x2="1316" y2="172" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1729)"></line><a id="SvgjsA1735" href="plot-ipc-62332-108196-1586293075691-50.html#13"><text id="SvgjsText1731" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1733" href="#SvgjsPath1734"><tspan id="SvgjsTspan1732" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1736" x1="1316" y1="172" x2="1609" y2="3313" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1737)"></line><a id="SvgjsA1743" href="plot-ipc-62332-108196-1586293075691-50.html#13"><text id="SvgjsText1739" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1741" href="#SvgjsPath1742"><tspan id="SvgjsTspan1740" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">13. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1744" x1="146" y1="186" x2="1024" y2="186" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1745)"></line><a id="SvgjsA1751" href="plot-ipc-62332-108196-1586293075691-50.html#14"><text id="SvgjsText1747" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1749" href="#SvgjsPath1750"><tspan id="SvgjsTspan1748" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1752" x1="1024" y1="186" x2="1024" y2="186" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1753)"></line><a id="SvgjsA1759" href="plot-ipc-62332-108196-1586293075691-50.html#14"><text id="SvgjsText1755" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1757" href="#SvgjsPath1758"><tspan id="SvgjsTspan1756" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1760" x1="1024" y1="186" x2="1316" y2="186" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1761)"></line><a id="SvgjsA1767" href="plot-ipc-62332-108196-1586293075691-50.html#14"><text id="SvgjsText1763" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1765" href="#SvgjsPath1766"><tspan id="SvgjsTspan1764" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1768" x1="1316" y1="186" x2="1609" y2="3313" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1769)"></line><a id="SvgjsA1775" href="plot-ipc-62332-108196-1586293075691-50.html#14"><text id="SvgjsText1771" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1773" href="#SvgjsPath1774"><tspan id="SvgjsTspan1772" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">14. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1776" x1="146" y1="186" x2="1024" y2="186" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1777)"></line><a id="SvgjsA1783" href="plot-ipc-62332-108196-1586293075691-50.html#15"><text id="SvgjsText1779" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1781" href="#SvgjsPath1782"><tspan id="SvgjsTspan1780" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1784" x1="1024" y1="186" x2="1024" y2="186" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1785)"></line><a id="SvgjsA1791" href="plot-ipc-62332-108196-1586293075691-50.html#15"><text id="SvgjsText1787" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1789" href="#SvgjsPath1790"><tspan id="SvgjsTspan1788" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1792" x1="1024" y1="186" x2="1316" y2="186" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1793)"></line><a id="SvgjsA1799" href="plot-ipc-62332-108196-1586293075691-50.html#15"><text id="SvgjsText1795" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1797" href="#SvgjsPath1798"><tspan id="SvgjsTspan1796" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1800" x1="1316" y1="186" x2="1609" y2="3313" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1801)"></line><a id="SvgjsA1807" href="plot-ipc-62332-108196-1586293075691-50.html#15"><text id="SvgjsText1803" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1805" href="#SvgjsPath1806"><tspan id="SvgjsTspan1804" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">15. PBrowser::Msg_NotifyContentBlockingEvent (1196)</tspan></textPath></text></a><line id="SvgjsLine1808" x1="146" y1="187" x2="1024" y2="187" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1809)"></line><a id="SvgjsA1815" href="plot-ipc-62332-108196-1586293075691-50.html#16"><text id="SvgjsText1811" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1813" href="#SvgjsPath1814"><tspan id="SvgjsTspan1812" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PCookieService::Msg_SetCookieString (7136)</tspan></textPath></text></a><line id="SvgjsLine1816" x1="1024" y1="187" x2="1024" y2="187" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1817)"></line><a id="SvgjsA1823" href="plot-ipc-62332-108196-1586293075691-50.html#16"><text id="SvgjsText1819" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1821" href="#SvgjsPath1822"><tspan id="SvgjsTspan1820" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PCookieService::Msg_SetCookieString (7136)</tspan></textPath></text></a><line id="SvgjsLine1824" x1="1024" y1="187" x2="1316" y2="187" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1825)"></line><a id="SvgjsA1831" href="plot-ipc-62332-108196-1586293075691-50.html#16"><text id="SvgjsText1827" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1829" href="#SvgjsPath1830"><tspan id="SvgjsTspan1828" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PCookieService::Msg_SetCookieString (7136)</tspan></textPath></text></a><line id="SvgjsLine1832" x1="1316" y1="187" x2="1609" y2="3313" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker1833)"></line><a id="SvgjsA1839" href="plot-ipc-62332-108196-1586293075691-50.html#16"><text id="SvgjsText1835" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1837" href="#SvgjsPath1838"><tspan id="SvgjsTspan1836" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">16. PCookieService::Msg_SetCookieString (7136)</tspan></textPath></text></a><line id="SvgjsLine1840" x1="438" y1="266" x2="1024" y2="266" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1841)"></line><a id="SvgjsA1847" href="plot-ipc-62332-108196-1586293075691-50.html#17"><text id="SvgjsText1843" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1845" href="#SvgjsPath1846"><tspan id="SvgjsTspan1844" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1848" x1="1024" y1="266" x2="1024" y2="266" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1849)"></line><a id="SvgjsA1855" href="plot-ipc-62332-108196-1586293075691-50.html#17"><text id="SvgjsText1851" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1853" href="#SvgjsPath1854"><tspan id="SvgjsTspan1852" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1856" x1="1024" y1="266" x2="1316" y2="266" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1857)"></line><a id="SvgjsA1863" href="plot-ipc-62332-108196-1586293075691-50.html#17"><text id="SvgjsText1859" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1861" href="#SvgjsPath1862"><tspan id="SvgjsTspan1860" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1864" x1="1316" y1="266" x2="1901" y2="266" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker1865)"></line><a id="SvgjsA1871" href="plot-ipc-62332-108196-1586293075691-50.html#17"><text id="SvgjsText1867" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1869" href="#SvgjsPath1870"><tspan id="SvgjsTspan1868" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">17. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1872" x1="438" y1="283" x2="1024" y2="283" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1873)"></line><a id="SvgjsA1879" href="plot-ipc-62332-108196-1586293075691-50.html#18"><text id="SvgjsText1875" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1877" href="#SvgjsPath1878"><tspan id="SvgjsTspan1876" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1880" x1="1024" y1="283" x2="1024" y2="283" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1881)"></line><a id="SvgjsA1887" href="plot-ipc-62332-108196-1586293075691-50.html#18"><text id="SvgjsText1883" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1885" href="#SvgjsPath1886"><tspan id="SvgjsTspan1884" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1888" x1="1024" y1="283" x2="1316" y2="283" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1889)"></line><a id="SvgjsA1895" href="plot-ipc-62332-108196-1586293075691-50.html#18"><text id="SvgjsText1891" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1893" href="#SvgjsPath1894"><tspan id="SvgjsTspan1892" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1896" x1="1316" y1="283" x2="1901" y2="283" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker1897)"></line><a id="SvgjsA1903" href="plot-ipc-62332-108196-1586293075691-50.html#18"><text id="SvgjsText1899" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1901" href="#SvgjsPath1902"><tspan id="SvgjsTspan1900" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">18. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1904" x1="438" y1="292" x2="1024" y2="292" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1905)"></line><a id="SvgjsA1911" href="plot-ipc-62332-108196-1586293075691-50.html#19"><text id="SvgjsText1907" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1909" href="#SvgjsPath1910"><tspan id="SvgjsTspan1908" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1912" x1="1024" y1="292" x2="1024" y2="292" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1913)"></line><a id="SvgjsA1919" href="plot-ipc-62332-108196-1586293075691-50.html#19"><text id="SvgjsText1915" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1917" href="#SvgjsPath1918"><tspan id="SvgjsTspan1916" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1920" x1="1024" y1="292" x2="1316" y2="292" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1921)"></line><a id="SvgjsA1927" href="plot-ipc-62332-108196-1586293075691-50.html#19"><text id="SvgjsText1923" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1925" href="#SvgjsPath1926"><tspan id="SvgjsTspan1924" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1928" x1="1316" y1="292" x2="1901" y2="292" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker1929)"></line><a id="SvgjsA1935" href="plot-ipc-62332-108196-1586293075691-50.html#19"><text id="SvgjsText1931" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1933" href="#SvgjsPath1934"><tspan id="SvgjsTspan1932" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">19. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1936" x1="146" y1="343" x2="1024" y2="343" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1937)"></line><a id="SvgjsA1943" href="plot-ipc-62332-108196-1586293075691-50.html#20"><text id="SvgjsText1939" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1941" href="#SvgjsPath1942"><tspan id="SvgjsTspan1940" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PBackgroundLSSnapshot::Msg_LoadValueAndMoreItems (148)</tspan></textPath></text></a><line id="SvgjsLine1944" x1="1024" y1="343" x2="1024" y2="343" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1945)"></line><a id="SvgjsA1951" href="plot-ipc-62332-108196-1586293075691-50.html#20"><text id="SvgjsText1947" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1949" href="#SvgjsPath1950"><tspan id="SvgjsTspan1948" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PBackgroundLSSnapshot::Msg_LoadValueAndMoreItems (148)</tspan></textPath></text></a><line id="SvgjsLine1952" x1="1024" y1="343" x2="1316" y2="344" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1953)"></line><a id="SvgjsA1959" href="plot-ipc-62332-108196-1586293075691-50.html#20"><text id="SvgjsText1955" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1957" href="#SvgjsPath1958"><tspan id="SvgjsTspan1956" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PBackgroundLSSnapshot::Msg_LoadValueAndMoreItems (148)</tspan></textPath></text></a><line id="SvgjsLine1960" x1="1316" y1="344" x2="1901" y2="344" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker1961)"></line><a id="SvgjsA1967" href="plot-ipc-62332-108196-1586293075691-50.html#20"><text id="SvgjsText1963" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1965" href="#SvgjsPath1966"><tspan id="SvgjsTspan1964" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">20. PBackgroundLSSnapshot::Msg_LoadValueAndMoreItems (148)</tspan></textPath></text></a><line id="SvgjsLine1968" x1="438" y1="876" x2="1024" y2="876" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1969)"></line><a id="SvgjsA1975" href="plot-ipc-62332-108196-1586293075691-50.html#21"><text id="SvgjsText1971" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1973" href="#SvgjsPath1974"><tspan id="SvgjsTspan1972" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1976" x1="1024" y1="876" x2="1024" y2="876" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1977)"></line><a id="SvgjsA1983" href="plot-ipc-62332-108196-1586293075691-50.html#21"><text id="SvgjsText1979" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1981" href="#SvgjsPath1982"><tspan id="SvgjsTspan1980" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1984" x1="1024" y1="876" x2="1316" y2="3178" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1985)"></line><a id="SvgjsA1991" href="plot-ipc-62332-108196-1586293075691-50.html#21"><text id="SvgjsText1987" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1989" href="#SvgjsPath1990"><tspan id="SvgjsTspan1988" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine1992" x1="1316" y1="3178" x2="1901" y2="3179" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker1993)"></line><a id="SvgjsA1999" href="plot-ipc-62332-108196-1586293075691-50.html#21"><text id="SvgjsText1995" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath1997" href="#SvgjsPath1998"><tspan id="SvgjsTspan1996" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">21. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2000" x1="146" y1="892" x2="1024" y2="892" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2001)"></line><a id="SvgjsA2007" href="plot-ipc-62332-108196-1586293075691-50.html#22"><text id="SvgjsText2003" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2005" href="#SvgjsPath2006"><tspan id="SvgjsTspan2004" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">22. PBackgroundLSSnapshot::Msg_Checkpoint (360)</tspan></textPath></text></a><line id="SvgjsLine2008" x1="1024" y1="892" x2="1024" y2="892" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2009)"></line><a id="SvgjsA2015" href="plot-ipc-62332-108196-1586293075691-50.html#22"><text id="SvgjsText2011" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2013" href="#SvgjsPath2014"><tspan id="SvgjsTspan2012" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">22. PBackgroundLSSnapshot::Msg_Checkpoint (360)</tspan></textPath></text></a><line id="SvgjsLine2016" x1="1024" y1="892" x2="1316" y2="3178" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2017)"></line><a id="SvgjsA2023" href="plot-ipc-62332-108196-1586293075691-50.html#22"><text id="SvgjsText2019" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2021" href="#SvgjsPath2022"><tspan id="SvgjsTspan2020" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">22. PBackgroundLSSnapshot::Msg_Checkpoint (360)</tspan></textPath></text></a><line id="SvgjsLine2024" x1="1316" y1="3178" x2="1901" y2="3179" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2025)"></line><a id="SvgjsA2031" href="plot-ipc-62332-108196-1586293075691-50.html#22"><text id="SvgjsText2027" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2029" href="#SvgjsPath2030"><tspan id="SvgjsTspan2028" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">22. PBackgroundLSSnapshot::Msg_Checkpoint (360)</tspan></textPath></text></a><line id="SvgjsLine2032" x1="731" y1="938" x2="1024" y2="938" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2033)"></line><a id="SvgjsA2039" href="plot-ipc-62332-108196-1586293075691-50.html#23"><text id="SvgjsText2035" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2037" href="#SvgjsPath2038"><tspan id="SvgjsTspan2036" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">23. PFetchEventOpProxy::Msg___delete__ (140)</tspan></textPath></text></a><line id="SvgjsLine2040" x1="1024" y1="938" x2="1024" y2="939" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2041)"></line><a id="SvgjsA2047" href="plot-ipc-62332-108196-1586293075691-50.html#23"><text id="SvgjsText2043" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2045" href="#SvgjsPath2046"><tspan id="SvgjsTspan2044" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">23. PFetchEventOpProxy::Msg___delete__ (140)</tspan></textPath></text></a><line id="SvgjsLine2048" x1="1024" y1="939" x2="1316" y2="3180" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2049)"></line><a id="SvgjsA2055" href="plot-ipc-62332-108196-1586293075691-50.html#23"><text id="SvgjsText2051" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2053" href="#SvgjsPath2054"><tspan id="SvgjsTspan2052" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">23. PFetchEventOpProxy::Msg___delete__ (140)</tspan></textPath></text></a><line id="SvgjsLine2056" x1="1316" y1="3180" x2="1901" y2="3185" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2057)"></line><a id="SvgjsA2063" href="plot-ipc-62332-108196-1586293075691-50.html#23"><text id="SvgjsText2059" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2061" href="#SvgjsPath2062"><tspan id="SvgjsTspan2060" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">23. PFetchEventOpProxy::Msg___delete__ (140)</tspan></textPath></text></a><line id="SvgjsLine2064" x1="731" y1="939" x2="1024" y2="939" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2065)"></line><a id="SvgjsA2071" href="plot-ipc-62332-108196-1586293075691-50.html#24"><text id="SvgjsText2067" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2069" href="#SvgjsPath2070"><tspan id="SvgjsTspan2068" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">24. PFetchEventOpProxy::Msg_RespondWith (136)</tspan></textPath></text></a><line id="SvgjsLine2072" x1="1024" y1="939" x2="1024" y2="939" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2073)"></line><a id="SvgjsA2079" href="plot-ipc-62332-108196-1586293075691-50.html#24"><text id="SvgjsText2075" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2077" href="#SvgjsPath2078"><tspan id="SvgjsTspan2076" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">24. PFetchEventOpProxy::Msg_RespondWith (136)</tspan></textPath></text></a><line id="SvgjsLine2080" x1="1024" y1="939" x2="1316" y2="3180" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2081)"></line><a id="SvgjsA2087" href="plot-ipc-62332-108196-1586293075691-50.html#24"><text id="SvgjsText2083" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2085" href="#SvgjsPath2086"><tspan id="SvgjsTspan2084" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">24. PFetchEventOpProxy::Msg_RespondWith (136)</tspan></textPath></text></a><line id="SvgjsLine2088" x1="1316" y1="3180" x2="1901" y2="3181" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2089)"></line><a id="SvgjsA2095" href="plot-ipc-62332-108196-1586293075691-50.html#24"><text id="SvgjsText2091" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2093" href="#SvgjsPath2094"><tspan id="SvgjsTspan2092" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">24. PFetchEventOpProxy::Msg_RespondWith (136)</tspan></textPath></text></a><line id="SvgjsLine2096" x1="731" y1="940" x2="1024" y2="940" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2097)"></line><a id="SvgjsA2103" href="plot-ipc-62332-108196-1586293075691-50.html#25"><text id="SvgjsText2099" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2101" href="#SvgjsPath2102"><tspan id="SvgjsTspan2100" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">25. PFetchEventOpProxy::Msg___delete__ (140)</tspan></textPath></text></a><line id="SvgjsLine2104" x1="1024" y1="940" x2="1024" y2="940" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2105)"></line><a id="SvgjsA2111" href="plot-ipc-62332-108196-1586293075691-50.html#25"><text id="SvgjsText2107" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2109" href="#SvgjsPath2110"><tspan id="SvgjsTspan2108" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">25. PFetchEventOpProxy::Msg___delete__ (140)</tspan></textPath></text></a><line id="SvgjsLine2112" x1="1024" y1="940" x2="1316" y2="3180" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2113)"></line><a id="SvgjsA2119" href="plot-ipc-62332-108196-1586293075691-50.html#25"><text id="SvgjsText2115" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2117" href="#SvgjsPath2118"><tspan id="SvgjsTspan2116" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">25. PFetchEventOpProxy::Msg___delete__ (140)</tspan></textPath></text></a><line id="SvgjsLine2120" x1="1316" y1="3180" x2="1901" y2="3185" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2121)"></line><a id="SvgjsA2127" href="plot-ipc-62332-108196-1586293075691-50.html#25"><text id="SvgjsText2123" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2125" href="#SvgjsPath2126"><tspan id="SvgjsTspan2124" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">25. PFetchEventOpProxy::Msg___delete__ (140)</tspan></textPath></text></a><line id="SvgjsLine2128" x1="731" y1="940" x2="1024" y2="940" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2129)"></line><a id="SvgjsA2135" href="plot-ipc-62332-108196-1586293075691-50.html#26"><text id="SvgjsText2131" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2133" href="#SvgjsPath2134"><tspan id="SvgjsTspan2132" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">26. PFetchEventOpProxy::Msg_RespondWith (136)</tspan></textPath></text></a><line id="SvgjsLine2136" x1="1024" y1="940" x2="1024" y2="940" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2137)"></line><a id="SvgjsA2143" href="plot-ipc-62332-108196-1586293075691-50.html#26"><text id="SvgjsText2139" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2141" href="#SvgjsPath2142"><tspan id="SvgjsTspan2140" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">26. PFetchEventOpProxy::Msg_RespondWith (136)</tspan></textPath></text></a><line id="SvgjsLine2144" x1="1024" y1="940" x2="1316" y2="3180" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2145)"></line><a id="SvgjsA2151" href="plot-ipc-62332-108196-1586293075691-50.html#26"><text id="SvgjsText2147" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2149" href="#SvgjsPath2150"><tspan id="SvgjsTspan2148" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">26. PFetchEventOpProxy::Msg_RespondWith (136)</tspan></textPath></text></a><line id="SvgjsLine2152" x1="1316" y1="3180" x2="1901" y2="3185" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2153)"></line><a id="SvgjsA2159" href="plot-ipc-62332-108196-1586293075691-50.html#26"><text id="SvgjsText2155" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2157" href="#SvgjsPath2158"><tspan id="SvgjsTspan2156" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">26. PFetchEventOpProxy::Msg_RespondWith (136)</tspan></textPath></text></a><line id="SvgjsLine2160" x1="438" y1="949" x2="1024" y2="949" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2161)"></line><a id="SvgjsA2167" href="plot-ipc-62332-108196-1586293075691-50.html#27"><text id="SvgjsText2163" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2165" href="#SvgjsPath2166"><tspan id="SvgjsTspan2164" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">27. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2168" x1="1024" y1="949" x2="1024" y2="949" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2169)"></line><a id="SvgjsA2175" href="plot-ipc-62332-108196-1586293075691-50.html#27"><text id="SvgjsText2171" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2173" href="#SvgjsPath2174"><tspan id="SvgjsTspan2172" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">27. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2176" x1="1024" y1="949" x2="1316" y2="3181" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2177)"></line><a id="SvgjsA2183" href="plot-ipc-62332-108196-1586293075691-50.html#27"><text id="SvgjsText2179" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2181" href="#SvgjsPath2182"><tspan id="SvgjsTspan2180" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">27. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2184" x1="1316" y1="3181" x2="1901" y2="3183" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2185)"></line><a id="SvgjsA2191" href="plot-ipc-62332-108196-1586293075691-50.html#27"><text id="SvgjsText2187" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2189" href="#SvgjsPath2190"><tspan id="SvgjsTspan2188" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">27. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2192" x1="146" y1="967" x2="1024" y2="967" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2193)"></line><a id="SvgjsA2199" href="plot-ipc-62332-108196-1586293075691-50.html#28"><text id="SvgjsText2195" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2197" href="#SvgjsPath2198"><tspan id="SvgjsTspan2196" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">28. PClientSource::Msg_ExecutionReady (156)</tspan></textPath></text></a><line id="SvgjsLine2200" x1="1024" y1="967" x2="1024" y2="967" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2201)"></line><a id="SvgjsA2207" href="plot-ipc-62332-108196-1586293075691-50.html#28"><text id="SvgjsText2203" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2205" href="#SvgjsPath2206"><tspan id="SvgjsTspan2204" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">28. PClientSource::Msg_ExecutionReady (156)</tspan></textPath></text></a><line id="SvgjsLine2208" x1="1024" y1="967" x2="1316" y2="3180" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2209)"></line><a id="SvgjsA2215" href="plot-ipc-62332-108196-1586293075691-50.html#28"><text id="SvgjsText2211" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2213" href="#SvgjsPath2214"><tspan id="SvgjsTspan2212" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">28. PClientSource::Msg_ExecutionReady (156)</tspan></textPath></text></a><line id="SvgjsLine2216" x1="1316" y1="3180" x2="1901" y2="3183" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2217)"></line><a id="SvgjsA2223" href="plot-ipc-62332-108196-1586293075691-50.html#28"><text id="SvgjsText2219" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2221" href="#SvgjsPath2222"><tspan id="SvgjsTspan2220" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">28. PClientSource::Msg_ExecutionReady (156)</tspan></textPath></text></a><line id="SvgjsLine2224" x1="146" y1="969" x2="1024" y2="969" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2225)"></line><a id="SvgjsA2231" href="plot-ipc-62332-108196-1586293075691-50.html#29"><text id="SvgjsText2227" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2229" href="#SvgjsPath2230"><tspan id="SvgjsTspan2228" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">29. PClientManager::Msg_PClientSourceConstructor (492)</tspan></textPath></text></a><line id="SvgjsLine2232" x1="1024" y1="969" x2="1024" y2="969" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2233)"></line><a id="SvgjsA2239" href="plot-ipc-62332-108196-1586293075691-50.html#29"><text id="SvgjsText2235" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2237" href="#SvgjsPath2238"><tspan id="SvgjsTspan2236" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">29. PClientManager::Msg_PClientSourceConstructor (492)</tspan></textPath></text></a><line id="SvgjsLine2240" x1="1024" y1="969" x2="1316" y2="3181" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2241)"></line><a id="SvgjsA2247" href="plot-ipc-62332-108196-1586293075691-50.html#29"><text id="SvgjsText2243" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2245" href="#SvgjsPath2246"><tspan id="SvgjsTspan2244" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">29. PClientManager::Msg_PClientSourceConstructor (492)</tspan></textPath></text></a><line id="SvgjsLine2248" x1="1316" y1="3181" x2="1901" y2="3183" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2249)"></line><a id="SvgjsA2255" href="plot-ipc-62332-108196-1586293075691-50.html#29"><text id="SvgjsText2251" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2253" href="#SvgjsPath2254"><tspan id="SvgjsTspan2252" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">29. PClientManager::Msg_PClientSourceConstructor (492)</tspan></textPath></text></a><line id="SvgjsLine2256" x1="146" y1="972" x2="1024" y2="972" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2257)"></line><a id="SvgjsA2263" href="plot-ipc-62332-108196-1586293075691-50.html#30"><text id="SvgjsText2259" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2261" href="#SvgjsPath2262"><tspan id="SvgjsTspan2260" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">30. PClientSource::Msg_ExecutionReady (156)</tspan></textPath></text></a><line id="SvgjsLine2264" x1="1024" y1="972" x2="1024" y2="972" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2265)"></line><a id="SvgjsA2271" href="plot-ipc-62332-108196-1586293075691-50.html#30"><text id="SvgjsText2267" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2269" href="#SvgjsPath2270"><tspan id="SvgjsTspan2268" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">30. PClientSource::Msg_ExecutionReady (156)</tspan></textPath></text></a><line id="SvgjsLine2272" x1="1024" y1="972" x2="1316" y2="3180" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2273)"></line><a id="SvgjsA2279" href="plot-ipc-62332-108196-1586293075691-50.html#30"><text id="SvgjsText2275" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2277" href="#SvgjsPath2278"><tspan id="SvgjsTspan2276" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">30. PClientSource::Msg_ExecutionReady (156)</tspan></textPath></text></a><line id="SvgjsLine2280" x1="1316" y1="3180" x2="1901" y2="3183" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2281)"></line><a id="SvgjsA2287" href="plot-ipc-62332-108196-1586293075691-50.html#30"><text id="SvgjsText2283" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2285" href="#SvgjsPath2286"><tspan id="SvgjsTspan2284" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">30. PClientSource::Msg_ExecutionReady (156)</tspan></textPath></text></a><line id="SvgjsLine2288" x1="438" y1="1255" x2="1024" y2="1255" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2289)"></line><a id="SvgjsA2295" href="plot-ipc-62332-108196-1586293075691-50.html#31"><text id="SvgjsText2291" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2293" href="#SvgjsPath2294"><tspan id="SvgjsTspan2292" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">31. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2296" x1="1024" y1="1255" x2="1024" y2="1255" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2297)"></line><a id="SvgjsA2303" href="plot-ipc-62332-108196-1586293075691-50.html#31"><text id="SvgjsText2299" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2301" href="#SvgjsPath2302"><tspan id="SvgjsTspan2300" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">31. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2304" x1="1024" y1="1255" x2="1316" y2="3181" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2305)"></line><a id="SvgjsA2311" href="plot-ipc-62332-108196-1586293075691-50.html#31"><text id="SvgjsText2307" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2309" href="#SvgjsPath2310"><tspan id="SvgjsTspan2308" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">31. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2312" x1="1316" y1="3181" x2="1901" y2="3183" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2313)"></line><a id="SvgjsA2319" href="plot-ipc-62332-108196-1586293075691-50.html#31"><text id="SvgjsText2315" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2317" href="#SvgjsPath2318"><tspan id="SvgjsTspan2316" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">31. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2320" x1="146" y1="1256" x2="1024" y2="1256" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2321)"></line><a id="SvgjsA2327" href="plot-ipc-62332-108196-1586293075691-50.html#32"><text id="SvgjsText2323" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2325" href="#SvgjsPath2326"><tspan id="SvgjsTspan2324" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">32. PClientSource::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2328" x1="1024" y1="1256" x2="1024" y2="1256" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2329)"></line><a id="SvgjsA2335" href="plot-ipc-62332-108196-1586293075691-50.html#32"><text id="SvgjsText2331" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2333" href="#SvgjsPath2334"><tspan id="SvgjsTspan2332" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">32. PClientSource::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2336" x1="1024" y1="1256" x2="1316" y2="3180" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2337)"></line><a id="SvgjsA2343" href="plot-ipc-62332-108196-1586293075691-50.html#32"><text id="SvgjsText2339" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2341" href="#SvgjsPath2342"><tspan id="SvgjsTspan2340" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">32. PClientSource::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2344" x1="1316" y1="3180" x2="1901" y2="3183" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2345)"></line><a id="SvgjsA2351" href="plot-ipc-62332-108196-1586293075691-50.html#32"><text id="SvgjsText2347" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2349" href="#SvgjsPath2350"><tspan id="SvgjsTspan2348" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">32. PClientSource::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2352" x1="146" y1="1285" x2="1024" y2="1285" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2353)"></line><a id="SvgjsA2359" href="plot-ipc-62332-108196-1586293075691-50.html#33"><text id="SvgjsText2355" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2357" href="#SvgjsPath2358"><tspan id="SvgjsTspan2356" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">33. PBackgroundLSSnapshot::Msg_DeleteMe (120)</tspan></textPath></text></a><line id="SvgjsLine2360" x1="1024" y1="1285" x2="1024" y2="1285" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2361)"></line><a id="SvgjsA2367" href="plot-ipc-62332-108196-1586293075691-50.html#33"><text id="SvgjsText2363" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2365" href="#SvgjsPath2366"><tspan id="SvgjsTspan2364" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">33. PBackgroundLSSnapshot::Msg_DeleteMe (120)</tspan></textPath></text></a><line id="SvgjsLine2368" x1="1024" y1="1285" x2="1316" y2="3180" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2369)"></line><a id="SvgjsA2375" href="plot-ipc-62332-108196-1586293075691-50.html#33"><text id="SvgjsText2371" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2373" href="#SvgjsPath2374"><tspan id="SvgjsTspan2372" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">33. PBackgroundLSSnapshot::Msg_DeleteMe (120)</tspan></textPath></text></a><line id="SvgjsLine2376" x1="1316" y1="3180" x2="1901" y2="3183" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2377)"></line><a id="SvgjsA2383" href="plot-ipc-62332-108196-1586293075691-50.html#33"><text id="SvgjsText2379" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2381" href="#SvgjsPath2382"><tspan id="SvgjsTspan2380" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">33. PBackgroundLSSnapshot::Msg_DeleteMe (120)</tspan></textPath></text></a><line id="SvgjsLine2384" x1="146" y1="1285" x2="1024" y2="1285" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2385)"></line><a id="SvgjsA2391" href="plot-ipc-62332-108196-1586293075691-50.html#34"><text id="SvgjsText2387" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2389" href="#SvgjsPath2390"><tspan id="SvgjsTspan2388" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">34. PBackgroundLSSnapshot::Msg_Finish (120)</tspan></textPath></text></a><line id="SvgjsLine2392" x1="1024" y1="1285" x2="1024" y2="1285" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2393)"></line><a id="SvgjsA2399" href="plot-ipc-62332-108196-1586293075691-50.html#34"><text id="SvgjsText2395" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2397" href="#SvgjsPath2398"><tspan id="SvgjsTspan2396" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">34. PBackgroundLSSnapshot::Msg_Finish (120)</tspan></textPath></text></a><line id="SvgjsLine2400" x1="1024" y1="1285" x2="1316" y2="3180" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2401)"></line><a id="SvgjsA2407" href="plot-ipc-62332-108196-1586293075691-50.html#34"><text id="SvgjsText2403" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2405" href="#SvgjsPath2406"><tspan id="SvgjsTspan2404" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">34. PBackgroundLSSnapshot::Msg_Finish (120)</tspan></textPath></text></a><line id="SvgjsLine2408" x1="1316" y1="3180" x2="1901" y2="3183" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2409)"></line><a id="SvgjsA2415" href="plot-ipc-62332-108196-1586293075691-50.html#34"><text id="SvgjsText2411" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2413" href="#SvgjsPath2414"><tspan id="SvgjsTspan2412" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">34. PBackgroundLSSnapshot::Msg_Finish (120)</tspan></textPath></text></a><line id="SvgjsLine2416" x1="146" y1="1289" x2="1024" y2="1289" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2417)"></line><a id="SvgjsA2423" href="plot-ipc-62332-108196-1586293075691-50.html#35"><text id="SvgjsText2419" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2421" href="#SvgjsPath2422"><tspan id="SvgjsTspan2420" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">35. PCacheStorage::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2424" x1="1024" y1="1289" x2="1024" y2="1289" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2425)"></line><a id="SvgjsA2431" href="plot-ipc-62332-108196-1586293075691-50.html#35"><text id="SvgjsText2427" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2429" href="#SvgjsPath2430"><tspan id="SvgjsTspan2428" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">35. PCacheStorage::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2432" x1="1024" y1="1289" x2="1316" y2="3180" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2433)"></line><a id="SvgjsA2439" href="plot-ipc-62332-108196-1586293075691-50.html#35"><text id="SvgjsText2435" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2437" href="#SvgjsPath2438"><tspan id="SvgjsTspan2436" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">35. PCacheStorage::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2440" x1="1316" y1="3180" x2="1901" y2="3183" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2441)"></line><a id="SvgjsA2447" href="plot-ipc-62332-108196-1586293075691-50.html#35"><text id="SvgjsText2443" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2445" href="#SvgjsPath2446"><tspan id="SvgjsTspan2444" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">35. PCacheStorage::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2448" x1="146" y1="1291" x2="1024" y2="1291" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2449)"></line><a id="SvgjsA2455" href="plot-ipc-62332-108196-1586293075691-50.html#36"><text id="SvgjsText2451" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2453" href="#SvgjsPath2454"><tspan id="SvgjsTspan2452" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">36. PCacheStorage::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2456" x1="1024" y1="1291" x2="1024" y2="1291" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2457)"></line><a id="SvgjsA2463" href="plot-ipc-62332-108196-1586293075691-50.html#36"><text id="SvgjsText2459" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2461" href="#SvgjsPath2462"><tspan id="SvgjsTspan2460" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">36. PCacheStorage::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2464" x1="1024" y1="1291" x2="1316" y2="3182" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2465)"></line><a id="SvgjsA2471" href="plot-ipc-62332-108196-1586293075691-50.html#36"><text id="SvgjsText2467" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2469" href="#SvgjsPath2470"><tspan id="SvgjsTspan2468" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">36. PCacheStorage::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2472" x1="1316" y1="3182" x2="1901" y2="3185" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2473)"></line><a id="SvgjsA2479" href="plot-ipc-62332-108196-1586293075691-50.html#36"><text id="SvgjsText2475" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2477" href="#SvgjsPath2478"><tspan id="SvgjsTspan2476" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">36. PCacheStorage::Msg_Teardown (120)</tspan></textPath></text></a><line id="SvgjsLine2480" x1="438" y1="1314" x2="1024" y2="1314" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2481)"></line><a id="SvgjsA2487" href="plot-ipc-62332-108196-1586293075691-50.html#37"><text id="SvgjsText2483" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2485" href="#SvgjsPath2486"><tspan id="SvgjsTspan2484" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">37. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2488" x1="1024" y1="1314" x2="1024" y2="1314" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2489)"></line><a id="SvgjsA2495" href="plot-ipc-62332-108196-1586293075691-50.html#37"><text id="SvgjsText2491" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2493" href="#SvgjsPath2494"><tspan id="SvgjsTspan2492" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">37. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2496" x1="1024" y1="1314" x2="1316" y2="3181" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2497)"></line><a id="SvgjsA2503" href="plot-ipc-62332-108196-1586293075691-50.html#37"><text id="SvgjsText2499" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2501" href="#SvgjsPath2502"><tspan id="SvgjsTspan2500" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">37. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2504" x1="1316" y1="3181" x2="1901" y2="3183" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2505)"></line><a id="SvgjsA2511" href="plot-ipc-62332-108196-1586293075691-50.html#37"><text id="SvgjsText2507" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2509" href="#SvgjsPath2510"><tspan id="SvgjsTspan2508" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">37. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2512" x1="438" y1="1345" x2="1024" y2="1345" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2513)"></line><a id="SvgjsA2519" href="plot-ipc-62332-108196-1586293075691-50.html#38"><text id="SvgjsText2515" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2517" href="#SvgjsPath2518"><tspan id="SvgjsTspan2516" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">38. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2520" x1="1024" y1="1345" x2="1024" y2="1346" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2521)"></line><a id="SvgjsA2527" href="plot-ipc-62332-108196-1586293075691-50.html#38"><text id="SvgjsText2523" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2525" href="#SvgjsPath2526"><tspan id="SvgjsTspan2524" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">38. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2528" x1="1024" y1="1346" x2="1316" y2="3181" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2529)"></line><a id="SvgjsA2535" href="plot-ipc-62332-108196-1586293075691-50.html#38"><text id="SvgjsText2531" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2533" href="#SvgjsPath2534"><tspan id="SvgjsTspan2532" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">38. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2536" x1="1316" y1="3181" x2="1901" y2="3183" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2537)"></line><a id="SvgjsA2543" href="plot-ipc-62332-108196-1586293075691-50.html#38"><text id="SvgjsText2539" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2541" href="#SvgjsPath2542"><tspan id="SvgjsTspan2540" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">38. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2544" x1="438" y1="1495" x2="1024" y2="1495" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2545)"></line><a id="SvgjsA2551" href="plot-ipc-62332-108196-1586293075691-50.html#39"><text id="SvgjsText2547" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2549" href="#SvgjsPath2550"><tspan id="SvgjsTspan2548" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">39. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2552" x1="1024" y1="1495" x2="1024" y2="1495" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2553)"></line><a id="SvgjsA2559" href="plot-ipc-62332-108196-1586293075691-50.html#39"><text id="SvgjsText2555" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2557" href="#SvgjsPath2558"><tspan id="SvgjsTspan2556" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">39. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2560" x1="1024" y1="1495" x2="1316" y2="3181" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2561)"></line><a id="SvgjsA2567" href="plot-ipc-62332-108196-1586293075691-50.html#39"><text id="SvgjsText2563" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2565" href="#SvgjsPath2566"><tspan id="SvgjsTspan2564" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">39. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2568" x1="1316" y1="3181" x2="1901" y2="3183" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2569)"></line><a id="SvgjsA2575" href="plot-ipc-62332-108196-1586293075691-50.html#39"><text id="SvgjsText2571" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2573" href="#SvgjsPath2574"><tspan id="SvgjsTspan2572" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">39. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2576" x1="438" y1="1499" x2="1024" y2="1499" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2577)"></line><a id="SvgjsA2583" href="plot-ipc-62332-108196-1586293075691-50.html#40"><text id="SvgjsText2579" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2581" href="#SvgjsPath2582"><tspan id="SvgjsTspan2580" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">40. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2584" x1="1024" y1="1499" x2="1024" y2="1499" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2585)"></line><a id="SvgjsA2591" href="plot-ipc-62332-108196-1586293075691-50.html#40"><text id="SvgjsText2587" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2589" href="#SvgjsPath2590"><tspan id="SvgjsTspan2588" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">40. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2592" x1="1024" y1="1499" x2="1316" y2="3181" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2593)"></line><a id="SvgjsA2599" href="plot-ipc-62332-108196-1586293075691-50.html#40"><text id="SvgjsText2595" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2597" href="#SvgjsPath2598"><tspan id="SvgjsTspan2596" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">40. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2600" x1="1316" y1="3181" x2="1901" y2="3183" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2601)"></line><a id="SvgjsA2607" href="plot-ipc-62332-108196-1586293075691-50.html#40"><text id="SvgjsText2603" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2605" href="#SvgjsPath2606"><tspan id="SvgjsTspan2604" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">40. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2608" x1="438" y1="1558" x2="1024" y2="1558" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2609)"></line><a id="SvgjsA2615" href="plot-ipc-62332-108196-1586293075691-50.html#41"><text id="SvgjsText2611" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2613" href="#SvgjsPath2614"><tspan id="SvgjsTspan2612" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">41. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2616" x1="1024" y1="1558" x2="1024" y2="1558" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2617)"></line><a id="SvgjsA2623" href="plot-ipc-62332-108196-1586293075691-50.html#41"><text id="SvgjsText2619" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2621" href="#SvgjsPath2622"><tspan id="SvgjsTspan2620" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">41. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2624" x1="1024" y1="1558" x2="1316" y2="3181" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2625)"></line><a id="SvgjsA2631" href="plot-ipc-62332-108196-1586293075691-50.html#41"><text id="SvgjsText2627" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2629" href="#SvgjsPath2630"><tspan id="SvgjsTspan2628" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">41. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2632" x1="1316" y1="3181" x2="1901" y2="3183" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2633)"></line><a id="SvgjsA2639" href="plot-ipc-62332-108196-1586293075691-50.html#41"><text id="SvgjsText2635" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2637" href="#SvgjsPath2638"><tspan id="SvgjsTspan2636" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">41. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2640" x1="438" y1="1565" x2="1024" y2="1565" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2641)"></line><a id="SvgjsA2647" href="plot-ipc-62332-108196-1586293075691-50.html#42"><text id="SvgjsText2643" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2645" href="#SvgjsPath2646"><tspan id="SvgjsTspan2644" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">42. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2648" x1="1024" y1="1565" x2="1024" y2="1565" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2649)"></line><a id="SvgjsA2655" href="plot-ipc-62332-108196-1586293075691-50.html#42"><text id="SvgjsText2651" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2653" href="#SvgjsPath2654"><tspan id="SvgjsTspan2652" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">42. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2656" x1="1024" y1="1565" x2="1316" y2="3181" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2657)"></line><a id="SvgjsA2663" href="plot-ipc-62332-108196-1586293075691-50.html#42"><text id="SvgjsText2659" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2661" href="#SvgjsPath2662"><tspan id="SvgjsTspan2660" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">42. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2664" x1="1316" y1="3181" x2="1901" y2="3183" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2665)"></line><a id="SvgjsA2671" href="plot-ipc-62332-108196-1586293075691-50.html#42"><text id="SvgjsText2667" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2669" href="#SvgjsPath2670"><tspan id="SvgjsTspan2668" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">42. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2672" x1="146" y1="1566" x2="1024" y2="1566" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2673)"></line><a id="SvgjsA2679" href="plot-ipc-62332-108196-1586293075691-50.html#43"><text id="SvgjsText2675" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2677" href="#SvgjsPath2678"><tspan id="SvgjsTspan2676" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">43. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2680" x1="1024" y1="1566" x2="1024" y2="1566" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2681)"></line><a id="SvgjsA2687" href="plot-ipc-62332-108196-1586293075691-50.html#43"><text id="SvgjsText2683" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2685" href="#SvgjsPath2686"><tspan id="SvgjsTspan2684" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">43. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2688" x1="1024" y1="1566" x2="1316" y2="3181" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2689)"></line><a id="SvgjsA2695" href="plot-ipc-62332-108196-1586293075691-50.html#43"><text id="SvgjsText2691" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2693" href="#SvgjsPath2694"><tspan id="SvgjsTspan2692" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">43. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2696" x1="1316" y1="3181" x2="1901" y2="3185" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2697)"></line><a id="SvgjsA2703" href="plot-ipc-62332-108196-1586293075691-50.html#43"><text id="SvgjsText2699" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2701" href="#SvgjsPath2702"><tspan id="SvgjsTspan2700" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">43. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2704" x1="438" y1="2372" x2="1024" y2="2372" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2705)"></line><a id="SvgjsA2711" href="plot-ipc-62332-108196-1586293075691-50.html#44"><text id="SvgjsText2707" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2709" href="#SvgjsPath2710"><tspan id="SvgjsTspan2708" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">44. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2712" x1="1024" y1="2372" x2="1024" y2="2372" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2713)"></line><a id="SvgjsA2719" href="plot-ipc-62332-108196-1586293075691-50.html#44"><text id="SvgjsText2715" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2717" href="#SvgjsPath2718"><tspan id="SvgjsTspan2716" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">44. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2720" x1="1024" y1="2372" x2="1316" y2="3181" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2721)"></line><a id="SvgjsA2727" href="plot-ipc-62332-108196-1586293075691-50.html#44"><text id="SvgjsText2723" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2725" href="#SvgjsPath2726"><tspan id="SvgjsTspan2724" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">44. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2728" x1="1316" y1="3181" x2="1901" y2="3183" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2729)"></line><a id="SvgjsA2735" href="plot-ipc-62332-108196-1586293075691-50.html#44"><text id="SvgjsText2731" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2733" href="#SvgjsPath2734"><tspan id="SvgjsTspan2732" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">44. PBackground::Msg_PHttpBackgroundChannelConstructor (140)</tspan></textPath></text></a><line id="SvgjsLine2736" x1="146" y1="2416" x2="1024" y2="2416" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2737)"></line><a id="SvgjsA2743" href="plot-ipc-62332-108196-1586293075691-50.html#45"><text id="SvgjsText2739" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2741" href="#SvgjsPath2742"><tspan id="SvgjsTspan2740" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">45. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2744" x1="1024" y1="2416" x2="1024" y2="2416" stroke-dasharray="2,2" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2745)"></line><a id="SvgjsA2751" href="plot-ipc-62332-108196-1586293075691-50.html#45"><text id="SvgjsText2747" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2749" href="#SvgjsPath2750"><tspan id="SvgjsTspan2748" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">45. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2752" x1="1024" y1="2416" x2="1316" y2="3181" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2753)"></line><a id="SvgjsA2759" href="plot-ipc-62332-108196-1586293075691-50.html#45"><text id="SvgjsText2755" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2757" href="#SvgjsPath2758"><tspan id="SvgjsTspan2756" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">45. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2760" x1="1316" y1="3181" x2="1901" y2="3185" stroke="brown" stroke-width="1" marker-end="url(#SvgjsMarker2761)"></line><a id="SvgjsA2767" href="plot-ipc-62332-108196-1586293075691-50.html#45"><text id="SvgjsText2763" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="brown" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2765" href="#SvgjsPath2766"><tspan id="SvgjsTspan2764" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">45. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2768" x1="146" y1="2424" x2="1024" y2="2424" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2769)"></line><a id="SvgjsA2775" href="plot-ipc-62332-108196-1586293075691-50.html#46"><text id="SvgjsText2771" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2773" href="#SvgjsPath2774"><tspan id="SvgjsTspan2772" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">46. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2776" x1="1024" y1="2424" x2="1024" y2="2424" stroke-dasharray="2,2" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2777)"></line><a id="SvgjsA2783" href="plot-ipc-62332-108196-1586293075691-50.html#46"><text id="SvgjsText2779" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2781" href="#SvgjsPath2782"><tspan id="SvgjsTspan2780" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">46. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2784" x1="1024" y1="2424" x2="1316" y2="3181" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2785)"></line><a id="SvgjsA2791" href="plot-ipc-62332-108196-1586293075691-50.html#46"><text id="SvgjsText2787" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2789" href="#SvgjsPath2790"><tspan id="SvgjsTspan2788" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">46. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2792" x1="1316" y1="3181" x2="1901" y2="3185" stroke="green" stroke-width="1" marker-end="url(#SvgjsMarker2793)"></line><a id="SvgjsA2799" href="plot-ipc-62332-108196-1586293075691-50.html#46"><text id="SvgjsText2795" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="green" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2797" href="#SvgjsPath2798"><tspan id="SvgjsTspan2796" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">46. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2800" x1="146" y1="2449" x2="1024" y2="2449" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2801)"></line><a id="SvgjsA2807" href="plot-ipc-62332-108196-1586293075691-50.html#47"><text id="SvgjsText2803" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2805" href="#SvgjsPath2806"><tspan id="SvgjsTspan2804" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">47. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2808" x1="1024" y1="2449" x2="1024" y2="2449" stroke-dasharray="2,2" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2809)"></line><a id="SvgjsA2815" href="plot-ipc-62332-108196-1586293075691-50.html#47"><text id="SvgjsText2811" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2813" href="#SvgjsPath2814"><tspan id="SvgjsTspan2812" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">47. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2816" x1="1024" y1="2449" x2="1316" y2="3181" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2817)"></line><a id="SvgjsA2823" href="plot-ipc-62332-108196-1586293075691-50.html#47"><text id="SvgjsText2819" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2821" href="#SvgjsPath2822"><tspan id="SvgjsTspan2820" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">47. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2824" x1="1316" y1="3181" x2="1901" y2="3185" stroke="blue" stroke-width="1" marker-end="url(#SvgjsMarker2825)"></line><a id="SvgjsA2831" href="plot-ipc-62332-108196-1586293075691-50.html#47"><text id="SvgjsText2827" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="blue" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2829" href="#SvgjsPath2830"><tspan id="SvgjsTspan2828" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">47. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2832" x1="146" y1="2458" x2="1024" y2="2458" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2833)"></line><a id="SvgjsA2839" href="plot-ipc-62332-108196-1586293075691-50.html#48"><text id="SvgjsText2835" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2837" href="#SvgjsPath2838"><tspan id="SvgjsTspan2836" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">48. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2840" x1="1024" y1="2458" x2="1024" y2="2458" stroke-dasharray="2,2" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2841)"></line><a id="SvgjsA2847" href="plot-ipc-62332-108196-1586293075691-50.html#48"><text id="SvgjsText2843" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2845" href="#SvgjsPath2846"><tspan id="SvgjsTspan2844" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">48. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2848" x1="1024" y1="2458" x2="1316" y2="3181" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2849)"></line><a id="SvgjsA2855" href="plot-ipc-62332-108196-1586293075691-50.html#48"><text id="SvgjsText2851" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2853" href="#SvgjsPath2854"><tspan id="SvgjsTspan2852" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">48. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2856" x1="1316" y1="3181" x2="1901" y2="3185" stroke="purple" stroke-width="1" marker-end="url(#SvgjsMarker2857)"></line><a id="SvgjsA2863" href="plot-ipc-62332-108196-1586293075691-50.html#48"><text id="SvgjsText2859" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="purple" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2861" href="#SvgjsPath2862"><tspan id="SvgjsTspan2860" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">48. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2864" x1="146" y1="2459" x2="1024" y2="2459" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2865)"></line><a id="SvgjsA2871" href="plot-ipc-62332-108196-1586293075691-50.html#49"><text id="SvgjsText2867" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2869" href="#SvgjsPath2870"><tspan id="SvgjsTspan2868" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">49. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2872" x1="1024" y1="2459" x2="1024" y2="2459" stroke-dasharray="2,2" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2873)"></line><a id="SvgjsA2879" href="plot-ipc-62332-108196-1586293075691-50.html#49"><text id="SvgjsText2875" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2877" href="#SvgjsPath2878"><tspan id="SvgjsTspan2876" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">49. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2880" x1="1024" y1="2459" x2="1316" y2="3180" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2881)"></line><a id="SvgjsA2887" href="plot-ipc-62332-108196-1586293075691-50.html#49"><text id="SvgjsText2883" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2885" href="#SvgjsPath2886"><tspan id="SvgjsTspan2884" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">49. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2888" x1="1316" y1="3180" x2="1901" y2="3185" stroke="red" stroke-width="1" marker-end="url(#SvgjsMarker2889)"></line><a id="SvgjsA2895" href="plot-ipc-62332-108196-1586293075691-50.html#49"><text id="SvgjsText2891" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="red" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2893" href="#SvgjsPath2894"><tspan id="SvgjsTspan2892" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">49. PIdleScheduler::Msg_IdleTimeUsed (132)</tspan></textPath></text></a><line id="SvgjsLine2896" x1="146" y1="2491" x2="1024" y2="2491" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2897)"></line><a id="SvgjsA2903" href="plot-ipc-62332-108196-1586293075691-50.html#50"><text id="SvgjsText2899" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2901" href="#SvgjsPath2902"><tspan id="SvgjsTspan2900" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">50. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2904" x1="1024" y1="2491" x2="1024" y2="2491" stroke-dasharray="2,2" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2905)"></line><a id="SvgjsA2911" href="plot-ipc-62332-108196-1586293075691-50.html#50"><text id="SvgjsText2907" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2909" href="#SvgjsPath2910"><tspan id="SvgjsTspan2908" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">50. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2912" x1="1024" y1="2491" x2="1316" y2="3180" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2913)"></line><a id="SvgjsA2919" href="plot-ipc-62332-108196-1586293075691-50.html#50"><text id="SvgjsText2915" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2917" href="#SvgjsPath2918"><tspan id="SvgjsTspan2916" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">50. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><line id="SvgjsLine2920" x1="1316" y1="3180" x2="1901" y2="3185" stroke="orange" stroke-width="1" marker-end="url(#SvgjsMarker2921)"></line><a id="SvgjsA2927" href="plot-ipc-62332-108196-1586293075691-50.html#50"><text id="SvgjsText2923" font-family="Helvetica, Arial, sans-serif" font-size="10" fill="orange" size="10" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><textPath id="SvgjsTextPath2925" href="#SvgjsPath2926"><tspan id="SvgjsTspan2924" dy="13" x="0" svgjs:data="{&quot;newLined&quot;:true}">50. PIdleScheduler::Msg_RequestIdleTime (144)</tspan></textPath></text></a><a id="SvgjsA2930" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2928" font-family="Helvetica, Arial, sans-serif" x="1326" y="36.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2929" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2933" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2931" font-family="Helvetica, Arial, sans-serif" x="1326" y="41.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2932" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2936" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2934" font-family="Helvetica, Arial, sans-serif" x="1326" y="45.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2935" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2939" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2937" font-family="Helvetica, Arial, sans-serif" x="1326" y="49.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2938" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2942" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2940" font-family="Helvetica, Arial, sans-serif" x="1326" y="54.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2941" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2945" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2943" font-family="Helvetica, Arial, sans-serif" x="1326" y="58.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2944" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2948" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2946" font-family="Helvetica, Arial, sans-serif" x="1326" y="62.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2947" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2951" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2949" font-family="Helvetica, Arial, sans-serif" x="1326" y="67.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2950" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2954" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2952" font-family="Helvetica, Arial, sans-serif" x="1326" y="71.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2953" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2957" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2955" font-family="Helvetica, Arial, sans-serif" x="1326" y="75.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2956" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2960" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2958" font-family="Helvetica, Arial, sans-serif" x="1326" y="80.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2959" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2963" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2961" font-family="Helvetica, Arial, sans-serif" x="1326" y="84.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2962" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2966" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2964" font-family="Helvetica, Arial, sans-serif" x="1326" y="88.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2965" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2969" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2967" font-family="Helvetica, Arial, sans-serif" x="1326" y="92.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2968" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2972" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2970" font-family="Helvetica, Arial, sans-serif" x="1326" y="97.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2971" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2975" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2973" font-family="Helvetica, Arial, sans-serif" x="1326" y="101.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2974" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2978" href="data:text/plain,public: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0d0x2f90093%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2976" font-family="Helvetica, Arial, sans-serif" x="1326" y="105.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2977" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">public: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64</tspan></text></a><a id="SvgjsA2981" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2979" font-family="Helvetica, Arial, sans-serif" x="1326" y="110.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2980" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2984" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2982" font-family="Helvetica, Arial, sans-serif" x="1326" y="114.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2983" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2987" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2985" font-family="Helvetica, Arial, sans-serif" x="1326" y="119.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2986" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2990" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2988" font-family="Helvetica, Arial, sans-serif" x="1326" y="123.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2989" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2993" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2991" font-family="Helvetica, Arial, sans-serif" x="1326" y="127.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2992" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2996" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2994" font-family="Helvetica, Arial, sans-serif" x="1326" y="131.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2995" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA2999" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText2997" font-family="Helvetica, Arial, sans-serif" x="1326" y="136.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan2998" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3002" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3000" font-family="Helvetica, Arial, sans-serif" x="1326" y="140.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3001" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3005" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3003" font-family="Helvetica, Arial, sans-serif" x="1326" y="144.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3004" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3008" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3006" font-family="Helvetica, Arial, sans-serif" x="1326" y="149.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3007" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3011" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3009" font-family="Helvetica, Arial, sans-serif" x="1326" y="153.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3010" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3014" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3012" font-family="Helvetica, Arial, sans-serif" x="1326" y="157.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3013" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3017" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3015" font-family="Helvetica, Arial, sans-serif" x="1326" y="162.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3016" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3020" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3018" font-family="Helvetica, Arial, sans-serif" x="1326" y="166.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3019" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3023" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3021" font-family="Helvetica, Arial, sans-serif" x="1326" y="170.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3022" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3026" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3024" font-family="Helvetica, Arial, sans-serif" x="1326" y="174.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3025" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3029" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3027" font-family="Helvetica, Arial, sans-serif" x="1326" y="179.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3028" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3032" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3030" font-family="Helvetica, Arial, sans-serif" x="1326" y="183.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3031" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3035" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3033" font-family="Helvetica, Arial, sans-serif" x="1326" y="187.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3034" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3038" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3036" font-family="Helvetica, Arial, sans-serif" x="1326" y="192.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3037" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3041" href="data:text/plain,public: __cdecl IPC::Message::Message(char const * __ptr64,int) __ptr64%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3039" font-family="Helvetica, Arial, sans-serif" x="1326" y="196.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3040" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">public: __cdecl IPC::Message::Message(char const * __ptr64,int) __ptr64</tspan></text></a><a id="SvgjsA3044" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3042" font-family="Helvetica, Arial, sans-serif" x="1326" y="200.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3043" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3047" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3045" font-family="Helvetica, Arial, sans-serif" x="1326" y="205.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3046" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3050" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3048" font-family="Helvetica, Arial, sans-serif" x="1326" y="209.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3049" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3053" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3051" font-family="Helvetica, Arial, sans-serif" x="1326" y="213.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3052" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3056" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3054" font-family="Helvetica, Arial, sans-serif" x="1326" y="218.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3055" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3059" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3057" font-family="Helvetica, Arial, sans-serif" x="1326" y="222.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3058" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3062" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3060" font-family="Helvetica, Arial, sans-serif" x="1326" y="226.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3061" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3065" href="data:text/plain,NtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3063" font-family="Helvetica, Arial, sans-serif" x="1326" y="231.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3064" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtReadFile</tspan></text></a><a id="SvgjsA3068" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3066" font-family="Helvetica, Arial, sans-serif" x="1326" y="235.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3067" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3071" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3069" font-family="Helvetica, Arial, sans-serif" x="1326" y="239.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3070" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3074" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3072" font-family="Helvetica, Arial, sans-serif" x="1326" y="243.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3073" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3077" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3075" font-family="Helvetica, Arial, sans-serif" x="1326" y="248.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3076" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3080" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3078" font-family="Helvetica, Arial, sans-serif" x="1326" y="252.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3079" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3083" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3081" font-family="Helvetica, Arial, sans-serif" x="1326" y="257.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3082" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3086" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3084" font-family="Helvetica, Arial, sans-serif" x="1326" y="261.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3085" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3089" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3087" font-family="Helvetica, Arial, sans-serif" x="1326" y="265.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3088" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3092" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3090" font-family="Helvetica, Arial, sans-serif" x="1326" y="270.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3091" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3095" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3093" font-family="Helvetica, Arial, sans-serif" x="1326" y="274.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3094" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3098" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3096" font-family="Helvetica, Arial, sans-serif" x="1326" y="278.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3097" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3101" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3099" font-family="Helvetica, Arial, sans-serif" x="1326" y="283.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3100" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3104" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3102" font-family="Helvetica, Arial, sans-serif" x="1326" y="287.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3103" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3107" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3105" font-family="Helvetica, Arial, sans-serif" x="1326" y="291.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3106" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3110" href="data:text/plain,public: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dprivate: virtual struct already_AddRefed&lt;class nsIEventTarget&gt; __cdecl mozilla::layers::CompositorManagerChild::GetSpecificMessageEventTarget(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0d0x2f90093%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3108" font-family="Helvetica, Arial, sans-serif" x="1326" y="298.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3109" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">public: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)</tspan></text></a><a id="SvgjsA3113" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3111" font-family="Helvetica, Arial, sans-serif" x="1326" y="305.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3112" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3116" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3114" font-family="Helvetica, Arial, sans-serif" x="1326" y="309.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3115" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3119" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3117" font-family="Helvetica, Arial, sans-serif" x="1326" y="313.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3118" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3122" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3120" font-family="Helvetica, Arial, sans-serif" x="1326" y="317.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3121" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3125" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3123" font-family="Helvetica, Arial, sans-serif" x="1326" y="323.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3124" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3128" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3126" font-family="Helvetica, Arial, sans-serif" x="1326" y="326.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3127" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3131" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3129" font-family="Helvetica, Arial, sans-serif" x="1326" y="332.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3130" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3134" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3132" font-family="Helvetica, Arial, sans-serif" x="1326" y="337.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3133" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3137" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3135" font-family="Helvetica, Arial, sans-serif" x="1326" y="341.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3136" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3140" href="data:text/plain,public: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dprivate: virtual struct already_AddRefed&lt;class nsIEventTarget&gt; __cdecl mozilla::layers::CompositorManagerChild::GetSpecificMessageEventTarget(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0d0x2f90093%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3138" font-family="Helvetica, Arial, sans-serif" x="1326" y="345.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3139" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">public: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)</tspan></text></a><a id="SvgjsA3143" href="data:text/plain,class nsIEventTarget * __ptr64 __cdecl mozilla::GetMainThreadEventTarget(void)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dprivate: virtual struct already_AddRefed&lt;class nsIEventTarget&gt; __cdecl mozilla::layers::CompositorManagerChild::GetSpecificMessageEventTarget(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0d0x2f90093%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3141" font-family="Helvetica, Arial, sans-serif" x="1326" y="350.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3142" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">class nsIEventTarget * __ptr64 __cdecl mozilla::GetMainThreadEventTarget(void)</tspan></text></a><a id="SvgjsA3146" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3144" font-family="Helvetica, Arial, sans-serif" x="1326" y="354.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3145" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3149" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3147" font-family="Helvetica, Arial, sans-serif" x="1326" y="360.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3148" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3152" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3150" font-family="Helvetica, Arial, sans-serif" x="1326" y="365.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3151" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3155" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3153" font-family="Helvetica, Arial, sans-serif" x="1326" y="369.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3154" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3158" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3156" font-family="Helvetica, Arial, sans-serif" x="1326" y="373.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3157" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3161" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3159" font-family="Helvetica, Arial, sans-serif" x="1326" y="419.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3160" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3164" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3162" font-family="Helvetica, Arial, sans-serif" x="1326" y="423.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3163" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3167" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3165" font-family="Helvetica, Arial, sans-serif" x="1326" y="427.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3166" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3170" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3168" font-family="Helvetica, Arial, sans-serif" x="1326" y="432.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3169" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3173" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3171" font-family="Helvetica, Arial, sans-serif" x="1326" y="436.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3172" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3176" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3174" font-family="Helvetica, Arial, sans-serif" x="1326" y="440.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3175" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3179" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3177" font-family="Helvetica, Arial, sans-serif" x="1326" y="444.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3178" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3182" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3180" font-family="Helvetica, Arial, sans-serif" x="1326" y="450.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3181" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3185" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3183" font-family="Helvetica, Arial, sans-serif" x="1326" y="453.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3184" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3188" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3186" font-family="Helvetica, Arial, sans-serif" x="1326" y="457.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3187" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3191" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3189" font-family="Helvetica, Arial, sans-serif" x="1326" y="548.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3190" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3194" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3192" font-family="Helvetica, Arial, sans-serif" x="1326" y="570.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3193" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3197" href="data:text/plain,memcpy()%0a%0dpublic: bool __cdecl mozilla::BufferList&lt;class InfallibleAllocPolicy&gt;::WriteBytes(char const * __ptr64,unsigned __int64) __ptr64%0a%0dRtlSetLastWin32Error%0a%0dprotected: void __cdecl MessageLoop::PostTask_Helper(struct already_AddRefed&lt;class nsIRunnable&gt;,int) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3195" font-family="Helvetica, Arial, sans-serif" x="1326" y="574.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3196" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">memcpy()</tspan></text></a><a id="SvgjsA3200" href="data:text/plain,public: bool __cdecl IPC::Channel::ChannelImpl::Send(class IPC::Message * __ptr64) __ptr64%0a%0dclass nsIEventTarget * __ptr64 __cdecl mozilla::GetMainThreadEventTarget(void)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dprivate: virtual struct already_AddRefed&lt;class nsIEventTarget&gt; __cdecl mozilla::layers::CompositorManagerChild::GetSpecificMessageEventTarget(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0d0x2f90093%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3198" font-family="Helvetica, Arial, sans-serif" x="1326" y="578.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3199" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">public: bool __cdecl IPC::Channel::ChannelImpl::Send(class IPC::Message * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3203" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3201" font-family="Helvetica, Arial, sans-serif" x="1326" y="583.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3202" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3206" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3204" font-family="Helvetica, Arial, sans-serif" x="1326" y="587.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3205" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3209" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3207" font-family="Helvetica, Arial, sans-serif" x="1326" y="592.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3208" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3212" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3210" font-family="Helvetica, Arial, sans-serif" x="1326" y="595.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3211" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3215" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3213" font-family="Helvetica, Arial, sans-serif" x="1326" y="600.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3214" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3218" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3216" font-family="Helvetica, Arial, sans-serif" x="1326" y="605.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3217" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3221" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3219" font-family="Helvetica, Arial, sans-serif" x="1326" y="612.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3220" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3224" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3222" font-family="Helvetica, Arial, sans-serif" x="1326" y="615.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3223" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3227" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3225" font-family="Helvetica, Arial, sans-serif" x="1326" y="620.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3226" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3230" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3228" font-family="Helvetica, Arial, sans-serif" x="1326" y="629.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3229" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3233" href="data:text/plain,bool __cdecl mozilla::IsDebugFile(__int64)%0a%0dpublic: bool __cdecl IPC::Channel::ChannelImpl::Send(class IPC::Message * __ptr64) __ptr64%0a%0dclass nsIEventTarget * __ptr64 __cdecl mozilla::GetMainThreadEventTarget(void)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dprivate: virtual struct already_AddRefed&lt;class nsIEventTarget&gt; __cdecl mozilla::layers::CompositorManagerChild::GetSpecificMessageEventTarget(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0d0x2f90093%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3231" font-family="Helvetica, Arial, sans-serif" x="1326" y="3146.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3232" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl mozilla::IsDebugFile(__int64)</tspan></text></a><a id="SvgjsA3236" href="data:text/plain,bool __cdecl mozilla::IsDebugFile(__int64)%0a%0dpublic: bool __cdecl IPC::Channel::ChannelImpl::Send(class IPC::Message * __ptr64) __ptr64%0a%0dclass nsIEventTarget * __ptr64 __cdecl mozilla::GetMainThreadEventTarget(void)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dpublic: static class mozilla::dom::BrowserChild * __ptr64 __cdecl mozilla::dom::BrowserChild::GetFrom(struct mozilla::layers::LayersId)%0a%0dprivate: virtual struct already_AddRefed&lt;class nsIEventTarget&gt; __cdecl mozilla::layers::CompositorManagerChild::GetSpecificMessageEventTarget(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0d0x2f90093%0a%0dpublic: void __cdecl MessageLoop::PostTask(struct already_AddRefed&lt;class nsIRunnable&gt;) __ptr64%0a%0dpublic: void __cdecl mozilla::ipc::MessageChannel::MessageTask::Post(void) __ptr64%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3234" font-family="Helvetica, Arial, sans-serif" x="1326" y="3165.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3235" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl mozilla::IsDebugFile(__int64)</tspan></text></a><a id="SvgjsA3239" href="data:text/plain,public: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: char * __ptr64 __cdecl mozilla::BufferList&lt;class InfallibleAllocPolicy&gt;::AllocateSegment(unsigned __int64,unsigned __int64) __ptr64%0a%0dNtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3237" font-family="Helvetica, Arial, sans-serif" x="1326" y="3176.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3238" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">public: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)</tspan></text></a><a id="SvgjsA3242" href="data:text/plain,NtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3240" font-family="Helvetica, Arial, sans-serif" x="1326" y="3180.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3241" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtReadFile</tspan></text></a><a id="SvgjsA3245" href="data:text/plain,NtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3243" font-family="Helvetica, Arial, sans-serif" x="1326" y="3184.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3244" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtReadFile</tspan></text></a><a id="SvgjsA3248" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3246" font-family="Helvetica, Arial, sans-serif" x="1326" y="3189.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3247" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3251" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3249" font-family="Helvetica, Arial, sans-serif" x="1326" y="3193.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3250" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3254" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3252" font-family="Helvetica, Arial, sans-serif" x="1326" y="3198.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3253" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3257" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3255" font-family="Helvetica, Arial, sans-serif" x="1326" y="3202.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3256" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3260" href="data:text/plain,NtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3258" font-family="Helvetica, Arial, sans-serif" x="1326" y="3206.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3259" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtReadFile</tspan></text></a><a id="SvgjsA3263" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3261" font-family="Helvetica, Arial, sans-serif" x="1326" y="3210.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3262" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3266" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3264" font-family="Helvetica, Arial, sans-serif" x="1326" y="3215.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3265" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3269" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3267" font-family="Helvetica, Arial, sans-serif" x="1326" y="3219.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3268" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3272" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3270" font-family="Helvetica, Arial, sans-serif" x="1326" y="3226.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3271" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3275" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3273" font-family="Helvetica, Arial, sans-serif" x="1326" y="3230.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3274" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3278" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3276" font-family="Helvetica, Arial, sans-serif" x="1326" y="3234.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3277" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3281" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3279" font-family="Helvetica, Arial, sans-serif" x="1326" y="3238.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3280" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3284" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3282" font-family="Helvetica, Arial, sans-serif" x="1326" y="3243.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3283" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3287" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3285" font-family="Helvetica, Arial, sans-serif" x="1326" y="3247.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3286" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3290" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3288" font-family="Helvetica, Arial, sans-serif" x="1326" y="3251.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3289" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3293" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3291" font-family="Helvetica, Arial, sans-serif" x="1326" y="3256.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3292" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3296" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3294" font-family="Helvetica, Arial, sans-serif" x="1326" y="3260.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3295" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3299" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3297" font-family="Helvetica, Arial, sans-serif" x="1326" y="3264.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3298" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3302" href="data:text/plain,protected: __cdecl mozilla::IOInterposeObserver::Observation::Observation(enum mozilla::IOInterposeObserver::Operation,char const * __ptr64,bool) __ptr64%0a%0d`anonymous namespace'::InterposedNtReadFile%0a%0dNtReadFile%0a%0dprivate: bool __cdecl IPC::Channel::ChannelImpl::ProcessIncomingMessages(struct base::MessagePumpForIO::IOContext * __ptr64,unsigned long) __ptr64%0a%0dpublic: static void __cdecl mozilla::ipc::ChannelLog::Add(char const * __ptr64,char const * __ptr64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64,bool)%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3300" font-family="Helvetica, Arial, sans-serif" x="1326" y="3269.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3301" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">protected: __cdecl mozilla::IOInterposeObserver::Observation::Observation(enum mozilla::IOInterposeObserver::Operation,char const * __ptr64,bool) __ptr64</tspan></text></a><a id="SvgjsA3305" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3303" font-family="Helvetica, Arial, sans-serif" x="1326" y="3273.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3304" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3308" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3306" font-family="Helvetica, Arial, sans-serif" x="1326" y="3277.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3307" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3311" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3309" font-family="Helvetica, Arial, sans-serif" x="1326" y="3282.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3310" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3314" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3312" font-family="Helvetica, Arial, sans-serif" x="1326" y="3286.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3313" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3317" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3315" font-family="Helvetica, Arial, sans-serif" x="1326" y="3291.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3316" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3320" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3318" font-family="Helvetica, Arial, sans-serif" x="1326" y="3294.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3319" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3323" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3321" font-family="Helvetica, Arial, sans-serif" x="1326" y="3299.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3322" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3326" href="data:text/plain,NtRemoveIoCompletion%0a%0dGetQueuedCompletionStatus%0a%0dpublic: bool __cdecl base::MessagePumpForIO::WaitForIOCompletion(unsigned long,class base::MessagePumpForIO::IOHandler * __ptr64) __ptr64%0a%0dprivate: virtual void __cdecl base::MessagePumpForIO::DoRunLoop(void) __ptr64%0a%0dpublic: virtual void __cdecl base::MessagePumpWin::Run(class base::MessagePump::Delegate * __ptr64) __ptr64%0a%0dprotected: void __cdecl MessageLoop::RunHandler(void) __ptr64%0a%0dprivate: virtual void __cdecl base::Thread::ThreadMain(void) __ptr64%0a%0d`anonymous namespace'::ThreadFunc%0a%0dBaseThreadInitThunk%0a%0dRtlUserThreadStart"><text id="SvgjsText3324" font-family="Helvetica, Arial, sans-serif" x="1326" y="3303.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3325" dy="6.5" x="1326" svgjs:data="{&quot;newLined&quot;:true}">NtRemoveIoCompletion</tspan></text></a><a id="SvgjsA3329" href="data:text/plain,public: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3327" font-family="Helvetica, Arial, sans-serif" x="1619" y="36.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3328" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)</tspan></text></a><a id="SvgjsA3332" href="data:text/plain,AtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3330" font-family="Helvetica, Arial, sans-serif" x="1619" y="40.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3331" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">AtomTableMatchKey</tspan></text></a><a id="SvgjsA3335" href="data:text/plain,NtFindAtom%0a%0dInternalFindAtom%0a%0dGetPropW%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dprivate: struct arena_run_t * __ptr64 __cdecl arena_t::AllocRun(unsigned __int64,bool,bool) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0dpublic: static void * __ptr64 __cdecl Allocator&lt;struct MozJemallocBase&gt;::malloc(unsigned __int64)%0a%0dKiUserCallbackDispatcherContinue%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3333" font-family="Helvetica, Arial, sans-serif" x="1619" y="45.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3334" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtFindAtom</tspan></text></a><a id="SvgjsA3338" href="data:text/plain,RtlSleepConditionVariableSRW%0a%0dprivate: void * __ptr64 __cdecl arena_t::MallocSmall(unsigned __int64,bool) __ptr64%0a%0dstruct already_AddRefed&lt;class mozilla::dom::PointerEvent&gt; __cdecl NS_NewDOMPointerEvent(class mozilla::dom::EventTarget * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetPointerEvent * __ptr64)%0a%0dpublic: static struct already_AddRefed&lt;class mozilla::dom::Event&gt; __cdecl mozilla::EventDispatcher::CreateEvent(class mozilla::dom::EventTarget * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,enum mozilla::dom::CallerType)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dprivate: struct already_AddRefed&lt;class nsPIDOMWindowInner&gt; __cdecl mozilla::EventListenerManager::WindowFromListener(struct mozilla::EventListenerManager::Listener * __ptr64,bool) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dpublic: static bool __cdecl mozilla::widget::WinUtils::GetIsMouseFromTouch(enum mozilla::EventMessage)%0a%0dpublic: virtual bool __cdecl nsWindow::DispatchMouseEvent(enum mozilla::EventMessage,unsigned __int64,__int64,bool,short,unsigned short,class WinPointerInfo * __ptr64) __ptr64%0a%0dint64_t RealDefWindowProcWorker(struct tagWND *,unsigned int,uint64_t,int64_t,unsigned long)%0a%0dDefWindowProcW%0a%0dbool __cdecl XRE_IsParentProcess(void)%0a%0dprivate: bool __cdecl TimerThread::AddTimerInternal(class nsTimerImpl * __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl TimerThread::AddTimer(class nsTimerImpl * __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsTimerImpl::InitCommon(class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64,unsigned int,struct nsTimerImpl::Callback &amp;&amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsTimerImpl::InitWithFuncCallbackCommon(void (__cdecl*)(class nsITimer * __ptr64,void * __ptr64),void * __ptr64,unsigned int,unsigned int,class mozilla::Variant&lt;int const ,char const * __ptr64,void (__cdecl*)(class nsITimer * __ptr64,bool,void * __ptr64,char * __ptr64,unsigned __int64)&gt; const &amp; __ptr64) __ptr64%0a%0denum nsresult __cdecl NS_NewTimerWithFuncCallback(class nsITimer * __ptr64 * __ptr64,void (__cdecl*)(class nsITimer * __ptr64,void * __ptr64),void * __ptr64,unsigned int,unsigned int,char const * __ptr64,class nsIEventTarget * __ptr64)%0a%0dpublic: void __cdecl nsXULTooltipListener::MouseMove(class mozilla::dom::Event * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::getLocation(struct JSContext * __ptr64,class js::FrameIter const &amp; __ptr64,class JS::MutableHandle&lt;struct js::SavedStacks::LocationValue&gt;) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::insertFrames(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl js::SavedStacks::saveCurrentStack(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64) __ptr64%0a%0djs::SavedStacks::saveCurrentStack%0a%0dbool __cdecl JS::CaptureCurrentStack(struct JSContext * __ptr64,class JS::MutableHandle&lt;class JSObject * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64)%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3336" font-family="Helvetica, Arial, sans-serif" x="1619" y="49.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3337" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">RtlSleepConditionVariableSRW</tspan></text></a><a id="SvgjsA3341" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3339" font-family="Helvetica, Arial, sans-serif" x="1619" y="53.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3340" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3344" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3342" font-family="Helvetica, Arial, sans-serif" x="1619" y="58.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3343" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3347" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3345" font-family="Helvetica, Arial, sans-serif" x="1619" y="62.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3346" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3350" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3348" font-family="Helvetica, Arial, sans-serif" x="1619" y="66.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3349" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3353" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3351" font-family="Helvetica, Arial, sans-serif" x="1619" y="71.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3352" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3356" href="data:text/plain,public: virtual enum nsresult __cdecl mozilla::dom::Document::QueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dprivate: void __cdecl nsWrapperCache::SetWrapperJSObject(class JSObject * __ptr64) __ptr64%0a%0dservo_arc::{{impl}}::drop&lt;style::gecko_bindings::structs::root::mozilla::GeckoXUL&gt;%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0d[js] _callProgressListeners%0a%0d[js] _getSwitcher%0a%0dpublic: struct PLDHashEntryHdr * __ptr64 __cdecl PLDHashTable::Add(void const * __ptr64,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dprotected: void __cdecl nsXULTooltipListener::LaunchTooltip(void) __ptr64%0a%0dpublic: bool __cdecl nsPresContext::HasAuthorSpecifiedRules(class nsIFrame const * __ptr64,unsigned int)const __ptr64%0a%0dpublic: virtual bool __cdecl nsNativeThemeWin::ThemeSupportsWidget(class nsPresContext * __ptr64,class nsIFrame * __ptr64,enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: virtual void __cdecl nsHTMLButtonControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: virtual void __cdecl nsFlexContainerFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dDisplayLine%0a%0dpublic: virtual void __cdecl nsBlockFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3354" font-family="Helvetica, Arial, sans-serif" x="1619" y="75.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3355" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: virtual enum nsresult __cdecl mozilla::dom::Document::QueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3359" href="data:text/plain,private: void * __ptr64 __cdecl nsPropertyTable::GetPropertyInternal(class nsPropertyOwner,class nsAtom const * __ptr64,bool,enum nsresult * __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl nsINode::GetProperty(class nsAtom const * __ptr64,enum nsresult * __ptr64)const __ptr64%0a%0dpublic: static class mozilla::dom::Element * __ptr64 __cdecl nsLayoutUtils::GetMarkerPseudo(class nsIContent const * __ptr64)%0a%0dpublic: class nsIContent * __ptr64 __cdecl mozilla::dom::AllChildrenIterator::GetNextChild(void) __ptr64%0a%0d_ZN103_$LT$style..gecko..wrapper..GeckoChildrenIterator$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48f989a72d401f24E%0a%0d_ZN94_$LT$style..dom..LayoutIterator$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h758ae3634baeb2b1E%0a%0denum js::jit::EnterJitStatus __cdecl js::jit::MaybeEnterJit(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3357" font-family="Helvetica, Arial, sans-serif" x="1619" y="79.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3358" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">private: void * __ptr64 __cdecl nsPropertyTable::GetPropertyInternal(class nsPropertyOwner,class nsAtom const * __ptr64,bool,enum nsresult * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3362" href="data:text/plain,mozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3360" font-family="Helvetica, Arial, sans-serif" x="1619" y="84.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3361" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">mozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;</tspan></text></a><a id="SvgjsA3365" href="data:text/plain,NtUserGetProp%0a%0dGetPropW%0a%0dprotected: static __int64 __cdecl nsWindow::WindowProcInternal(struct HWND__ * __ptr64,unsigned int,unsigned __int64,__int64)%0a%0dDispatchClientMessage%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3363" font-family="Helvetica, Arial, sans-serif" x="1619" y="88.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3364" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetProp</tspan></text></a><a id="SvgjsA3368" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3366" font-family="Helvetica, Arial, sans-serif" x="1619" y="92.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3367" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3371" href="data:text/plain,vp9_row_mt_sync_write_dummy%0a%0dpublic: __cdecl mozilla::ipc::MessageChannel::CxxStackFrame::CxxStackFrame(class mozilla::ipc::MessageChannel &amp; __ptr64,enum mozilla::ipc::Direction,class IPC::Message const * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64) __ptr64%0a%0dQueryPerformanceCounterStub%0a%0dprivate: static class mozilla::TimeStamp __cdecl mozilla::TimeStamp::Now(bool)%0a%0dNewObject%0a%0dclass JSObject * __ptr64 __cdecl js::NewObjectWithGivenTaggedProto(struct JSContext * __ptr64,struct JSClass const * __ptr64,class JS::Handle&lt;class js::TaggedProto&gt;,enum js::gc::AllocKind,enum js::NewObjectKind,unsigned int)%0a%0dpublic: virtual unsigned long __cdecl mozilla::net::nsIOService::Release(void) __ptr64%0a%0dbool __cdecl NS_URIIsLocalFile(class nsIURI * __ptr64)%0a%0denum nsresult __cdecl mozilla::ipc::LoadInfoArgsToLoadInfo(class mozilla::Maybe&lt;class mozilla::net::LoadInfoArgs&gt; const &amp; __ptr64,class nsINode * __ptr64,class nsINode * __ptr64,class mozilla::net::LoadInfo * __ptr64 * __ptr64)%0a%0dXPCWrappedJS QueryInterface%0a%0dpublic: void __cdecl nsCOMPtr_base::assign_from_qi(class nsQueryInterfaceISupports,struct nsID const &amp; __ptr64) __ptr64%0a%0dXREMain::XRE_main"><text id="SvgjsText3369" font-family="Helvetica, Arial, sans-serif" x="1619" y="97.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3370" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">vp9_row_mt_sync_write_dummy</tspan></text></a><a id="SvgjsA3374" href="data:text/plain,NtUserGetThreadState%0a%0dpublic: static unsigned short __cdecl mozilla::widget::WinUtils::GetMousePointerID(void)%0a%0dpublic: virtual bool __cdecl nsWindow::DispatchMouseEvent(enum mozilla::EventMessage,unsigned __int64,__int64,bool,short,unsigned short,class WinPointerInfo * __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEvent(class nsIFrame * __ptr64,class mozilla::WidgetGUIEvent * __ptr64,bool,enum nsEventStatus * __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dNtUserWindowFromPoint%0a%0dpublic: virtual bool __cdecl nsWindow::DispatchMouseEvent(enum mozilla::EventMessage,unsigned __int64,__int64,bool,short,unsigned short,class WinPointerInfo * __ptr64) __ptr64%0a%0dprotected: virtual bool __cdecl nsWindow::ProcessMessage(unsigned int,unsigned __int64 &amp; __ptr64,__int64 &amp; __ptr64,__int64 * __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::HasAnimationOfPropertySet(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64)%0a%0dpublic: static bool __cdecl nsLayoutUtils::HasAnimationOfTransformAndMotionPath(class nsIFrame const * __ptr64)%0a%0dpublic: bool __cdecl nsIFrame::IsCSSTransformed(struct nsStyleDisplay const * __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsIFrame::IsTransformed(struct nsStyleDisplay const * __ptr64)const __ptr64%0a%0dpublic: static struct nsPoint __cdecl nsLayoutUtils::GetEventCoordinatesRelativeTo(class nsIWidget * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::LayoutDevicePixel&gt; const &amp; __ptr64,class nsIFrame * __ptr64)%0a%0dpublic: static class nsIFrame * __ptr64 __cdecl nsLayoutUtils::GetPopupFrameForEventCoordinates(class nsPresContext * __ptr64,class mozilla::WidgetEvent const * __ptr64)%0a%0dprivate: class nsIFrame * __ptr64 __cdecl mozilla::PresShell::EventHandler::ComputeRootFrameToHandleEventWithPopup(class nsIFrame * __ptr64,class mozilla::WidgetGUIEvent * __ptr64,class nsIContent * __ptr64,bool * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventUsingCoordinates(class nsIFrame * __ptr64,class mozilla::WidgetGUIEvent * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dNtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3372" font-family="Helvetica, Arial, sans-serif" x="1619" y="101.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3373" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetThreadState</tspan></text></a><a id="SvgjsA3377" href="data:text/plain,protected: void __cdecl MessageLoop::PostTask_Helper(struct already_AddRefed&lt;class nsIRunnable&gt;,int) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl XPCWrappedNative::QueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::Assign(class nsTSubstring&lt;char&gt; const &amp; __ptr64,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dclass mozilla::storage::Variant_base * __ptr64 __cdecl mozilla::storage::convertVariantToStorageVariant(class nsIVariant * __ptr64)%0a%0dbindCookieParameters%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::BuildNormalizedSpec(char const * __ptr64,class mozilla::Encoding const * __ptr64) __ptr64%0a%0dbool __cdecl json_stringify(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] _getKeyForCookie%0a%0d[js] add%0a%0dPCookieService::Msg_AddCookie%0a%0dpublic: bool __cdecl mozilla::OriginAttributes::PopulateFromSuffix(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::storage::AsyncBindingParams::AsyncBindingParams(class mozIStorageBindingParamsArray * __ptr64) __ptr64%0a%0dpublic: virtual struct already_AddRefed&lt;class mozIStorageBindingParams&gt; __cdecl mozilla::storage::AsyncStatement::newBindingParams(class mozIStorageBindingParamsArray * __ptr64) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::storage::BindingParamsArray::NewBindingParams(class mozIStorageBindingParams * __ptr64 * __ptr64) __ptr64%0a%0dprotected: void __cdecl nsCookieService::RemoveCookieFromList(struct nsListIter const &amp; __ptr64,class mozIStorageBindingParamsArray * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::detail::EventQueueInternal&lt;16&gt;::PutEvent(struct already_AddRefed&lt;class nsIRunnable&gt; &amp;&amp; __ptr64,enum mozilla::EventQueuePriority,class mozilla::BaseAutoLock&lt;class mozilla::Mutex &amp; __ptr64&gt; const &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; * __ptr64) __ptr64%0a%0dint64_t UserCallWinProcCheckWow(struct _ACTIVATION_CONTEXT *,int64_t ( *)(struct tagWND *,unsigned int,uint64_t,int64_t),struct HWND__*,enum _WM_VALUE,uint64_t,int64_t,void *,int)%0a%0dNtUserGetKeyState%0a%0dpublic: virtual unsigned long __cdecl nsJSPrincipals::AddRef(void) __ptr64%0a%0dpublic: enum nsresult __cdecl mozilla::places::History::QueueVisitedStatement(class RefPtr&lt;class mozilla::places::VisitedQuery&gt;) __ptr64%0a%0dpublic: static enum nsresult __cdecl mozilla::places::VisitedQuery::Start(class nsIURI * __ptr64,class mozIVisitedStatusCallback * __ptr64)%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: virtual void __cdecl nsHTMLButtonControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: virtual void __cdecl nsFlexContainerFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dDisplayLine%0a%0dpublic: virtual void __cdecl nsBlockFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3375" font-family="Helvetica, Arial, sans-serif" x="1619" y="105.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3376" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">protected: void __cdecl MessageLoop::PostTask_Helper(struct already_AddRefed&lt;class nsIRunnable&gt;,int) __ptr64</tspan></text></a><a id="SvgjsA3380" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3378" font-family="Helvetica, Arial, sans-serif" x="1619" y="109.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3379" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3383" href="data:text/plain,NtUserGetProp%0a%0dGetPropW%0a%0dprotected: static __int64 __cdecl nsWindow::WindowProcInternal(struct HWND__ * __ptr64,unsigned int,unsigned __int64,__int64)%0a%0dDispatchClientMessage%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3381" font-family="Helvetica, Arial, sans-serif" x="1619" y="114.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3382" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetProp</tspan></text></a><a id="SvgjsA3386" href="data:text/plain,NtUserMessageCall%0a%0dCallNextHookEx%0a%0dint64_t fnHkINLPCWPSTRUCTW(struct tagWND *,unsigned int,uint64_t,int64_t,uint64_t)%0a%0dpublic: class mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt; __cdecl mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt;::operator*&lt;struct mozilla::gfx::UnknownUnits&gt;(class mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt; const &amp; __ptr64)const __ptr64%0a%0dpublic: virtual void __cdecl mozilla::layers::BasicContainerLayer::ComputeEffectiveTransforms(class mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::FrameLayerBuilder::AddPaintedDisplayItem(class mozilla::PaintedLayerData * __ptr64,struct mozilla::AssignedDisplayItem &amp; __ptr64,class mozilla::layers::Layer * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::PaintedLayerDataNode::PopAllPaintedLayerData(void) __ptr64%0a%0dpublic: void __cdecl mozilla::PaintedLayerDataTree::Finish(void) __ptr64%0a%0dpublic: void __cdecl mozilla::ContainerState::Finish(unsigned int * __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class nsDisplayList * __ptr64) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::ContainerLayer&gt; __cdecl mozilla::FrameLayerBuilder::BuildContainerLayerFor(class nsDisplayListBuilder * __ptr64,class mozilla::layers::LayerManager * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class nsDisplayList * __ptr64,struct mozilla::ContainerLayerParameters const &amp; __ptr64,class mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt; const * __ptr64,unsigned int) __ptr64%0a%0dpublic: class mozilla::FrameLayerBuilder * __ptr64 __cdecl nsDisplayList::BuildLayers(class nsDisplayListBuilder * __ptr64,class mozilla::layers::LayerManager * __ptr64,unsigned int,bool) __ptr64%0a%0dLayer building%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3384" font-family="Helvetica, Arial, sans-serif" x="1619" y="118.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3385" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserMessageCall</tspan></text></a><a id="SvgjsA3389" href="data:text/plain,public: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3387" font-family="Helvetica, Arial, sans-serif" x="1619" y="122.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3388" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3392" href="data:text/plain,NtFindAtom%0a%0dInternalFindAtom%0a%0dGetPropW%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dprivate: struct arena_run_t * __ptr64 __cdecl arena_t::AllocRun(unsigned __int64,bool,bool) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0dpublic: static void * __ptr64 __cdecl Allocator&lt;struct MozJemallocBase&gt;::malloc(unsigned __int64)%0a%0dKiUserCallbackDispatcherContinue%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3390" font-family="Helvetica, Arial, sans-serif" x="1619" y="127.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3391" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtFindAtom</tspan></text></a><a id="SvgjsA3395" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3393" font-family="Helvetica, Arial, sans-serif" x="1619" y="131.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3394" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3398" href="data:text/plain,NtUserMessageCall%0a%0dCallNextHookEx%0a%0dint64_t fnHkINLPCWPSTRUCTW(struct tagWND *,unsigned int,uint64_t,int64_t,uint64_t)%0a%0dpublic: class mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt; __cdecl mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt;::operator*&lt;struct mozilla::gfx::UnknownUnits&gt;(class mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt; const &amp; __ptr64)const __ptr64%0a%0dpublic: virtual void __cdecl mozilla::layers::BasicContainerLayer::ComputeEffectiveTransforms(class mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::FrameLayerBuilder::AddPaintedDisplayItem(class mozilla::PaintedLayerData * __ptr64,struct mozilla::AssignedDisplayItem &amp; __ptr64,class mozilla::layers::Layer * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::PaintedLayerDataNode::PopAllPaintedLayerData(void) __ptr64%0a%0dpublic: void __cdecl mozilla::PaintedLayerDataTree::Finish(void) __ptr64%0a%0dpublic: void __cdecl mozilla::ContainerState::Finish(unsigned int * __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class nsDisplayList * __ptr64) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::ContainerLayer&gt; __cdecl mozilla::FrameLayerBuilder::BuildContainerLayerFor(class nsDisplayListBuilder * __ptr64,class mozilla::layers::LayerManager * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class nsDisplayList * __ptr64,struct mozilla::ContainerLayerParameters const &amp; __ptr64,class mozilla::gfx::Matrix4x4Typed&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits,float&gt; const * __ptr64,unsigned int) __ptr64%0a%0dpublic: class mozilla::FrameLayerBuilder * __ptr64 __cdecl nsDisplayList::BuildLayers(class nsDisplayListBuilder * __ptr64,class mozilla::layers::LayerManager * __ptr64,unsigned int,bool) __ptr64%0a%0dLayer building%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3396" font-family="Helvetica, Arial, sans-serif" x="1619" y="135.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3397" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserMessageCall</tspan></text></a><a id="SvgjsA3401" href="data:text/plain,NtUserGetProp%0a%0dGetPropW%0a%0dprotected: static __int64 __cdecl nsWindow::WindowProcInternal(struct HWND__ * __ptr64,unsigned int,unsigned __int64,__int64)%0a%0dDispatchClientMessage%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3399" font-family="Helvetica, Arial, sans-serif" x="1619" y="140.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3400" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetProp</tspan></text></a><a id="SvgjsA3404" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3402" font-family="Helvetica, Arial, sans-serif" x="1619" y="144.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3403" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3407" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3405" font-family="Helvetica, Arial, sans-serif" x="1619" y="148.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3406" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3410" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3408" font-family="Helvetica, Arial, sans-serif" x="1619" y="153.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3409" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3413" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3411" font-family="Helvetica, Arial, sans-serif" x="1619" y="157.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3412" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3416" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3414" font-family="Helvetica, Arial, sans-serif" x="1619" y="161.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3415" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3419" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3417" font-family="Helvetica, Arial, sans-serif" x="1619" y="166.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3418" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3422" href="data:text/plain,NtUserGetKeyState%0a%0dGetKeyState%0a%0dpublic: void __cdecl mozilla::widget::ModifierKeyState::Update(void) __ptr64%0a%0dpublic: __cdecl mozilla::widget::ModifierKeyState::ModifierKeyState(void) __ptr64%0a%0dpublic: virtual bool __cdecl nsWindow::DispatchMouseEvent(enum mozilla::EventMessage,unsigned __int64,__int64,bool,short,unsigned short,class WinPointerInfo * __ptr64) __ptr64%0a%0dDefWindowProcW%0a%0dCallWindowProcW%0a%0dprotected: static __int64 __cdecl nsWindow::WindowProcInternal(struct HWND__ * __ptr64,unsigned int,unsigned __int64,__int64)%0a%0dpublic: void * __ptr64 __cdecl AddressRadixTree&lt;44&gt;::Get(void * __ptr64) __ptr64%0a%0dpublic: static class AllocInfo __cdecl AllocInfo::Get&lt;1&gt;(void const * __ptr64)%0a%0dpublic: static unsigned __int64 __cdecl Allocator&lt;struct MozJemallocBase&gt;::malloc_usable_size(void const * __ptr64)%0a%0dmozilla::profiler::AllocCallback%0a%0dreplace_malloc%0a%0dmoz_xmalloc%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3420" font-family="Helvetica, Arial, sans-serif" x="1619" y="170.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3421" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetKeyState</tspan></text></a><a id="SvgjsA3425" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3423" font-family="Helvetica, Arial, sans-serif" x="1619" y="174.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3424" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3428" href="data:text/plain,private: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3426" font-family="Helvetica, Arial, sans-serif" x="1619" y="179.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3427" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">private: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3431" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3429" font-family="Helvetica, Arial, sans-serif" x="1619" y="183.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3430" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3434" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3432" font-family="Helvetica, Arial, sans-serif" x="1619" y="187.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3433" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3437" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3435" font-family="Helvetica, Arial, sans-serif" x="1619" y="191.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3436" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3440" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3438" font-family="Helvetica, Arial, sans-serif" x="1619" y="196.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3439" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3443" href="data:text/plain,private: bool __cdecl js::SavedStacks::getLocation(struct JSContext * __ptr64,class js::FrameIter const &amp; __ptr64,class JS::MutableHandle&lt;struct js::SavedStacks::LocationValue&gt;) __ptr64%0a%0d[js] Deferred%0a%0d[js] defer%0a%0dclass js::jit::ICStub * __ptr64 __cdecl js::jit::AttachBaselineCacheIRStub(struct JSContext * __ptr64,class js::jit::CacheIRWriter const &amp; __ptr64,enum js::jit::CacheKind,enum js::jit::BaselineCacheIRStubKind,class JSScript * __ptr64,class js::jit::ICFallbackStub * __ptr64,bool * __ptr64)%0a%0d[js] _RouteMessage%0a%0d[js] AlsoToMain%0a%0dpublic: bool __cdecl mozilla::extensions::MatchPatternSet::Matches(class mozilla::extensions::URLInfo const &amp; __ptr64,bool)const __ptr64%0a%0dChannelWrapper.matches%0a%0d0x230bf4c9621%0a%0d[js] runChannelListener/&lt;%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dprotected: virtual bool __cdecl nsWindow::ProcessMessage(unsigned int,unsigned __int64 &amp; __ptr64,__int64 &amp; __ptr64,__int64 * __ptr64) __ptr64%0a%0dNtAddAtomEx%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3441" font-family="Helvetica, Arial, sans-serif" x="1619" y="200.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3442" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">private: bool __cdecl js::SavedStacks::getLocation(struct JSContext * __ptr64,class js::FrameIter const &amp; __ptr64,class JS::MutableHandle&lt;struct js::SavedStacks::LocationValue&gt;) __ptr64</tspan></text></a><a id="SvgjsA3446" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3444" font-family="Helvetica, Arial, sans-serif" x="1619" y="205.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3445" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3449" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3447" font-family="Helvetica, Arial, sans-serif" x="1619" y="209.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3448" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3452" href="data:text/plain,NtUserGetThreadState%0a%0dpublic: static unsigned short __cdecl mozilla::widget::WinUtils::GetMousePointerID(void)%0a%0dpublic: virtual bool __cdecl nsWindow::DispatchMouseEvent(enum mozilla::EventMessage,unsigned __int64,__int64,bool,short,unsigned short,class WinPointerInfo * __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEvent(class nsIFrame * __ptr64,class mozilla::WidgetGUIEvent * __ptr64,bool,enum nsEventStatus * __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dNtUserWindowFromPoint%0a%0dpublic: virtual bool __cdecl nsWindow::DispatchMouseEvent(enum mozilla::EventMessage,unsigned __int64,__int64,bool,short,unsigned short,class WinPointerInfo * __ptr64) __ptr64%0a%0dprotected: virtual bool __cdecl nsWindow::ProcessMessage(unsigned int,unsigned __int64 &amp; __ptr64,__int64 &amp; __ptr64,__int64 * __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::HasAnimationOfPropertySet(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64)%0a%0dpublic: static bool __cdecl nsLayoutUtils::HasAnimationOfTransformAndMotionPath(class nsIFrame const * __ptr64)%0a%0dpublic: bool __cdecl nsIFrame::IsCSSTransformed(struct nsStyleDisplay const * __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsIFrame::IsTransformed(struct nsStyleDisplay const * __ptr64)const __ptr64%0a%0dpublic: static struct nsPoint __cdecl nsLayoutUtils::GetEventCoordinatesRelativeTo(class nsIWidget * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::LayoutDevicePixel&gt; const &amp; __ptr64,class nsIFrame * __ptr64)%0a%0dpublic: static class nsIFrame * __ptr64 __cdecl nsLayoutUtils::GetPopupFrameForEventCoordinates(class nsPresContext * __ptr64,class mozilla::WidgetEvent const * __ptr64)%0a%0dprivate: class nsIFrame * __ptr64 __cdecl mozilla::PresShell::EventHandler::ComputeRootFrameToHandleEventWithPopup(class nsIFrame * __ptr64,class mozilla::WidgetGUIEvent * __ptr64,class nsIContent * __ptr64,bool * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventUsingCoordinates(class nsIFrame * __ptr64,class mozilla::WidgetGUIEvent * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dNtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3450" font-family="Helvetica, Arial, sans-serif" x="1619" y="213.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3451" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetThreadState</tspan></text></a><a id="SvgjsA3455" href="data:text/plain,public: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3453" font-family="Helvetica, Arial, sans-serif" x="1619" y="217.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3454" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3458" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3456" font-family="Helvetica, Arial, sans-serif" x="1619" y="222.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3457" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3461" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3459" font-family="Helvetica, Arial, sans-serif" x="1619" y="226.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3460" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3464" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3462" font-family="Helvetica, Arial, sans-serif" x="1619" y="230.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3463" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3467" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3465" font-family="Helvetica, Arial, sans-serif" x="1619" y="235.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3466" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3470" href="data:text/plain,NtFindAtom%0a%0dInternalFindAtom%0a%0dGetPropW%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dprivate: struct arena_run_t * __ptr64 __cdecl arena_t::AllocRun(unsigned __int64,bool,bool) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0dpublic: static void * __ptr64 __cdecl Allocator&lt;struct MozJemallocBase&gt;::malloc(unsigned __int64)%0a%0dKiUserCallbackDispatcherContinue%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3468" font-family="Helvetica, Arial, sans-serif" x="1619" y="239.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3469" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtFindAtom</tspan></text></a><a id="SvgjsA3473" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3471" font-family="Helvetica, Arial, sans-serif" x="1619" y="243.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3472" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3476" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3474" font-family="Helvetica, Arial, sans-serif" x="1619" y="248.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3475" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3479" href="data:text/plain,public: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3477" font-family="Helvetica, Arial, sans-serif" x="1619" y="252.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3478" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64</tspan></text></a><a id="SvgjsA3482" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3480" font-family="Helvetica, Arial, sans-serif" x="1619" y="256.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3481" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3485" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3483" font-family="Helvetica, Arial, sans-serif" x="1619" y="261.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3484" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3488" href="data:text/plain,NtFindAtom%0a%0dInternalFindAtom%0a%0dGetPropW%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dprivate: struct arena_run_t * __ptr64 __cdecl arena_t::AllocRun(unsigned __int64,bool,bool) __ptr64%0a%0dpublic: void * __ptr64 __cdecl BaseAllocator::malloc(unsigned __int64) __ptr64%0a%0dpublic: static void * __ptr64 __cdecl Allocator&lt;struct MozJemallocBase&gt;::malloc(unsigned __int64)%0a%0dKiUserCallbackDispatcherContinue%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3486" font-family="Helvetica, Arial, sans-serif" x="1619" y="265.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3487" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtFindAtom</tspan></text></a><a id="SvgjsA3491" href="data:text/plain,public: static void __cdecl mozilla::BlocksRingBuffer::Serializer&lt;class mozilla::Maybe&lt;unsigned __int64&gt; &gt;::Write(class mozilla::BlocksRingBuffer::EntryWriter &amp; __ptr64,class mozilla::Maybe&lt;unsigned __int64&gt; const &amp; __ptr64)%0a%0dprotected: void __cdecl TracingMarkerPayload::SerializeTagAndPayload(unsigned char,class mozilla::BlocksRingBuffer::EntryWriter &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::DoReflow(class nsIFrame * __ptr64,bool,class mozilla::OverflowChangedTracker * __ptr64) __ptr64%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl mozilla::dom::Element::Closest(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0d[js] switchToStop%0a%0d[js] _callProgressListeners%0a%0dpublic: void __cdecl mozilla::net::DocumentLoadListener::SerializeRedirectData(class mozilla::net::RedirectToRealChannelArgs &amp; __ptr64,bool,unsigned int,unsigned int) __ptr64%0a%0dprivate: virtual class RefPtr&lt;class mozilla::MozPromise&lt;class mozilla::Tuple&lt;enum nsresult,class mozilla::Maybe&lt;class mozilla::net::LoadInfoArgs&gt; &gt;,enum mozilla::ipc::ResponseRejectReason,1&gt; &gt; __cdecl mozilla::net::DocumentChannelParent::RedirectToRealChannel(unsigned int,unsigned int) __ptr64%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dXREMain::XRE_main"><text id="SvgjsText3489" font-family="Helvetica, Arial, sans-serif" x="1619" y="269.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3490" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static void __cdecl mozilla::BlocksRingBuffer::Serializer&lt;class mozilla::Maybe&lt;unsigned __int64&gt; &gt;::Write(class mozilla::BlocksRingBuffer::EntryWriter &amp; __ptr64,class mozilla::Maybe&lt;unsigned __int64&gt; const &amp; __ptr64)</tspan></text></a><a id="SvgjsA3494" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3492" font-family="Helvetica, Arial, sans-serif" x="1619" y="274.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3493" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3497" href="data:text/plain,NtUserGetKeyState%0a%0dGetKeyState%0a%0dpublic: void __cdecl mozilla::widget::ModifierKeyState::Update(void) __ptr64%0a%0dpublic: __cdecl mozilla::widget::ModifierKeyState::ModifierKeyState(void) __ptr64%0a%0dpublic: virtual bool __cdecl nsWindow::DispatchMouseEvent(enum mozilla::EventMessage,unsigned __int64,__int64,bool,short,unsigned short,class WinPointerInfo * __ptr64) __ptr64%0a%0dDefWindowProcW%0a%0dCallWindowProcW%0a%0dprotected: static __int64 __cdecl nsWindow::WindowProcInternal(struct HWND__ * __ptr64,unsigned int,unsigned __int64,__int64)%0a%0dpublic: void * __ptr64 __cdecl AddressRadixTree&lt;44&gt;::Get(void * __ptr64) __ptr64%0a%0dpublic: static class AllocInfo __cdecl AllocInfo::Get&lt;1&gt;(void const * __ptr64)%0a%0dpublic: static unsigned __int64 __cdecl Allocator&lt;struct MozJemallocBase&gt;::malloc_usable_size(void const * __ptr64)%0a%0dmozilla::profiler::AllocCallback%0a%0dreplace_malloc%0a%0dmoz_xmalloc%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3495" font-family="Helvetica, Arial, sans-serif" x="1619" y="278.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3496" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetKeyState</tspan></text></a><a id="SvgjsA3500" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3498" font-family="Helvetica, Arial, sans-serif" x="1619" y="282.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3499" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3503" href="data:text/plain,bool __cdecl JS_GetPropertyById(struct JSContext * __ptr64,class JS::Handle&lt;class JSObject * __ptr64&gt;,class JS::Handle&lt;struct JS::PropertyKey&gt;,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: enum nsresult __cdecl nsXPCWrappedJS::DelegatedQueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64%0a%0dXPCWrappedJS QueryInterface%0a%0dpublic: void __cdecl nsCOMPtr_base::assign_from_qi(class nsQueryInterfaceISupports,struct nsID const &amp; __ptr64) __ptr64%0a%0dXREMain::XRE_main"><text id="SvgjsText3501" font-family="Helvetica, Arial, sans-serif" x="1619" y="287.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3502" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl JS_GetPropertyById(struct JSContext * __ptr64,class JS::Handle&lt;class JSObject * __ptr64&gt;,class JS::Handle&lt;struct JS::PropertyKey&gt;,class JS::MutableHandle&lt;class JS::Value&gt;)</tspan></text></a><a id="SvgjsA3506" href="data:text/plain,bool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3504" font-family="Helvetica, Arial, sans-serif" x="1619" y="291.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3505" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)</tspan></text></a><a id="SvgjsA3509" href="data:text/plain,GetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3507" font-family="Helvetica, Arial, sans-serif" x="1619" y="295.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3508" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">GetTopImpl</tspan></text></a><a id="SvgjsA3512" href="data:text/plain,public: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3510" font-family="Helvetica, Arial, sans-serif" x="1619" y="304.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3511" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64</tspan></text></a><a id="SvgjsA3515" href="data:text/plain,public: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3513" font-family="Helvetica, Arial, sans-serif" x="1619" y="308.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3514" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64</tspan></text></a><a id="SvgjsA3518" href="data:text/plain,public: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3516" font-family="Helvetica, Arial, sans-serif" x="1619" y="312.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3517" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64</tspan></text></a><a id="SvgjsA3521" href="data:text/plain,private: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3519" font-family="Helvetica, Arial, sans-serif" x="1619" y="317.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3520" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">private: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3524" href="data:text/plain,core::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3522" font-family="Helvetica, Arial, sans-serif" x="1619" y="321.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3523" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">core::sync::atomic::AtomicUsize::fetch_sub</tspan></text></a><a id="SvgjsA3527" href="data:text/plain,core::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3525" font-family="Helvetica, Arial, sans-serif" x="1619" y="325.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3526" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">core::sync::atomic::AtomicUsize::fetch_sub</tspan></text></a><a id="SvgjsA3530" href="data:text/plain,public: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3528" font-family="Helvetica, Arial, sans-serif" x="1619" y="330.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3529" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64</tspan></text></a><a id="SvgjsA3533" href="data:text/plain,public: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3531" font-family="Helvetica, Arial, sans-serif" x="1619" y="336.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3532" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64</tspan></text></a><a id="SvgjsA3536" href="data:text/plain,public: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3534" font-family="Helvetica, Arial, sans-serif" x="1619" y="341.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3535" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3539" href="data:text/plain,void __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3537" font-family="Helvetica, Arial, sans-serif" x="1619" y="345.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3538" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">void __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)</tspan></text></a><a id="SvgjsA3542" href="data:text/plain,void __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3540" font-family="Helvetica, Arial, sans-serif" x="1619" y="349.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3541" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">void __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)</tspan></text></a><a id="SvgjsA3545" href="data:text/plain,void __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3543" font-family="Helvetica, Arial, sans-serif" x="1619" y="353.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3544" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">void __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)</tspan></text></a><a id="SvgjsA3548" href="data:text/plain,public: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3546" font-family="Helvetica, Arial, sans-serif" x="1619" y="358.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3547" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)</tspan></text></a><a id="SvgjsA3551" href="data:text/plain,protected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3549" font-family="Helvetica, Arial, sans-serif" x="1619" y="364.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3550" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">protected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64</tspan></text></a><a id="SvgjsA3554" href="data:text/plain,public: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3552" font-family="Helvetica, Arial, sans-serif" x="1619" y="369.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3553" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64</tspan></text></a><a id="SvgjsA3557" href="data:text/plain,public: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3555" font-family="Helvetica, Arial, sans-serif" x="1619" y="373.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3556" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64</tspan></text></a><a id="SvgjsA3560" href="data:text/plain,public: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3558" font-family="Helvetica, Arial, sans-serif" x="1619" y="412.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3559" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)</tspan></text></a><a id="SvgjsA3563" href="data:text/plain,bool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3561" font-family="Helvetica, Arial, sans-serif" x="1619" y="423.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3562" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)</tspan></text></a><a id="SvgjsA3566" href="data:text/plain,public: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3564" font-family="Helvetica, Arial, sans-serif" x="1619" y="427.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3565" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)</tspan></text></a><a id="SvgjsA3569" href="data:text/plain,public: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3567" font-family="Helvetica, Arial, sans-serif" x="1619" y="431.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3568" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3572" href="data:text/plain,public: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3570" font-family="Helvetica, Arial, sans-serif" x="1619" y="435.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3571" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)</tspan></text></a><a id="SvgjsA3575" href="data:text/plain,public: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3573" font-family="Helvetica, Arial, sans-serif" x="1619" y="440.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3574" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3578" href="data:text/plain,public: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3576" font-family="Helvetica, Arial, sans-serif" x="1619" y="444.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3577" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)</tspan></text></a><a id="SvgjsA3581" href="data:text/plain,_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3579" font-family="Helvetica, Arial, sans-serif" x="1619" y="448.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3580" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E</tspan></text></a><a id="SvgjsA3584" href="data:text/plain,public: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3582" font-family="Helvetica, Arial, sans-serif" x="1619" y="453.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3583" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)</tspan></text></a><a id="SvgjsA3587" href="data:text/plain,public: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3585" font-family="Helvetica, Arial, sans-serif" x="1619" y="457.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3586" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)</tspan></text></a><a id="SvgjsA3590" href="data:text/plain,public: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3588" font-family="Helvetica, Arial, sans-serif" x="1619" y="478.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3589" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64</tspan></text></a><a id="SvgjsA3593" href="data:text/plain,public: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3591" font-family="Helvetica, Arial, sans-serif" x="1619" y="569.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3592" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3596" href="data:text/plain,public: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3594" font-family="Helvetica, Arial, sans-serif" x="1619" y="574.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3595" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)</tspan></text></a><a id="SvgjsA3599" href="data:text/plain,floorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3597" font-family="Helvetica, Arial, sans-serif" x="1619" y="578.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3598" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">floorf</tspan></text></a><a id="SvgjsA3602" href="data:text/plain,floorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3600" font-family="Helvetica, Arial, sans-serif" x="1619" y="582.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3601" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">floorf</tspan></text></a><a id="SvgjsA3605" href="data:text/plain,public: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3603" font-family="Helvetica, Arial, sans-serif" x="1619" y="587.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3604" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)</tspan></text></a><a id="SvgjsA3608" href="data:text/plain,public: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3606" font-family="Helvetica, Arial, sans-serif" x="1619" y="591.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3607" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3611" href="data:text/plain,public: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3609" font-family="Helvetica, Arial, sans-serif" x="1619" y="595.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3610" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3614" href="data:text/plain,protected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3612" font-family="Helvetica, Arial, sans-serif" x="1619" y="600.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3613" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">protected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64</tspan></text></a><a id="SvgjsA3617" href="data:text/plain,`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3615" font-family="Helvetica, Arial, sans-serif" x="1619" y="604.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3616" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">`anonymous namespace'::internal_GetHistogramById</tspan></text></a><a id="SvgjsA3620" href="data:text/plain,public: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3618" font-family="Helvetica, Arial, sans-serif" x="1619" y="608.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3619" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3623" href="data:text/plain,public: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3621" font-family="Helvetica, Arial, sans-serif" x="1619" y="615.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3622" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3626" href="data:text/plain,public: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3624" font-family="Helvetica, Arial, sans-serif" x="1619" y="619.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3625" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)</tspan></text></a><a id="SvgjsA3629" href="data:text/plain,public: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3627" font-family="Helvetica, Arial, sans-serif" x="1619" y="623.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3628" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3632" href="data:text/plain,_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3630" font-family="Helvetica, Arial, sans-serif" x="1619" y="647.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3631" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE</tspan></text></a><a id="SvgjsA3635" href="data:text/plain,private: void * __ptr64 __cdecl nsPropertyTable::GetPropertyInternal(class nsPropertyOwner,class nsAtom const * __ptr64,bool,enum nsresult * __ptr64) __ptr64%0a%0dpublic: void * __ptr64 __cdecl nsINode::GetProperty(class nsAtom const * __ptr64,enum nsresult * __ptr64)const __ptr64%0a%0dpublic: static class mozilla::dom::Element * __ptr64 __cdecl nsLayoutUtils::GetMarkerPseudo(class nsIContent const * __ptr64)%0a%0dpublic: class nsIContent * __ptr64 __cdecl mozilla::dom::AllChildrenIterator::GetNextChild(void) __ptr64%0a%0d_ZN103_$LT$style..gecko..wrapper..GeckoChildrenIterator$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h48f989a72d401f24E%0a%0d_ZN94_$LT$style..dom..LayoutIterator$LT$T$GT$$u20$as$u20$core..iter..traits..iterator..Iterator$GT$4next17h758ae3634baeb2b1E%0a%0denum js::jit::EnterJitStatus __cdecl js::jit::MaybeEnterJit(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3633" font-family="Helvetica, Arial, sans-serif" x="1619" y="3165.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3634" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">private: void * __ptr64 __cdecl nsPropertyTable::GetPropertyInternal(class nsPropertyOwner,class nsAtom const * __ptr64,bool,enum nsresult * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3638" href="data:text/plain,public: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3636" font-family="Helvetica, Arial, sans-serif" x="1619" y="3175.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3637" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64</tspan></text></a><a id="SvgjsA3641" href="data:text/plain,public: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3639" font-family="Helvetica, Arial, sans-serif" x="1619" y="3180.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3640" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64</tspan></text></a><a id="SvgjsA3644" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3642" font-family="Helvetica, Arial, sans-serif" x="1619" y="3184.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3643" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3647" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3645" font-family="Helvetica, Arial, sans-serif" x="1619" y="3188.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3646" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3650" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3648" font-family="Helvetica, Arial, sans-serif" x="1619" y="3193.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3649" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3653" href="data:text/plain,public: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3651" font-family="Helvetica, Arial, sans-serif" x="1619" y="3197.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3652" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)</tspan></text></a><a id="SvgjsA3656" href="data:text/plain,hashglobe::hash_map::search_hashed&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,mut hashglobe::table::RawTable&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue&gt;*,closure-0&gt;%0a%0d_ZN9hashglobe8hash_map24HashMap$LT$K$C$V$C$S$GT$21insert_hashed_nocheck17he522992810c3d0d8E%0a%0dhashglobe::hash_map::HashMap&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue, core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;::try_insert&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;%0a%0dpublic: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3654" font-family="Helvetica, Arial, sans-serif" x="1619" y="3201.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3655" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">hashglobe::hash_map::search_hashed&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,mut hashglobe::table::RawTable&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue&gt;*,closure-0&gt;</tspan></text></a><a id="SvgjsA3659" href="data:text/plain,gfx_backend_dx12::resource::{{impl}}::clone%0a%0dhashglobe::hash_map::search_hashed&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,mut hashglobe::table::RawTable&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue&gt;*,closure-0&gt;%0a%0d_ZN9hashglobe8hash_map24HashMap$LT$K$C$V$C$S$GT$21insert_hashed_nocheck17he522992810c3d0d8E%0a%0dhashglobe::hash_map::HashMap&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue, core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;::try_insert&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;%0a%0dpublic: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3657" font-family="Helvetica, Arial, sans-serif" x="1619" y="3206.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3658" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">gfx_backend_dx12::resource::{{impl}}::clone</tspan></text></a><a id="SvgjsA3662" href="data:text/plain,struct RetainedDisplayListData * __ptr64 __cdecl GetOrSetRetainedDisplayListData(class nsIFrame * __ptr64)%0a%0dgfx_backend_dx12::resource::{{impl}}::clone%0a%0dhashglobe::hash_map::search_hashed&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,mut hashglobe::table::RawTable&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue&gt;*,closure-0&gt;%0a%0d_ZN9hashglobe8hash_map24HashMap$LT$K$C$V$C$S$GT$21insert_hashed_nocheck17he522992810c3d0d8E%0a%0dhashglobe::hash_map::HashMap&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue, core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;::try_insert&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;%0a%0dpublic: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3660" font-family="Helvetica, Arial, sans-serif" x="1619" y="3210.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3661" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">struct RetainedDisplayListData * __ptr64 __cdecl GetOrSetRetainedDisplayListData(class nsIFrame * __ptr64)</tspan></text></a><a id="SvgjsA3665" href="data:text/plain,public: static void __cdecl js::BarrierMethods&lt;class JSObject * __ptr64&gt;::exposeToJS(class JSObject * __ptr64)%0a%0dLdrpFastpthReloadedDll%0a%0dpublic: virtual enum nsresult __cdecl nsIDNService::ConvertToDisplayIDN(class nsTSubstring&lt;char&gt; const &amp; __ptr64,bool * __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum mozilla::ipc::HasResultCodes::Result __cdecl mozilla::net::PHttpChannelParent::OnMessageReceived(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::ServiceWorkerDescriptor::~ServiceWorkerDescriptor(void) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::LoadInfo::ClearController(void) __ptr64%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::DispatchDOMEvent(class nsISupports * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,class nsPresContext * __ptr64,enum nsEventStatus * __ptr64)%0a%0dpublic: static void __cdecl nsContentUtils::RemoveScriptBlocker(void)%0a%0dpublic: virtual void __cdecl nsView::DidCompositeWindow(struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt;,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::layers::WebRenderLayerManager::DidComposite(struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt;,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3663" font-family="Helvetica, Arial, sans-serif" x="1619" y="3214.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3664" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static void __cdecl js::BarrierMethods&lt;class JSObject * __ptr64&gt;::exposeToJS(class JSObject * __ptr64)</tspan></text></a><a id="SvgjsA3668" href="data:text/plain,0x230bf310320%0a%0dstruct RetainedDisplayListData * __ptr64 __cdecl GetOrSetRetainedDisplayListData(class nsIFrame * __ptr64)%0a%0dgfx_backend_dx12::resource::{{impl}}::clone%0a%0dhashglobe::hash_map::search_hashed&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,mut hashglobe::table::RawTable&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue&gt;*,closure-0&gt;%0a%0d_ZN9hashglobe8hash_map24HashMap$LT$K$C$V$C$S$GT$21insert_hashed_nocheck17he522992810c3d0d8E%0a%0dhashglobe::hash_map::HashMap&lt;style::properties::LonghandId, style::properties::animated_properties::AnimationValue, core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;::try_insert&lt;style::properties::LonghandId,style::properties::animated_properties::AnimationValue,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;%0a%0dpublic: virtual void __cdecl base::LinearHistogram::Accumulate(int,int,unsigned __int64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::wr::DisplayListBuilder::GetScrollIdForDefinedScrollLayer(unsigned __int64)const __ptr64%0a%0dprivate: class mozilla::Maybe&lt;struct mozilla::wr::WrSpaceAndClip&gt; __cdecl mozilla::layers::ClipManager::GetScrollLayer(struct mozilla::ActiveScrolledRoot const * __ptr64) __ptr64%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::dom::KeyframeEffect::ShouldBlockAsyncTransformAnimations(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,enum mozilla::AnimationPerformanceWarning::Type &amp; __ptr64)const __ptr64%0a%0d_ZN9peek_poke13poke_into_vec17h92285ee2bba15b6aE%0a%0dpublic: __cdecl nsTextFrame::PropertyProvider::PropertyProvider(class nsTextFrame * __ptr64,class gfxSkipCharsIterator const &amp; __ptr64,enum nsTextFrame::TextRunType,class nsFontMetrics * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsTextFrame::PaintText(struct nsTextFrame::PaintTextParams const &amp; __ptr64,int,int,struct nsPoint const &amp; __ptr64,bool,float) __ptr64%0a%0dpublic: static class mozilla::EffectSet * __ptr64 __cdecl mozilla::EffectSet::GetEffectSetForFrame(class nsIFrame const * __ptr64,enum DisplayItemType)%0a%0dpublic: struct mozilla::wr::WrSpaceAndClipChain __cdecl mozilla::layers::ClipManager::SwitchItem(class nsDisplayItem * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::layers::StackingContextHelper::StackingContextHelper(class mozilla::layers::StackingContextHelper const &amp; __ptr64,struct mozilla::ActiveScrolledRoot const * __ptr64,class nsIFrame * __ptr64,class nsDisplayItem * __ptr64,class mozilla::wr::DisplayListBuilder &amp; __ptr64,struct mozilla::wr::StackingContextParams const &amp; __ptr64,struct mozilla::gfx::RectTyped&lt;struct mozilla::LayoutDevicePixel,float&gt; const &amp; __ptr64) __ptr64%0a%0d`anonymous namespace'::internal_GetHistogramById%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dprotected: struct nsTArrayInfallibleResult __cdecl nsTArray_base&lt;struct nsTArrayInfallibleAllocator,struct nsTArray_CopyWithMemutils&gt;::InsertSlotsAt&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64,unsigned __int64,unsigned __int64,unsigned __int64) __ptr64%0a%0dpublic: virtual void __cdecl nsTextControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayItem::ForceActiveLayers(void)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsAlwaysActive(void)const __ptr64%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::IsScrollingActive(class nsDisplayListBuilder * __ptr64)const __ptr64%0a%0dpublic: __cdecl nsDisplayCompositorHitTestInfo::nsDisplayCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; const &amp; __ptr64,unsigned short,class mozilla::Maybe&lt;struct nsRect&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dfloorf%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3666" font-family="Helvetica, Arial, sans-serif" x="1619" y="3219.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3667" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">0x230bf310320</tspan></text></a><a id="SvgjsA3671" href="data:text/plain,[js] forEach%0a%0dpublic: enum nsChangeHint __cdecl mozilla::ComputedStyle::CalcStyleDifference(class mozilla::ComputedStyle const &amp; __ptr64,unsigned int * __ptr64)const __ptr64%0a%0dprotected: virtual __cdecl mozilla::image::VectorImage::~VectorImage(void) __ptr64%0a%0dprotected: virtual void * __ptr64 __cdecl mozilla::image::VectorImage::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: virtual unsigned long __cdecl mozilla::image::VectorImage::Release(void) __ptr64%0a%0dprivate: virtual __cdecl imgRequest::~imgRequest(void) __ptr64%0a%0dprivate: virtual void * __ptr64 __cdecl imgRequest::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsDNSAsyncRequest::Release(void) __ptr64%0a%0dpublic: class mozilla::gfx::Matrix4x4TypedFlagged&lt;struct mozilla::gfx::UnknownUnits,struct mozilla::gfx::UnknownUnits&gt; __cdecl nsIFrame::GetTransformMatrix(class nsIFrame const * __ptr64,class nsIFrame * __ptr64 * __ptr64,unsigned int)const __ptr64%0a%0dpublic: static struct mozilla::gfx::SizeTyped&lt;struct mozilla::gfx::UnknownUnits,double&gt; __cdecl mozilla::FrameLayerBuilder::GetPaintedLayerScaleForFrame(class nsIFrame * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::ScrollToImpl(struct nsPoint,struct nsRect const &amp; __ptr64,class nsAtom * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::ScrollFrameHelper::CompleteAsyncScroll(struct nsRect const &amp; __ptr64,class nsAtom * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::ScrollFrameHelper::ScrollToWithOrigin(struct nsPoint,enum mozilla::ScrollMode,class nsAtom * __ptr64,struct nsRect const * __ptr64,enum nsIScrollbarMediator::ScrollSnapMode) __ptr64%0a%0dbool __cdecl js::LookupNameNoGC(struct JSContext * __ptr64,class js::PropertyName * __ptr64,class JSObject * __ptr64,class JSObject * __ptr64 * __ptr64,class JSObject * __ptr64 * __ptr64,class JS::PropertyResult * __ptr64)%0a%0d[js] lazyGetter%0a%0d[js] runDelayed%0a%0dpublic: virtual enum nsresult __cdecl mozilla::dom::Element::BindToTree(struct mozilla::dom::BindContext &amp; __ptr64,class nsINode &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3669" font-family="Helvetica, Arial, sans-serif" x="1619" y="3223.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3670" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">[js] forEach</tspan></text></a><a id="SvgjsA3674" href="data:text/plain,NtUserGetProp%0a%0dGetPropW%0a%0dprotected: static __int64 __cdecl nsWindow::WindowProcInternal(struct HWND__ * __ptr64,unsigned int,unsigned __int64,__int64)%0a%0dDispatchClientMessage%0a%0d_fnDWORD%0a%0dKiUserCallbackDispatcherContinue%0a%0dbool __cdecl js::RunScript(struct JSContext * __ptr64,class js::RunState &amp; __ptr64)%0a%0dEventListener.handleEvent%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dEventDispatcher::Dispatch mousemove%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dRtlAcquireSRWLockExclusive%0a%0dpublic: __cdecl mozilla::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;::BaseAutoLock&lt;class mozilla::AnyStaticMutex&gt;(class mozilla::AnyStaticMutex) __ptr64%0a%0dvoid __cdecl TelemetryHistogram::Accumulate(enum mozilla::Telemetry::HistogramID,unsigned int)%0a%0dprivate: void __cdecl mozilla::PresShell::EventHandler::RecordEventHandlingResponsePerformance(class mozilla::WidgetEvent const * __ptr64) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::PresShell::EventHandler::HandleEventWithCurrentEventInfo(class mozilla::WidgetEvent * __ptr64,enum nsEventStatus * __ptr64,bool,class nsIContent * __ptr64) __ptr64%0a%0dcore::slice::{{impl}}::next&lt;style::properties::ShorthandId&gt;%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3672" font-family="Helvetica, Arial, sans-serif" x="1619" y="3229.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3673" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserGetProp</tspan></text></a><a id="SvgjsA3677" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3675" font-family="Helvetica, Arial, sans-serif" x="1619" y="3234.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3676" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3680" href="data:text/plain,public: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3678" font-family="Helvetica, Arial, sans-serif" x="1619" y="3238.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3679" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64</tspan></text></a><a id="SvgjsA3683" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3681" font-family="Helvetica, Arial, sans-serif" x="1619" y="3242.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3682" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3686" href="data:text/plain,public: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3684" font-family="Helvetica, Arial, sans-serif" x="1619" y="3247.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3685" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64</tspan></text></a><a id="SvgjsA3689" href="data:text/plain,NtUserPeekMessage%0a%0dint _PeekMessage(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,unsigned int,int)%0a%0dPeekMessageW%0a%0dvirtual long CThreadInputMgr::PeekMessageW(struct tagMSG *,struct HWND__*,unsigned int,unsigned int,unsigned int,int *)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dNtUserMsgWaitForMultipleObjectsEx%0a%0dunsigned long RealMsgWaitForMultipleObjectsEx(unsigned long,void * const *,unsigned long,unsigned long,unsigned long)%0a%0dpublic: static void __cdecl mozilla::widget::WinUtils::WaitForMessage(unsigned long)%0a%0dprotected: virtual bool __cdecl nsAppShell::ProcessNextNativeEvent(bool) __ptr64%0a%0dnsAppShell::ProcessNextNativeEvent::Wait%0a%0dprivate: void __cdecl SkPathRef::callGenIDChangeListeners(void) __ptr64%0a%0dpublic: __cdecl sk_sp&lt;class SkPathRef&gt;::~sk_sp&lt;class SkPathRef&gt;(void) __ptr64%0a%0dpublic: virtual void * __ptr64 __cdecl mozilla::gfx::PathSkia::`scalar deleting destructor'(unsigned int) __ptr64%0a%0dpublic: __cdecl gfxContext::AzureState::~AzureState(void) __ptr64%0a%0dpublic: void __cdecl gfxContext::Restore(void) __ptr64%0a%0dpublic: static void __cdecl nsCSSRendering::PaintBoxShadowOuter(class nsPresContext * __ptr64,class gfxContext &amp; __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,struct nsRect const &amp; __ptr64,float)%0a%0dpublic: virtual void __cdecl nsDisplayButtonBoxShadowOuter::Paint(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::FrameLayerBuilder::PaintItems(class std::vector&lt;struct mozilla::AssignedDisplayItem,class std::allocator&lt;struct mozilla::AssignedDisplayItem&gt; &gt; &amp; __ptr64,struct mozilla::gfx::IntRectTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class gfxContext * __ptr64,class nsDisplayListBuilder * __ptr64,class nsPresContext * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,float,float) __ptr64%0a%0dFrameLayerBuilder::PaintItems%0a%0dpublic: static void __cdecl mozilla::FrameLayerBuilder::DrawPaintedLayer(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64)%0a%0dFrameLayerBuilder::DrawPaintedLayer%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientPaintedLayer::RenderLayerWithReadback(class mozilla::layers::ReadbackProcessor * __ptr64) __ptr64%0a%0dClientPaintedLayer::RenderLayerWithReadback%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientContainerLayer::RenderLayer(void) __ptr64%0a%0dprivate: bool __cdecl mozilla::layers::ClientLayerManager::EndTransactionInternal(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dClientLayerManager::EndTransactionInternal%0a%0dpublic: virtual void __cdecl mozilla::layers::ClientLayerManager::EndTransaction(void (__cdecl*)(class mozilla::layers::PaintedLayer * __ptr64,class gfxContext * __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,enum mozilla::layers::DrawRegionClip,class mozilla::gfx::IntRegionTyped&lt;struct mozilla::gfx::UnknownUnits&gt; const &amp; __ptr64,void * __ptr64),void * __ptr64,enum mozilla::layers::LayerManager::EndTransactionFlags) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class mozilla::layers::LayerManager&gt; __cdecl nsDisplayList::PaintRoot(class nsDisplayListBuilder * __ptr64,class gfxContext * __ptr64,unsigned int) __ptr64%0a%0dnsDisplayList::PaintRoot%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dnsLayoutUtils::PaintFrame%0a%0dpublic: void __cdecl mozilla::PresShell::Paint(class nsView * __ptr64,class nsRegion const &amp; __ptr64,enum mozilla::PaintFlags) __ptr64%0a%0dPresShell::Paint chrome://browser/content/browser.xhtml%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesPaint(class nsIWidget * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsViewManager::ProcessPendingUpdatesForView(class nsView * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsViewManager::ProcessPendingUpdates(void) __ptr64%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual unsigned long __cdecl nsIContent::Release(void) __ptr64%0a%0dpublic: void __cdecl PLDHashTable::Iterator::Remove(void) __ptr64%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dprivate: void __cdecl mozilla::PresShell::DoFlushPendingNotifications(struct mozilla::ChangesToFlush) __ptr64%0a%0dPresShell::DoFlushPendingNotifications Style%0a%0dprivate: void __cdecl nsRefreshDriver::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dnsRefreshDriver::Tick%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::TickRefreshDrivers(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp,class nsTArray&lt;class RefPtr&lt;class nsRefreshDriver&gt; &gt; &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::RefreshDriverTimer::Tick(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dprivate: void __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::TickRefreshDriver(struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt;,class mozilla::TimeStamp) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl mozilla::VsyncRefreshDriverTimer::RefreshDriverVsyncObserver::ParentProcessVsyncNotifier::Run(void) __ptr64%0a%0dpublic: virtual enum nsresult __cdecl nsThread::ProcessNextEvent(bool,bool * __ptr64) __ptr64%0a%0dcore::sync::atomic::atomic_load&lt;usize&gt;%0a%0dservo_arc::Arc&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;::is_static&lt;style::shared_lock::Locked&lt;style::stylesheets::import_rule::ImportRule&gt;&gt;%0a%0dservo_arc::{{impl}}::drop&lt;style::custom_properties::VariableValue&gt;%0a%0dcore::ptr::real_drop_in_place&lt;slice&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::vec::Vec&lt;indexmap::Bucket&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;&gt;&gt;&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;indexmap::map::IndexMap&lt;style::gecko_string_cache::Atom, servo_arc::Arc&lt;style::custom_properties::VariableValue&gt;, core::hash::BuildHasherDefault&lt;style::selector_map::PrecomputedHasher&gt;&gt;&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h9d2d5a4f839f404fE%0a%0dcore::ptr::real_drop_in_place&lt;style::gecko_bindings::structs::root::ServoComputedData&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;servo_arc::ArcInner&lt;style::gecko_properties::ComputedValues&gt;&gt;&gt;%0a%0d_ZN9servo_arc12Arc$LT$T$GT$9drop_slow17h5f8da82e07d22888E%0a%0dcore::ptr::real_drop_in_place&lt;style::data::ElementStyles&gt;%0a%0dcore::ptr::real_drop_in_place&lt;alloc::boxed::Box&lt;atomic_refcell::AtomicRefCell&lt;style::data::ElementData&gt;&gt;&gt;%0a%0d_ZN76_$LT$style..gecko..wrapper..GeckoElement$u20$as$u20$style..dom..TElement$GT$10clear_data17hbb5a2c9c01ab6112E%0a%0dServo_Element_ClearData%0a%0dpublic: void __cdecl mozilla::dom::Element::ClearServoData(class mozilla::dom::Document * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::RestyleManager::ClearServoDataFromSubtree(class mozilla::dom::Element * __ptr64,enum mozilla::RestyleManager::IncludeRoot)%0a%0dpublic: void __cdecl mozilla::RestyleManager::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::PresShell::ContentRemoved(class nsIContent * __ptr64,class nsIContent * __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3687" font-family="Helvetica, Arial, sans-serif" x="1619" y="3251.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3688" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtUserPeekMessage</tspan></text></a><a id="SvgjsA3692" href="data:text/plain,RtlLeaveCriticalSection%0a%0dpublic: static void * __ptr64 __cdecl Allocator&lt;struct MozJemallocBase&gt;::moz_arena_malloc(unsigned __int64,unsigned __int64)%0a%0dprivate: bool __cdecl mozilla::Vector&lt;unsigned char,256,class js::jit::AssemblerBufferAllocPolicy&gt;::growStorageBy(unsigned __int64) __ptr64%0a%0dpublic: void __cdecl js::jit::X86Encoding::BaseAssembler::cmpl_ir(int,enum js::jit::X86Encoding::RegisterID) __ptr64%0a%0dpublic: virtual void __cdecl js::irregexp::NativeRegExpMacroAssembler::CheckNotCharacter(unsigned int,class js::jit::Label * __ptr64) __ptr64%0a%0d[js] loadURI/&lt;%0a%0d[js] _wrapURIChangeCall%0a%0d[js] loadURI%0a%0d[js] maybeCreatePreloadedBrowser%0a%0dprotected: static unsigned int __cdecl nsTHashtable&lt;class txLoadedDocumentEntry&gt;::s_HashKey(void const * __ptr64)%0a%0dprotected: enum nsresult __cdecl mozilla::dom::EventTarget::AddEventListener(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class nsIDOMEventListener * __ptr64,bool,struct mozilla::dom::Nullable&lt;bool&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::BrowserParent::AddWindowListeners(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::BrowserParent::SetOwnerElement(class mozilla::dom::Element * __ptr64) __ptr64%0a%0dpublic: static struct already_AddRefed&lt;class mozilla::dom::RemoteBrowser&gt; __cdecl mozilla::dom::ContentParent::CreateBrowser(class mozilla::dom::TabContext const &amp; __ptr64,class mozilla::dom::Element * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::dom::BrowsingContext * __ptr64,class mozilla::dom::ContentParent * __ptr64,class mozilla::dom::BrowserParent * __ptr64,unsigned __int64)%0a%0dContentParent::CreateBrowser%0a%0dprivate: bool __cdecl nsFrameLoader::TryRemoteBrowserInternal(void) __ptr64%0a%0dnsFrameLoader::TryRemoteBrowser:Create%0a%0dnsFrameLoader::ShowRemoteFrame%0a%0dselectors::matching::matches_compound_selector&lt;style::gecko::wrapper::GeckoElement,mut closure-0*&gt;%0a%0d_ZN5style12selector_map39SelectorMap$LT$style..stylist..Rule$GT$22get_all_matching_rules17h6c3164f328f16562E%0a%0d_ZN5style14rule_collector26RuleCollector$LT$E$C$F$GT$11collect_all17h912995f175f30b94E%0a%0d[js] _createBrowser%0a%0d[js] maybeCreatePreloadedBrowser%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3690" font-family="Helvetica, Arial, sans-serif" x="1619" y="3255.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3691" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">RtlLeaveCriticalSection</tspan></text></a><a id="SvgjsA3695" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3693" font-family="Helvetica, Arial, sans-serif" x="1619" y="3260.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3694" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3698" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3696" font-family="Helvetica, Arial, sans-serif" x="1619" y="3264.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3697" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3701" href="data:text/plain,NtWaitForAlertByThreadId%0a%0dRtlSleepConditionVariableSRW%0a%0dSleepConditionVariableSRW%0a%0dpublic: enum mozilla::CVStatus __cdecl mozilla::detail::ConditionVariableImpl::wait_for(class mozilla::detail::MutexImpl &amp; __ptr64,class mozilla::BaseTimeDuration&lt;class mozilla::TimeDurationValueCalculator&gt; const &amp; __ptr64) __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::MessageChannel::WaitForSyncNotify(bool) __ptr64%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::layers::PAPZInputBridgeChild::SendReceiveMouseInputEvent(class mozilla::MouseInput const &amp; __ptr64,struct mozilla::layers::APZEventResult * __ptr64,class mozilla::MouseInput * __ptr64) __ptr64%0a%0dPAPZInputBridge::Msg_ReceiveMouseInputEvent%0a%0dpublic: virtual struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridgeChild::ReceiveInputEvent(class mozilla::InputData &amp; __ptr64) __ptr64%0a%0dpublic: struct mozilla::layers::APZEventResult __cdecl mozilla::layers::APZInputBridge::ReceiveInputEvent(class mozilla::WidgetInputEvent &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum nsEventStatus __cdecl nsBaseWidget::DispatchInputEvent(class mozilla::WidgetInputEvent * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::dom::AutoJSAPI::~AutoJSAPI(void) __ptr64%0a%0dpublic: __cdecl mozilla::dom::CallbackObject::CallSetup::~CallSetup(void) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dcore::ptr::real_drop_in_place&lt;style::sharing::FakeCandidate&gt;%0a%0d_ZN5style9traversal13compute_style17h7066a2bf0529dc8cE%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0dsmallvec::SmallVec&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;::triple_mut&lt;[servo_arc::ArcBorrow&lt;style::shared_lock::Locked&lt;style::stylesheets::style_rule::StyleRule&gt;&gt;; 10]&gt;%0a%0dsmallvec::SmallVec&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;::reserve&lt;[style::invalidation::element::invalidator::Invalidation; 10]&gt;%0a%0d_ZN133_$LT$smallvec..SmallVec$LT$A$GT$$u20$as$u20$core..iter..traits..collect..Extend$LT$$LT$A$u20$as$u20$smallvec..Array$GT$..Item$GT$$GT$6extend17h856c5b5ef83416d2E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29process_sibling_invalidations17h4bd4b5507a458844E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$16invalidate_child17h6e0d095a6d30b943E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$29invalidate_dom_descendants_of17h34de7e2b5f45bf38E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$34invalidate_non_slotted_descendants17h22818e5d4ff69f6dE%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$22invalidate_descendants17hdd5fc944fccf6528E%0a%0d_ZN5style12invalidation7element11invalidator33TreeStyleInvalidator$LT$E$C$P$GT$10invalidate17h46182c1ba0883f7dE%0a%0d_ZN5style4data11ElementData26invalidate_style_if_needed17hbd3a88bf276be408E%0a%0d_ZN5style9traversal13note_children17h60cf24f3005338a0E%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3699" font-family="Helvetica, Arial, sans-serif" x="1619" y="3268.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3700" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">NtWaitForAlertByThreadId</tspan></text></a><a id="SvgjsA3704" href="data:text/plain,public: static void __cdecl js::BarrierMethods&lt;class JSObject * __ptr64&gt;::exposeToJS(class JSObject * __ptr64)%0a%0d[js] FullZoom__loadContextFromBrowser%0a%0d[js] FullZoom_onLocationChange%0a%0dpublic: virtual enum nsresult __cdecl mozilla::net::nsStandardURL::QueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64%0a%0d[js] _isPDFViewer%0a%0d[js] XWB_onUpdateCurrentBrowser%0a%0d[js] handleEvent%0a%0dpublic: class nsIContent * __ptr64 __cdecl nsIContent::FindFirstNonChromeOnlyAccessContent(void)const __ptr64%0a%0dpublic: class mozilla::dom::EventTarget * __ptr64 __cdecl mozilla::dom::Event::GetComposedTarget(void)const __ptr64%0a%0dpublic: void __cdecl nsXULTooltipListener::MouseMove(class mozilla::dom::Event * __ptr64) __ptr64%0a%0dpublic: static struct mozilla::gfx::IntPointTyped&lt;struct mozilla::LayoutDevicePixel&gt; __cdecl nsLayoutUtils::WidgetToWidgetOffset(class nsIWidget * __ptr64,class nsIWidget * __ptr64)%0a%0dpublic: static struct nsPoint __cdecl nsLayoutUtils::GetEventCoordinatesRelativeTo(class nsIWidget * __ptr64,struct mozilla::gfx::IntPointTyped&lt;struct mozilla::LayoutDevicePixel&gt; const &amp; __ptr64,class nsIFrame * __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::dom::XULFrameElement::QueryInterface(struct nsID const &amp; __ptr64,void * __ptr64 * __ptr64) __ptr64%0a%0dpublic: static class js::ObjectGroup::Property * __ptr64 * __ptr64 __cdecl js::TypeHashSet::Insert&lt;struct JS::PropertyKey,class js::ObjectGroup::Property,class js::ObjectGroup::Property&gt;(class js::LifoAlloc &amp; __ptr64,class js::ObjectGroup::Property * __ptr64 * __ptr64 &amp; __ptr64,unsigned int &amp; __ptr64,struct JS::PropertyKey)%0a%0dpublic: class js::HeapTypeSet * __ptr64 __cdecl js::ObjectGroup::getProperty(class js::AutoSweepObjectGroup const &amp; __ptr64,struct JSContext * __ptr64,class JSObject * __ptr64,struct JS::PropertyKey) __ptr64%0a%0dvoid __cdecl js::AddTypePropertyId(struct JSContext * __ptr64,class js::ObjectGroup * __ptr64,class JSObject * __ptr64,struct JS::PropertyKey,class js::TypeSet::Type)%0a%0dbool __cdecl js::NativeSetProperty&lt;1&gt;(struct JSContext * __ptr64,class JS::Handle&lt;class js::NativeObject * __ptr64&gt;,class JS::Handle&lt;struct JS::PropertyKey&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::ObjectOpResult &amp; __ptr64)%0a%0dpublic: virtual void __cdecl nsHTMLButtonControlFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: virtual void __cdecl nsFlexContainerFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dDisplayLine%0a%0dpublic: virtual void __cdecl nsBlockFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsCanvasFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3702" font-family="Helvetica, Arial, sans-serif" x="1619" y="3273.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3703" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: static void __cdecl js::BarrierMethods&lt;class JSObject * __ptr64&gt;::exposeToJS(class JSObject * __ptr64)</tspan></text></a><a id="SvgjsA3707" href="data:text/plain,public: __cdecl js::gc::AutoSuppressGC::AutoSuppressGC(struct JSContext * __ptr64) __ptr64%0a%0dpublic: __cdecl js::AutoSetNewObjectMetadata::~AutoSetNewObjectMetadata(void) __ptr64%0a%0dclass js::ArrayObject * __ptr64 __cdecl js::NewDenseFullyAllocatedArray(struct JSContext * __ptr64,unsigned int,class JS::Handle&lt;class JSObject * __ptr64&gt;,enum js::NewObjectKind)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3705" font-family="Helvetica, Arial, sans-serif" x="1619" y="3277.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3706" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: __cdecl js::gc::AutoSuppressGC::AutoSuppressGC(struct JSContext * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3710" href="data:text/plain,private: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3708" font-family="Helvetica, Arial, sans-serif" x="1619" y="3281.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3709" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">private: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3713" href="data:text/plain,bool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3711" font-family="Helvetica, Arial, sans-serif" x="1619" y="3286.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3712" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)</tspan></text></a><a id="SvgjsA3716" href="data:text/plain,bool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3714" font-family="Helvetica, Arial, sans-serif" x="1619" y="3290.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3715" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">bool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)</tspan></text></a><a id="SvgjsA3719" href="data:text/plain,public: void __cdecl IPC::SerializedLoadContext::Init(class nsILoadContext * __ptr64) __ptr64%0a%0dpublic: virtual enum mozilla::ipc::HasResultCodes::Result __cdecl mozilla::net::PNeckoParent::OnMessageReceived(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dpublic: virtual enum mozilla::ipc::HasResultCodes::Result __cdecl mozilla::dom::PWindowGlobalParent::OnMessageReceived(class IPC::Message const &amp; __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::dom::Document::DoNotifyPossibleTitleChange(void) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::insertFrames(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64) __ptr64%0a%0dprivate: void __cdecl js::SavedFrame::initFromLookup(struct JSContext * __ptr64,class JS::Handle&lt;struct js::SavedFrame::Lookup&gt;) __ptr64%0a%0dprivate: class js::SavedFrame * __ptr64 __cdecl js::SavedStacks::getOrCreateSavedFrame(struct JSContext * __ptr64,class JS::Handle&lt;struct js::SavedFrame::Lookup&gt;) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::adoptAsyncStack(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class JS::Handle&lt;class JSAtom * __ptr64&gt;,class mozilla::Maybe&lt;unsigned __int64&gt; const &amp; __ptr64) __ptr64%0a%0d[js] updateTitlebar%0a%0dXREMain::XRE_main"><text id="SvgjsText3717" font-family="Helvetica, Arial, sans-serif" x="1619" y="3294.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3718" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: void __cdecl IPC::SerializedLoadContext::Init(class nsILoadContext * __ptr64) __ptr64</tspan></text></a><a id="SvgjsA3722" href="data:text/plain,public: bool __cdecl mozilla::EffectCompositor::HasPendingStyleUpdates(void)const __ptr64%0a%0dprivate: bool __cdecl mozilla::ipc::URIParams::MaybeDestroy(enum mozilla::ipc::URIParams::Type) __ptr64%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::ipc::URIParams&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::ipc::URIParams * __ptr64)%0a%0dpublic: static void __cdecl nsContentUtils::AddScriptBlocker(void)%0a%0dprivate: class nsIFrame * __ptr64 __cdecl mozilla::PresShell::EventHandler::MaybeFlushThrottledStyles(class nsIFrame * __ptr64) __ptr64%0a%0dprivate: bool __cdecl JS::Compartment::getNonWrapperObjectForCurrentCompartment(struct JSContext * __ptr64,class JS::Handle&lt;class JSObject * __ptr64&gt;,class JS::MutableHandle&lt;class JSObject * __ptr64&gt;) __ptr64%0a%0d0x230bf599fad%0a%0d[js] handleEvent%0a%0dprivate: void __cdecl RedBlackTree&lt;struct arena_chunk_map_t,struct ArenaAvailTreeTrait&gt;::Remove(class RedBlackTree&lt;struct arena_chunk_map_t,struct ArenaAvailTreeTrait&gt;::TreeNode) __ptr64%0a%0dprotected: virtual bool __cdecl nsWindow::ProcessMessage(unsigned int,unsigned __int64 &amp; __ptr64,__int64 &amp; __ptr64,__int64 * __ptr64) __ptr64%0a%0dpublic: __cdecl mozilla::ipc::URIParams::~URIParams(void) __ptr64%0a%0dmozilla::ipc::ReadIPDLParam&lt;RefPtr&lt;nsIURI&gt; &gt;%0a%0d[js] _adjustFocusAfterTabSwitch%0a%0dpublic: bool __cdecl mozilla::dom::PBrowserParent::SendStopIMEStateManagement(void) __ptr64%0a%0dPBrowser::Msg_StopIMEStateManagement%0a%0dpublic: enum nsresult __cdecl mozilla::dom::TimeoutManager::SetTimeout(class mozilla::dom::TimeoutHandler * __ptr64,int,bool,enum mozilla::dom::Timeout::Reason,int * __ptr64) __ptr64%0a%0dpublic: int __cdecl nsGlobalWindowInner::SetTimeoutOrInterval(struct JSContext * __ptr64,class mozilla::dom::Function &amp; __ptr64,int,class mozilla::dom::Sequence&lt;class JS::Value&gt; const &amp; __ptr64,bool,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprivate: void __cdecl mozilla::WidgetEvent::SetDefaultCancelableAndBubbles(void) __ptr64%0a%0dpublic: virtual class mozilla::WidgetEvent * __ptr64 __cdecl mozilla::WidgetMouseEvent::Duplicate(void)const __ptr64%0a%0dpublic: virtual void __cdecl mozilla::dom::Event::DuplicatePrivateData(void) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::dom::UIEvent::DuplicatePrivateData(void) __ptr64%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0d ?? ReserveAndPut&lt;class ?? &gt;&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@BlocksRingBuffer@mozilla@@QEAA?AVBlockIndex@23@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@3@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@3@AEBN@Z@V&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@23@QEAA?AV423@012345@Z@@BlocksRingBuffer@mozilla@@QEAA?A?&lt;auto&gt;@@V&lt;lambda_1&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AVBlockIndex@01@AEBW4Kind@ProfileBufferEntry@@AEBHAEBUBlocksRingBufferUnownedCString@1@AEBIAEBV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@1@AEBN@Z@$$QEAV&lt;lambda_2&gt;@?0???$PutObjects@W4Kind@ProfileBufferEntry@@HUBlocksRingBufferUnownedCString@mozilla@@IV?$UniquePtr@VProfilerMarkerPayload@@V?$DefaultDelete@VProfilerMarkerPayload@@@mozilla@@@4@N@01@QEAA?AV401@012345@Z@@Z%0a%0dpublic: bool __cdecl mozilla::ipc::MessageChannel::Send(class IPC::Message * __ptr64,class IPC::Message * __ptr64) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::getLocation(struct JSContext * __ptr64,class js::FrameIter const &amp; __ptr64,class JS::MutableHandle&lt;struct js::SavedStacks::LocationValue&gt;) __ptr64%0a%0dprivate: bool __cdecl js::SavedStacks::insertFrames(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl js::SavedStacks::saveCurrentStack(struct JSContext * __ptr64,class JS::MutableHandle&lt;class js::SavedFrame * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64) __ptr64%0a%0djs::SavedStacks::saveCurrentStack%0a%0dbool __cdecl JS::CaptureCurrentStack(struct JSContext * __ptr64,class JS::MutableHandle&lt;class JSObject * __ptr64&gt;,class mozilla::Variant&lt;struct JS::AllFrames,struct JS::MaxFrames,struct JS::FirstSubsumedFrame&gt; &amp;&amp; __ptr64)%0a%0dstyle::traversal::recalc_style_at&lt;style::gecko::wrapper::GeckoElement,style::gecko::traversal::RecalcStyleOnly,closure-0&gt;%0a%0d_ZN134_$LT$style..gecko..traversal..RecalcStyleOnly$u20$as$u20$style..traversal..DomTraversal$LT$style..gecko..wrapper..GeckoElement$GT$$GT$16process_preorder17hdcc32e4e11b85f67E%0a%0d_ZN5style6driver12traverse_dom17h4a2d318df49632a2E%0a%0dgeckoservo::glue::traverse_subtree%0a%0dServo_TraverseSubtree%0a%0dpublic: bool __cdecl mozilla::ServoStyleSet::StyleDocument(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dStyle computation%0a%0dprotected: void __cdecl mozilla::RestyleManager::DoProcessPendingRestyles(enum mozilla::ServoTraversalFlags) __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::GetFramesForArea(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsTArray&lt;class nsIFrame * __ptr64&gt; &amp; __ptr64,class mozilla::EnumSet&lt;enum nsLayoutUtils::FrameForPointOption,unsigned int&gt;)%0a%0dprotected: enum nsEventStatus __cdecl nsBaseWidget::ProcessUntransformedAPZEvent(class mozilla::WidgetInputEvent * __ptr64,struct mozilla::layers::APZEventResult const &amp; __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::ViewportFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dViewportFrame::BuildDisplayList%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3720" font-family="Helvetica, Arial, sans-serif" x="1619" y="3298.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3721" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">public: bool __cdecl mozilla::EffectCompositor::HasPendingStyleUpdates(void)const __ptr64</tspan></text></a><a id="SvgjsA3725" href="data:text/plain,0x230bf55e810%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dbool __cdecl js::jit::HasNativeDataPropertyPure&lt;0&gt;(struct JSContext * __ptr64,class JSObject * __ptr64,class JS::Value * __ptr64)%0a%0dprivate: void __cdecl js::NativeObject::addDenseElementType(struct JSContext * __ptr64,unsigned int,class JS::Value const &amp; __ptr64) __ptr64%0a%0dbool __cdecl js::array_unshift(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] onStatusChange%0a%0dpublic: __cdecl mozilla::net::nsHttpChannel::nsHttpChannel(void) __ptr64%0a%0dpublic: class mozilla::dom::BrowsingContext * __ptr64 __cdecl mozilla::dom::BrowsingContext::Top(void) __ptr64%0a%0dpublic: class mozilla::ipc::IPCResult __cdecl mozilla::dom::BrowserParent::RecvNotifyContentBlockingEvent(unsigned int const &amp; __ptr64,class mozilla::dom::RequestData const &amp; __ptr64,bool,class nsIURI * __ptr64,class nsTArray&lt;class nsTString&lt;char&gt; &gt; &amp;&amp; __ptr64,class mozilla::Maybe&lt;enum mozilla::AntiTrackingCommon::StorageAccessGrantedReason&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static enum nsLayoutUtils::TransformResult __cdecl nsLayoutUtils::TransformRect(class nsIFrame * __ptr64,class nsIFrame * __ptr64,struct nsRect &amp; __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: static struct nsSize __cdecl nsLayoutUtils::CalculateCompositionSizeForFrame(class nsIFrame * __ptr64,bool)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: bool __cdecl mozilla::PresShell::AsyncPanZoomEnabled(void) __ptr64%0a%0dGetDisplayPortImpl%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingMaskOrClipPathForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: class mozilla::EnumSet&lt;enum mozilla::gfx::CompositorHitTestFlags,unsigned int&gt; __cdecl nsIFrame::GetCompositorHitTestInfo(class nsDisplayListBuilder * __ptr64) __ptr64%0a%0d_ZN4core4iter8adapters3zip16Zip$LT$A$C$B$GT$3new17h8905e845931de0e9E%0a%0dcore::iter::traits::iterator::Iterator::zip&lt;core::slice::Iter&lt;style::properties::PropertyDeclaration&gt;,smallbitvec::Iter&gt;%0a%0d_ZN5style10properties17declaration_block29DeclarationImportanceIterator3new17h904f78cee40729c9E%0a%0dpublic: static enum nsresult __cdecl mozilla::LookAndFeel::GetInt(enum mozilla::LookAndFeel::IntID,int * __ptr64)%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::AppendScrollPartsTo(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::ScrollFrameHelper::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl mozilla::PresShell::AddWeakFrame(class WeakFrame * __ptr64) __ptr64%0a%0dpublic: void __cdecl nsDisplayListBuilder::WeakFrameRegion::Add&lt;struct nsRect&gt;(class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::IsPopup(class nsIFrame const * __ptr64)%0a%0dprivate: enum nsDisplayListBuilder::AGRState __cdecl nsDisplayListBuilder::IsAnimatedGeometryRoot(class nsIFrame * __ptr64,bool &amp; __ptr64,class nsIFrame * __ptr64 * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayList(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dpublic: static class mozilla::Maybe&lt;enum mozilla::wr::RenderRoot&gt; __cdecl gfxUtils::GetRenderRootForFrame(class nsIFrame const * __ptr64)%0a%0dbool __cdecl IsTwiceTheRequiredBytesRepresentableAsUint32(unsigned __int64,unsigned __int64)%0a%0dprotected: void __cdecl nsTArray_Impl&lt;struct mozilla::DisplayItemClip::RoundedRect,struct nsTArrayInfallibleAllocator&gt;::SetLength&lt;struct nsTArrayInfallibleAllocator&gt;(unsigned __int64) __ptr64%0a%0dprivate: void __cdecl mozilla::DisplayListClipState::ClipContainingBlockDescendants(class nsDisplayListBuilder * __ptr64,struct nsRect const &amp; __ptr64,int const * __ptr64,struct mozilla::DisplayItemClipChain &amp; __ptr64) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForChild(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,class nsDisplayListSet const &amp; __ptr64,unsigned int) __ptr64%0a%0dpublic: static bool __cdecl nsSVGIntegrationUtils::UsingEffectsForFrame(class nsIFrame const * __ptr64)%0a%0dpublic: void __cdecl nsFrame::DisplayBorderBackgroundOutline(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64,bool) __ptr64%0a%0dpublic: class nsIWidget * __ptr64 __cdecl nsIFrame::GetNearestWidget(void)const __ptr64%0a%0dprotected: enum nsresult __cdecl nsNativeThemeWin::GetThemePartAndState(class nsIFrame * __ptr64,enum mozilla::StyleAppearance,int &amp; __ptr64,int &amp; __ptr64) __ptr64%0a%0dprotected: void * __ptr64 __cdecl nsNativeThemeWin::GetTheme(enum mozilla::StyleAppearance) __ptr64%0a%0dpublic: static bool __cdecl nsDisplayBackgroundImage::AppendBackgroundItemsToTop(class nsDisplayListBuilder * __ptr64,class nsIFrame * __ptr64,struct nsRect const &amp; __ptr64,class nsDisplayList * __ptr64,bool,class mozilla::ComputedStyle * __ptr64,struct nsRect const &amp; __ptr64,class nsIFrame * __ptr64,class mozilla::Maybe&lt;class nsDisplayListBuilder::AutoBuildingDisplayList&gt; * __ptr64)%0a%0dvoid __cdecl UpdateDisplayItemData(class nsPaintedDisplayItem * __ptr64)%0a%0dpublic: void __cdecl nsDisplayListBuilder::BuildCompositorHitTestInfoIfNeeded(class nsIFrame * __ptr64,class nsDisplayList * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl nsIFrame::BuildDisplayListForStackingContext(class nsDisplayListBuilder * __ptr64,class nsDisplayList * __ptr64,bool * __ptr64) __ptr64%0a%0dpublic: unsigned int __cdecl mozilla::StyleGenericColor&lt;struct mozilla::StyleRGBA&gt;::CalcColor(class mozilla::ComputedStyle const &amp; __ptr64)const __ptr64%0a%0dpublic: static enum nsresult __cdecl nsLayoutUtils::PaintFrame(class gfxContext * __ptr64,class nsIFrame * __ptr64,class nsRegion const &amp; __ptr64,unsigned int,enum nsDisplayListBuilderMode,enum nsLayoutUtils::PaintFrameFlags)%0a%0dcore::sync::atomic::AtomicUsize::fetch_sub%0a%0dprivate: struct AnimatedGeometryRoot * __ptr64 __cdecl nsDisplayListBuilder::FindAnimatedGeometryRootFor(class nsIFrame * __ptr64) __ptr64%0a%0dpublic: bool __cdecl nsStyleSVGReset::HasMask(void)const __ptr64%0a%0dProcessFrameInternal%0a%0dpublic: void __cdecl mozilla::PendingAnimationTracker::MarkAnimationsThatMightNeedSynchronization(void) __ptr64%0a%0dbool __cdecl mozilla::FindAnimationsForCompositor(class nsIFrame const * __ptr64,class nsCSSPropertyIDSet const &amp; __ptr64,class nsTArray&lt;class RefPtr&lt;class mozilla::dom::Animation&gt; &gt; * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::WantAsyncScroll(void)const __ptr64%0a%0dGetTopImpl%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetRootWindow(void) __ptr64%0a%0dpublic: struct already_AddRefed&lt;class nsPIDOMWindowOuter&gt; __cdecl mozilla::PresShell::GetFocusedDOMWindowInOurWindow(void) __ptr64%0a%0dpublic: __cdecl mozilla::layers::FocusTarget::FocusTarget(class mozilla::PresShell * __ptr64,unsigned __int64) __ptr64%0a%0dbool __cdecl js::jit::ObjectIsCallable(class JSObject * __ptr64)%0a%0dpublic: virtual unsigned long __cdecl mozilla::a11y::xpcAccessibleTextRange::AddRef(void) __ptr64%0a%0dpublic: void __cdecl mozilla::dom::Document::EnumerateSubDocuments(enum mozilla::CallState (__cdecl*)(class mozilla::dom::Document &amp; __ptr64,void * __ptr64),void * __ptr64) __ptr64%0a%0dprivate: void __cdecl nsTPromiseFlatString&lt;char&gt;::Init(class nsTSubstring&lt;char&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: enum nsresult __cdecl nsUrlClassifierUtils::CanonicalizeHostname(class nsTSubstring&lt;char&gt; const &amp; __ptr64,class nsTSubstring&lt;char&gt; &amp; __ptr64) __ptr64%0a%0dpublic: class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp; __ptr64 __cdecl mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt;::operator=(class mozilla::Maybe&lt;class nsTArray&lt;class RefPtr&lt;class mozilla::MediaDevice&gt; &gt; &gt; &amp;&amp; __ptr64) __ptr64%0a%0dmozilla::ipc::WriteIPDLParam&lt;const mozilla::TimeStamp &amp;&gt;%0a%0dpublic: bool __cdecl mozilla::layers::PWebRenderBridgeChild::SendSetDisplayList(class nsTArray&lt;struct mozilla::layers::RenderRootDisplayListData&gt; &amp;&amp; __ptr64,class nsTArray&lt;class mozilla::layers::OpDestroy&gt; const &amp; __ptr64,unsigned __int64 const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::layers::TransactionIdType&gt; const &amp; __ptr64,bool const &amp; __ptr64,struct mozilla::layers::BaseTransactionId&lt;class mozilla::VsyncIdType&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTString&lt;char&gt; const &amp; __ptr64,class mozilla::TimeStamp const &amp; __ptr64,class nsTArray&lt;struct mozilla::layers::CompositionPayload&gt; const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl nsLayoutUtils::GetDisplayPort(class nsIContent * __ptr64,struct nsRect * __ptr64,enum RelativeTo,bool * __ptr64)%0a%0dpublic: bool __cdecl mozilla::ScrollFrameHelper::DecideScrollableLayer(class nsDisplayListBuilder * __ptr64,struct nsRect * __ptr64,struct nsRect * __ptr64,bool,bool * __ptr64) __ptr64%0a%0dAtomTableMatchKey%0a%0dpublic: static bool __cdecl nsFrame::ShouldApplyOverflowClipping(class nsIFrame const * __ptr64,struct nsStyleDisplay const * __ptr64)%0a%0dpublic: virtual struct mozilla::widget::InputContext __cdecl nsWindow::GetInputContext(void) __ptr64%0a%0dprivate: enum nsresult __cdecl mozilla::net::nsStandardURL::ParsePath(char const * __ptr64,unsigned int,int) __ptr64%0a%0dpublic: virtual void __cdecl nsBoxFrame::BuildDisplayListForChildren(class nsDisplayListBuilder * __ptr64,class nsDisplayListSet const &amp; __ptr64) __ptr64%0a%0dunsigned int __cdecl ToLowerCase(unsigned int)%0a%0dprotected: char const * __ptr64 __cdecl mozilla::TokenizerBase&lt;char&gt;::Parse(class mozilla::TokenizerBase&lt;char&gt;::Token &amp; __ptr64)const __ptr64%0a%0dpublic: bool __cdecl nsTSubstring&lt;char&gt;::SetLength(unsigned int,struct std::nothrow_t const &amp; __ptr64) __ptr64%0a%0dpublic: static bool __cdecl IPC::ParamTraits&lt;class nsTSubstring&lt;char&gt; &gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class nsTSubstring&lt;char&gt; * __ptr64)%0a%0dpublic: static bool __cdecl mozilla::ipc::IPDLParamTraits&lt;class mozilla::net::LoadInfoArgs&gt;::Read(class IPC::Message const * __ptr64,class PickleIterator * __ptr64,class mozilla::ipc::IProtocol * __ptr64,class mozilla::net::LoadInfoArgs * __ptr64)%0a%0dpublic: void __cdecl mozilla::net::HttpBackgroundChannelParent::LinkToChannel(class mozilla::net::HttpChannelParent * __ptr64) __ptr64%0a%0dpublic: virtual void __cdecl mozilla::net::BackgroundChannelRegistrar::LinkBackgroundChannel(unsigned __int64,class mozilla::net::HttpBackgroundChannelParent * __ptr64) __ptr64%0a%0dprivate: void __cdecl PolicyTokenizer::generateNextToken(void) __ptr64%0a%0dmemcpy()%0a%0dNdr64pServerMarshal%0a%0dCCliModalLoop::FindMessage(unsigned long)%0a%0dCCliModalLoop::HandleWakeForMsg()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dConstructKernelKeyPath%0a%0dLocalBaseRegOpenKey%0a%0dlong kfapi::_GetProgramFiles(unsigned short const *,unsigned short *,unsigned int,unsigned long)%0a%0dstatic long kfapi::CFixedFolderLoader::GetPath(struct _GUID const &amp;,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dstatic long kfapi::CFolderPathResolver::GetPath(struct _GUID const &amp;,unsigned long,class kfapi::CFolderDefinitionCache *,void *,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CFolderCache::GetPath(struct _GUID const &amp;,void *,unsigned long,class std::basic_string&lt;unsigned short,struct std::char_traits&lt;unsigned short&gt;,class std::allocator&lt;unsigned short&gt; &gt; *)%0a%0dlong kfapi::CKFFacade::GetFolderPath(struct _GUID const &amp;,unsigned long,void *,unsigned short * *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffset(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dstruct _GUID CShellLink::_GetShortcutRelativeParentIDAndOffsetWithUNC(struct _ITEMIDLIST_ABSOLUTE const *,unsigned long *,unsigned long *)%0a%0dint CShellLink::_EncodeSpecialFolder%0a%0dvirtual long CShellLink::Save(struct IStream *,int)%0a%0dvirtual long CShellLink::MarshalInterface(struct IStream *,struct _GUID const &amp;,void *,unsigned long,void *,unsigned long)%0a%0dCDestObjectWrapper::MarshalInterface(IStream*, _GUID const&amp;, void*, unsigned long, void*, unsigned long)%0a%0dNdr64ExtInterfacePointerMarshall(_MIDL_STUB_MESSAGE*, unsigned char*, void const*)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dvoid Ndr64TopLevelPointerMarshall(struct _MIDL_STUB_MESSAGE *,unsigned char *,void const *)%0a%0dNdr64pServerMarshal%0a%0dlong __cdecl Ndr64StubWorker(void * __ptr64,void * __ptr64,struct _RPC_MESSAGE * __ptr64,struct _MIDL_SERVER_INFO_ * __ptr64,long (__cdecl*const * __ptr64)(void),struct _MIDL_SYNTAX_INFO * __ptr64,unsigned long * __ptr64)%0a%0dCStdStubBuffer_Invoke%0a%0dCCliModalLoop::PeekRPCAndDDEMessage()%0a%0dCCliModalLoop::BlockFn(void**, unsigned long, unsigned long*)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0dlong CEnumFiles::_InitEnumeration(unsigned short const *,unsigned short const *,int,struct tagWIN32_FIND_DATA_EX *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpLfhFindClearBitAndSet%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dCharNextW%0a%0dlong CCachedINIFile::_ParseFileT&lt;unsigned short&gt;(unsigned short *)%0a%0dlong CCachedINIFile::_ParseFile%0a%0dlong CCachedINIFile::Load(bool)%0a%0dlong CPrivateProfileCache::_AddNewINIFromFile(unsigned short const *,class CCachedINIFile * *)%0a%0dvirtual long CPrivateProfile::Initialize(unsigned short const *,enum CACHEDPRIVATEPROFILEFLAGS)%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dlong CFSFolder::_CreateIDList(struct tagWIN32_FIND_DATA_EX const *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,unsigned short const *,unsigned short const *,enum IDLHID,enum CREATE_IDLIST_FLAGS,enum FOLDER_ENUM_MODE,struct _ITEMID_CHILD * *)%0a%0dlong CFSFolder::TrySimpleParse(unsigned short const *,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dlong kfapi::_CreateIDListFromPath(struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,unsigned short const *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dstatic long kfapi::CFolderIDListBuilder::GetIDList(struct _GUID const &amp;,struct kfapi::KNOWNFOLDER_DEFINITION_EX const &amp;,void *,unsigned long,class kfapi::CFolderCache *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CFolderCache::GetIDList(struct _GUID const &amp;,void *,unsigned long,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dlong kfapi::CKFFacade::GetFolderIDList(struct _GUID const &amp;,unsigned long,void *,struct _ITEMIDLIST_ABSOLUTE * *)%0a%0dSHILAliasTranslate%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dRtlpSubSegmentInitialize%0a%0dvoid * operator new(uint64_t,struct std::nothrow_t const &amp;)%0a%0dCFSFolder_CreateFolder%0a%0dlong CFSFolder::_Bind(struct IBindCtx *,struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct _GUID const &amp;,void * *)%0a%0dvirtual long CFSFolder::BindToObject(struct _ITEMIDLIST_RELATIVE &amp; volatile *,struct IBindCtx *,struct _GUID const &amp;,void * *)%0a%0d0x7ffa0f2d4195%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CFSFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDrivesFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dDSA_InsertItem%0a%0dlong CRegFolder::_AttributesOf(struct IDLREGITEM &amp; volatile *,unsigned long,unsigned long *)%0a%0dlong CRegFolder::_ParseItemName(unsigned short const *,struct HWND__*,struct IBindCtx *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CDesktopFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dvirtual long CRegFolder::ParseDisplayName(struct HWND__*,struct IBindCtx *,unsigned short *,unsigned long *,struct _ITEMIDLIST_RELATIVE * *,unsigned long *)%0a%0dSHParseDisplayName%0a%0dILCreateFromPathEx%0a%0dlong CShellLink::_SetPIDLPath(struct _ITEMIDLIST_ABSOLUTE const *,unsigned short const *,enum SLSPPFLAGS)%0a%0dvirtual long CShellLink::SetPath(unsigned short const *)%0a%0dpublic: static enum nsresult __cdecl mozilla::widget::JumpListShortcut::GetShellLink(class nsCOMPtr&lt;class nsIJumpListItem&gt; &amp; __ptr64,class RefPtr&lt;struct IShellLinkW&gt; &amp; __ptr64,class nsCOMPtr&lt;class nsIThread&gt; &amp; __ptr64)%0a%0dpublic: virtual enum nsresult __cdecl mozilla::widget::JumpListBuilder::AddListToBuild(short,class nsIArray * __ptr64,class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,bool * __ptr64) __ptr64%0a%0d[js] WTBJL__buildTasks%0a%0dprotected: static struct already_AddRefed&lt;class XPCNativeInterface&gt; __cdecl XPCNativeInterface::NewInstance(struct JSContext * __ptr64,struct nsXPTInterfaceInfo const * __ptr64)%0a%0d[js] WTBJL__getHandlerAppItem%0a%0d[js] getCurrentState%0a%0dpublic: class mozilla::dom::Element * __ptr64 __cdecl nsINode::QuerySelector(class nsTSubstring&lt;char16_t&gt; const &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::dom::MutationObservers::NotifyContentRemoved(class nsINode * __ptr64,class nsIContent * __ptr64,class nsIContent * __ptr64)%0a%0dpublic: virtual void __cdecl nsINode::RemoveChildNode(class nsIContent * __ptr64,bool) __ptr64%0a%0dpublic: class nsINode * __ptr64 __cdecl nsINode::RemoveChild(class nsINode &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dmozilla::dom::Node_Binding::removeChild%0a%0dNode.removeChild%0a%0dbool __cdecl mozilla::dom::binding_detail::GenericMethod&lt;struct mozilla::dom::binding_detail::NormalThisPolicy,struct mozilla::dom::binding_detail::ThrowExceptions&gt;(struct JSContext * __ptr64,unsigned int,class JS::Value * __ptr64)%0a%0d[js] removeChild%0a%0d[js] unmountHostComponents%0a%0d[js] commitDeletion%0a%0d[js] commitAllHostEffects%0a%0d[js] commitRoot%0a%0d[js] completeRoot/&lt;%0a%0d[js] unstable_runWithPriority%0a%0d[js] completeRoot%0a%0d[js] performWorkOnRoot%0a%0d[js] performWork%0a%0d[js] performSyncWork%0a%0dbool __cdecl JS::Call(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class JS::Handle&lt;class JS::Value&gt;,class JS::HandleValueArray const &amp; __ptr64,class JS::MutableHandle&lt;class JS::Value&gt;)%0a%0dprivate: void __cdecl mozilla::dom::EventListener::HandleEvent(struct JSContext * __ptr64,class JS::Handle&lt;class JS::Value&gt;,class mozilla::dom::Event &amp; __ptr64,class mozilla::ErrorResult &amp; __ptr64) __ptr64%0a%0dprotected: enum nsresult __cdecl mozilla::EventListenerManager::HandleEventSubType(struct mozilla::EventListenerManager::Listener * __ptr64,class mozilla::dom::Event * __ptr64,class mozilla::dom::EventTarget * __ptr64) __ptr64%0a%0dprotected: void __cdecl mozilla::EventListenerManager::HandleEventInternal(class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64 * __ptr64,class mozilla::dom::EventTarget * __ptr64,enum nsEventStatus * __ptr64,bool) __ptr64%0a%0dpublic: void __cdecl mozilla::EventTargetChainItem::HandleEvent(class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64) __ptr64%0a%0dpublic: static void __cdecl mozilla::EventTargetChainItem::HandleEventTargetChain(class nsTArray&lt;class mozilla::EventTargetChainItem&gt; &amp; __ptr64,class mozilla::EventChainPostVisitor &amp; __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class mozilla::ELMCreationDetector &amp; __ptr64)%0a%0dpublic: static enum nsresult __cdecl mozilla::EventDispatcher::Dispatch(class nsISupports * __ptr64,class nsPresContext * __ptr64,class mozilla::WidgetEvent * __ptr64,class mozilla::dom::Event * __ptr64,enum nsEventStatus * __ptr64,class mozilla::EventDispatchingCallback * __ptr64,class nsTArray&lt;class mozilla::dom::EventTarget * __ptr64&gt; * __ptr64)"><text id="SvgjsText3723" font-family="Helvetica, Arial, sans-serif" x="1619" y="3303.8015625" font-size="5" size="5" svgjs:data="{&quot;leading&quot;:&quot;1.3&quot;}"><tspan id="SvgjsTspan3724" dy="6.5" x="1619" svgjs:data="{&quot;newLined&quot;:true}">0x230bf55e810</tspan></text></a></svg>